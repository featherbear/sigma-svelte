{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../lib/sigma.require.js","../../lib/plugins/sigma.parsers.gexf.min.js","../../src/Sigma.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value' || descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j];\n                if (attributes[attribute.name]) {\n                    j++;\n                }\n                else {\n                    node.removeAttribute(attribute.name);\n                }\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    let unsubscribe;\n    if (is_crossorigin()) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        detach(iframe);\n        if (unsubscribe)\n            unsubscribe();\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next, lookup.has(block.key));\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.21.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n",";(function(undefined) {\n  'use strict';\n\n  var __instances = {};\n\n  /**\n   * This is the sigma instances constructor. One instance of sigma represent\n   * one graph. It is possible to represent this grapĥ with several renderers\n   * at the same time. By default, the default renderer (WebGL + Canvas\n   * polyfill) will be used as the only renderer, with the container specified\n   * in the configuration.\n   *\n   * @param  {?*}    conf The configuration of the instance. There are a lot of\n   *                      different recognized forms to instantiate sigma, check\n   *                      example files, documentation in this file and unit\n   *                      tests to know more.\n   * @return {sigma}      The fresh new sigma instance.\n   *\n   * Instanciating sigma:\n   * ********************\n   * If no parameter is given to the constructor, the instance will be created\n   * without any renderer or camera. It will just instantiate the graph, and\n   * other modules will have to be instantiated through the public methods,\n   * like \"addRenderer\" etc:\n   *\n   *  > s0 = new sigma();\n   *  > s0.addRenderer({\n   *  >   type: 'canvas',\n   *  >   container: 'my-container-id'\n   *  > });\n   *\n   * In most of the cases, sigma will simply be used with the default renderer.\n   * Then, since the only required parameter is the DOM container, there are\n   * some simpler way to call the constructor. The four following calls do the\n   * exact same things:\n   *\n   *  > s1 = new sigma('my-container-id');\n   *  > s2 = new sigma(document.getElementById('my-container-id'));\n   *  > s3 = new sigma({\n   *  >   container: document.getElementById('my-container-id')\n   *  > });\n   *  > s4 = new sigma({\n   *  >   renderers: [{\n   *  >     container: document.getElementById('my-container-id')\n   *  >   }]\n   *  > });\n   *\n   * Recognized parameters:\n   * **********************\n   * Here is the exhaustive list of every accepted parameters, when calling the\n   * constructor with to top level configuration object (fourth case in the\n   * previous examples):\n   *\n   *   {?string} id        The id of the instance. It will be generated\n   *                       automatically if not specified.\n   *   {?array}  renderers An array containing objects describing renderers.\n   *   {?object} graph     An object containing an array of nodes and an array\n   *                       of edges, to avoid having to add them by hand later.\n   *   {?object} settings  An object containing instance specific settings that\n   *                       will override the default ones defined in the object\n   *                       sigma.settings.\n   */\n  var sigma = function(conf) {\n    // Local variables:\n    // ****************\n    var i,\n        l,\n        a,\n        c,\n        o,\n        id;\n\n    sigma.classes.dispatcher.extend(this);\n\n    // Private attributes:\n    // *******************\n    var _self = this,\n        _conf = conf || {};\n\n    // Little shortcut:\n    // ****************\n    // The configuration is supposed to have a list of the configuration\n    // objects for each renderer.\n    //  - If there are no configuration at all, then nothing is done.\n    //  - If there are no renderer list, the given configuration object will be\n    //    considered as describing the first and only renderer.\n    //  - If there are no renderer list nor \"container\" object, it will be\n    //    considered as the container itself (a DOM element).\n    //  - If the argument passed to sigma() is a string, it will be considered\n    //    as the ID of the DOM container.\n    if (\n      typeof _conf === 'string' ||\n      _conf instanceof HTMLElement\n    )\n      _conf = {\n        renderers: [_conf]\n      };\n    else if (Object.prototype.toString.call(_conf) === '[object Array]')\n      _conf = {\n        renderers: _conf\n      };\n\n    // Also check \"renderer\" and \"container\" keys:\n    o = _conf.renderers || _conf.renderer || _conf.container;\n    if (!_conf.renderers || _conf.renderers.length === 0)\n      if (\n        typeof o === 'string' ||\n        o instanceof HTMLElement ||\n        (typeof o === 'object' && 'container' in o)\n      )\n        _conf.renderers = [o];\n\n    // Recense the instance:\n    if (_conf.id) {\n      if (__instances[_conf.id])\n        throw 'sigma: Instance \"' + _conf.id + '\" already exists.';\n      Object.defineProperty(this, 'id', {\n        value: _conf.id\n      });\n    } else {\n      id = 0;\n      while (__instances[id])\n        id++;\n      Object.defineProperty(this, 'id', {\n        value: '' + id\n      });\n    }\n    __instances[this.id] = this;\n\n    // Initialize settings function:\n    this.settings = new sigma.classes.configurable(\n      sigma.settings,\n      _conf.settings || {}\n    );\n\n    // Initialize locked attributes:\n    Object.defineProperty(this, 'graph', {\n      value: new sigma.classes.graph(this.settings),\n      configurable: true\n    });\n    Object.defineProperty(this, 'middlewares', {\n      value: [],\n      configurable: true\n    });\n    Object.defineProperty(this, 'cameras', {\n      value: {},\n      configurable: true\n    });\n    Object.defineProperty(this, 'renderers', {\n      value: {},\n      configurable: true\n    });\n    Object.defineProperty(this, 'renderersPerCamera', {\n      value: {},\n      configurable: true\n    });\n    Object.defineProperty(this, 'cameraFrames', {\n      value: {},\n      configurable: true\n    });\n    Object.defineProperty(this, 'camera', {\n      get: function() {\n        return this.cameras[0];\n      }\n    });\n    Object.defineProperty(this, 'events', {\n      value: [\n        'click',\n        'rightClick',\n        'clickStage',\n        'doubleClickStage',\n        'rightClickStage',\n        'clickNode',\n        'clickNodes',\n        'doubleClickNode',\n        'doubleClickNodes',\n        'rightClickNode',\n        'rightClickNodes',\n        'overNode',\n        'overNodes',\n        'outNode',\n        'outNodes',\n        'downNode',\n        'downNodes',\n        'upNode',\n        'upNodes'\n      ],\n      configurable: true\n    });\n\n    // Add a custom handler, to redispatch events from renderers:\n    this._handler = (function(e) {\n      var k,\n          data = {};\n\n      for (k in e.data)\n        data[k] = e.data[k];\n\n      data.renderer = e.target;\n      this.dispatchEvent(e.type, data);\n    }).bind(this);\n\n    // Initialize renderers:\n    a = _conf.renderers || [];\n    for (i = 0, l = a.length; i < l; i++)\n      this.addRenderer(a[i]);\n\n    // Initialize middlewares:\n    a = _conf.middlewares || [];\n    for (i = 0, l = a.length; i < l; i++)\n      this.middlewares.push(\n        typeof a[i] === 'string' ?\n          sigma.middlewares[a[i]] :\n          a[i]\n      );\n\n    // Check if there is already a graph to fill in:\n    if (typeof _conf.graph === 'object' && _conf.graph) {\n      this.graph.read(_conf.graph);\n\n      // If a graph is given to the to the instance, the \"refresh\" method is\n      // directly called:\n      this.refresh();\n    }\n\n    // Deal with resize:\n    window.addEventListener('resize', function() {\n      if (_self.settings)\n        _self.refresh();\n    });\n  };\n\n\n\n\n  /**\n   * This methods will instantiate and reference a new camera. If no id is\n   * specified, then an automatic id will be generated.\n   *\n   * @param  {?string}              id Eventually the camera id.\n   * @return {sigma.classes.camera}    The fresh new camera instance.\n   */\n  sigma.prototype.addCamera = function(id) {\n    var self = this,\n        camera;\n\n    if (!arguments.length) {\n      id = 0;\n      while (this.cameras['' + id])\n        id++;\n      id = '' + id;\n    }\n\n    if (this.cameras[id])\n      throw 'sigma.addCamera: The camera \"' + id + '\" already exists.';\n\n    camera = new sigma.classes.camera(id, this.graph, this.settings);\n    this.cameras[id] = camera;\n\n    // Add a quadtree to the camera:\n    camera.quadtree = new sigma.classes.quad();\n\n    // Add an edgequadtree to the camera:\n    if (sigma.classes.edgequad !== undefined) {\n      camera.edgequadtree = new sigma.classes.edgequad();\n    }\n\n    camera.bind('coordinatesUpdated', function(e) {\n      self.renderCamera(camera, camera.isAnimated);\n    });\n\n    this.renderersPerCamera[id] = [];\n\n    return camera;\n  };\n\n  /**\n   * This method kills a camera, and every renderer attached to it.\n   *\n   * @param  {string|camera} v The camera to kill or its ID.\n   * @return {sigma}           Returns the instance.\n   */\n  sigma.prototype.killCamera = function(v) {\n    v = typeof v === 'string' ? this.cameras[v] : v;\n\n    if (!v)\n      throw 'sigma.killCamera: The camera is undefined.';\n\n    var i,\n        l,\n        a = this.renderersPerCamera[v.id];\n\n    for (l = a.length, i = l - 1; i >= 0; i--)\n      this.killRenderer(a[i]);\n\n    delete this.renderersPerCamera[v.id];\n    delete this.cameraFrames[v.id];\n    delete this.cameras[v.id];\n\n    if (v.kill)\n      v.kill();\n\n    return this;\n  };\n\n  /**\n   * This methods will instantiate and reference a new renderer. The \"type\"\n   * argument can be the constructor or its name in the \"sigma.renderers\"\n   * package. If no type is specified, then \"sigma.renderers.def\" will be used.\n   * If no id is specified, then an automatic id will be generated.\n   *\n   * @param  {?object}  options Eventually some options to give to the renderer\n   *                            constructor.\n   * @return {renderer}         The fresh new renderer instance.\n   *\n   * Recognized parameters:\n   * **********************\n   * Here is the exhaustive list of every accepted parameters in the \"options\"\n   * object:\n   *\n   *   {?string}            id     Eventually the renderer id.\n   *   {?(function|string)} type   Eventually the renderer constructor or its\n   *                               name in the \"sigma.renderers\" package.\n   *   {?(camera|string)}   camera Eventually the renderer camera or its\n   *                               id.\n   */\n  sigma.prototype.addRenderer = function(options) {\n    var id,\n        fn,\n        camera,\n        renderer,\n        o = options || {};\n\n    // Polymorphism:\n    if (typeof o === 'string')\n      o = {\n        container: document.getElementById(o)\n      };\n    else if (o instanceof HTMLElement)\n      o = {\n        container: o\n      };\n\n    // If the container still is a string, we get it by id\n    if (typeof o.container === 'string')\n      o.container = document.getElementById(o.container);\n\n    // Reference the new renderer:\n    if (!('id' in o)) {\n      id = 0;\n      while (this.renderers['' + id])\n        id++;\n      id = '' + id;\n    } else\n      id = o.id;\n\n    if (this.renderers[id])\n      throw 'sigma.addRenderer: The renderer \"' + id + '\" already exists.';\n\n    // Find the good constructor:\n    fn = typeof o.type === 'function' ? o.type : sigma.renderers[o.type];\n    fn = fn || sigma.renderers.def;\n\n    // Find the good camera:\n    camera = 'camera' in o ?\n      (\n        o.camera instanceof sigma.classes.camera ?\n          o.camera :\n          this.cameras[o.camera] || this.addCamera(o.camera)\n      ) :\n      this.addCamera();\n\n    if (this.cameras[camera.id] !== camera)\n      throw 'sigma.addRenderer: The camera is not properly referenced.';\n\n    // Instantiate:\n    renderer = new fn(this.graph, camera, this.settings, o);\n    this.renderers[id] = renderer;\n    Object.defineProperty(renderer, 'id', {\n      value: id\n    });\n\n    // Bind events:\n    if (renderer.bind)\n      renderer.bind(\n        [\n          'click',\n          'rightClick',\n          'clickStage',\n          'doubleClickStage',\n          'rightClickStage',\n          'clickNode',\n          'clickNodes',\n          'clickEdge',\n          'clickEdges',\n          'doubleClickNode',\n          'doubleClickNodes',\n          'doubleClickEdge',\n          'doubleClickEdges',\n          'rightClickNode',\n          'rightClickNodes',\n          'rightClickEdge',\n          'rightClickEdges',\n          'overNode',\n          'overNodes',\n          'overEdge',\n          'overEdges',\n          'outNode',\n          'outNodes',\n          'outEdge',\n          'outEdges',\n          'downNode',\n          'downNodes',\n          'downEdge',\n          'downEdges',\n          'upNode',\n          'upNodes',\n          'upEdge',\n          'upEdges'\n        ],\n        this._handler\n      );\n\n    // Reference the renderer by its camera:\n    this.renderersPerCamera[camera.id].push(renderer);\n\n    return renderer;\n  };\n\n  /**\n   * This method kills a renderer.\n   *\n   * @param  {string|renderer} v The renderer to kill or its ID.\n   * @return {sigma}             Returns the instance.\n   */\n  sigma.prototype.killRenderer = function(v) {\n    v = typeof v === 'string' ? this.renderers[v] : v;\n\n    if (!v)\n      throw 'sigma.killRenderer: The renderer is undefined.';\n\n    var a = this.renderersPerCamera[v.camera.id],\n        i = a.indexOf(v);\n\n    if (i >= 0)\n      a.splice(i, 1);\n\n    if (v.kill)\n      v.kill();\n\n    delete this.renderers[v.id];\n\n    return this;\n  };\n\n\n\n\n  /**\n   * This method calls the \"render\" method of each renderer, with the same\n   * arguments than the \"render\" method, but will also check if the renderer\n   * has a \"process\" method, and call it if it exists.\n   *\n   * It is useful for quadtrees or WebGL processing, for instance.\n   *\n   * @param  {?object}  options Eventually some options to give to the refresh\n   *                            method.\n   * @return {sigma}            Returns the instance itself.\n   *\n   * Recognized parameters:\n   * **********************\n   * Here is the exhaustive list of every accepted parameters in the \"options\"\n   * object:\n   *\n   *   {?boolean} skipIndexation A flag specifying wether or not the refresh\n   *                             function should reindex the graph in the\n   *                             quadtrees or not (default: false).\n   */\n  sigma.prototype.refresh = function(options) {\n    var i,\n        l,\n        k,\n        a,\n        c,\n        bounds,\n        prefix = 0;\n\n    options = options || {};\n\n    // Call each middleware:\n    a = this.middlewares || [];\n    for (i = 0, l = a.length; i < l; i++)\n      a[i].call(\n        this,\n        (i === 0) ? '' : 'tmp' + prefix + ':',\n        (i === l - 1) ? 'ready:' : ('tmp' + (++prefix) + ':')\n      );\n\n    // Then, for each camera, call the \"rescale\" middleware, unless the\n    // settings specify not to:\n    for (k in this.cameras) {\n      c = this.cameras[k];\n      if (\n        c.settings('autoRescale') &&\n        this.renderersPerCamera[c.id] &&\n        this.renderersPerCamera[c.id].length\n      )\n        sigma.middlewares.rescale.call(\n          this,\n          a.length ? 'ready:' : '',\n          c.readPrefix,\n          {\n            width: this.renderersPerCamera[c.id][0].width,\n            height: this.renderersPerCamera[c.id][0].height\n          }\n        );\n      else\n        sigma.middlewares.copy.call(\n          this,\n          a.length ? 'ready:' : '',\n          c.readPrefix\n        );\n\n      if (!options.skipIndexation) {\n        // Find graph boundaries:\n        bounds = sigma.utils.getBoundaries(\n          this.graph,\n          c.readPrefix\n        );\n\n        // Refresh quadtree:\n        c.quadtree.index(this.graph.nodes(), {\n          prefix: c.readPrefix,\n          bounds: {\n            x: bounds.minX,\n            y: bounds.minY,\n            width: bounds.maxX - bounds.minX,\n            height: bounds.maxY - bounds.minY\n          }\n        });\n\n        // Refresh edgequadtree:\n        if (\n          c.edgequadtree !== undefined &&\n          c.settings('drawEdges') &&\n          c.settings('enableEdgeHovering')\n        ) {\n          c.edgequadtree.index(this.graph, {\n            prefix: c.readPrefix,\n            bounds: {\n              x: bounds.minX,\n              y: bounds.minY,\n              width: bounds.maxX - bounds.minX,\n              height: bounds.maxY - bounds.minY\n            }\n          });\n        }\n      }\n    }\n\n    // Call each renderer:\n    a = Object.keys(this.renderers);\n    for (i = 0, l = a.length; i < l; i++)\n      if (this.renderers[a[i]].process) {\n        if (this.settings('skipErrors'))\n          try {\n            this.renderers[a[i]].process();\n          } catch (e) {\n            console.log(\n              'Warning: The renderer \"' + a[i] + '\" crashed on \".process()\"'\n            );\n          }\n        else\n          this.renderers[a[i]].process();\n      }\n\n    this.render();\n\n    return this;\n  };\n\n  /**\n   * This method calls the \"render\" method of each renderer.\n   *\n   * @return {sigma} Returns the instance itself.\n   */\n  sigma.prototype.render = function() {\n    var i,\n        l,\n        a,\n        prefix = 0;\n\n    // Call each renderer:\n    a = Object.keys(this.renderers);\n    for (i = 0, l = a.length; i < l; i++)\n      if (this.settings('skipErrors'))\n        try {\n          this.renderers[a[i]].render();\n        } catch (e) {\n          if (this.settings('verbose'))\n            console.log(\n              'Warning: The renderer \"' + a[i] + '\" crashed on \".render()\"'\n            );\n        }\n      else\n        this.renderers[a[i]].render();\n\n    return this;\n  };\n\n  /**\n   * This method calls the \"render\" method of each renderer that is bound to\n   * the specified camera. To improve the performances, if this method is\n   * called too often, the number of effective renderings is limitated to one\n   * per frame, unless you are using the \"force\" flag.\n   *\n   * @param  {sigma.classes.camera} camera The camera to render.\n   * @param  {?boolean}             force  If true, will render the camera\n   *                                       directly.\n   * @return {sigma}                       Returns the instance itself.\n   */\n  sigma.prototype.renderCamera = function(camera, force) {\n    var i,\n        l,\n        a,\n        self = this;\n\n    if (force) {\n      a = this.renderersPerCamera[camera.id];\n      for (i = 0, l = a.length; i < l; i++)\n        if (this.settings('skipErrors'))\n          try {\n            a[i].render();\n          } catch (e) {\n            if (this.settings('verbose'))\n              console.log(\n                'Warning: The renderer \"' + a[i].id + '\" crashed on \".render()\"'\n              );\n          }\n        else\n          a[i].render();\n    } else {\n      if (!this.cameraFrames[camera.id]) {\n        a = this.renderersPerCamera[camera.id];\n        for (i = 0, l = a.length; i < l; i++)\n          if (this.settings('skipErrors'))\n            try {\n              a[i].render();\n            } catch (e) {\n              if (this.settings('verbose'))\n                console.log(\n                  'Warning: The renderer \"' +\n                    a[i].id +\n                    '\" crashed on \".render()\"'\n                );\n            }\n          else\n            a[i].render();\n\n        this.cameraFrames[camera.id] = requestAnimationFrame(function() {\n          delete self.cameraFrames[camera.id];\n        });\n      }\n    }\n\n    return this;\n  };\n\n  /**\n   * This method calls the \"kill\" method of each module and destroys any\n   * reference from the instance.\n   */\n  sigma.prototype.kill = function() {\n    var k;\n\n    // Dispatching event\n    this.dispatchEvent('kill');\n\n    // Kill graph:\n    this.graph.kill();\n\n    // Kill middlewares:\n    delete this.middlewares;\n\n    // Kill each renderer:\n    for (k in this.renderers)\n      this.killRenderer(this.renderers[k]);\n\n    // Kill each camera:\n    for (k in this.cameras)\n      this.killCamera(this.cameras[k]);\n\n    delete this.renderers;\n    delete this.cameras;\n\n    // Kill everything else:\n    for (k in this)\n      if (this.hasOwnProperty(k))\n        delete this[k];\n\n    delete __instances[this.id];\n  };\n\n\n\n\n  /**\n   * Returns a clone of the instances object or a specific running instance.\n   *\n   * @param  {?string} id Eventually an instance ID.\n   * @return {object}     The related instance or a clone of the instances\n   *                      object.\n   */\n  sigma.instances = function(id) {\n    return arguments.length ?\n      __instances[id] :\n      sigma.utils.extend({}, __instances);\n  };\n\n\n\n  /**\n   * The current version of sigma:\n   */\n  sigma.version = '1.2.1';\n\n\n\n\n  /**\n   * EXPORT:\n   * *******\n   */\n  if (typeof this.sigma !== 'undefined')\n    throw 'An object called sigma is already in the global scope.';\n\n  this.sigma = sigma;\n\n}).call(this);\n\n/**\n * conrad.js is a tiny JavaScript jobs scheduler,\n *\n * Version: 0.1.0\n * Sources: http://github.com/jacomyal/conrad.js\n * Doc:     http://github.com/jacomyal/conrad.js#readme\n *\n * License:\n * --------\n * Copyright © 2013 Alexis Jacomy, Sciences-Po médialab\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * The Software is provided \"as is\", without warranty of any kind, express or\n * implied, including but not limited to the warranties of merchantability,\n * fitness for a particular purpose and noninfringement. In no event shall the\n * authors or copyright holders be liable for any claim, damages or other\n * liability, whether in an action of contract, tort or otherwise, arising\n * from, out of or in connection with the software or the use or other dealings\n * in the Software.\n */\n(function(global) {\n  'use strict';\n\n  // Check that conrad.js has not been loaded yet:\n  if (global.conrad)\n    throw new Error('conrad already exists');\n\n\n  /**\n   * PRIVATE VARIABLES:\n   * ******************\n   */\n\n  /**\n   * A flag indicating whether conrad is running or not.\n   *\n   * @type {Number}\n   */\n  var _lastFrameTime;\n\n  /**\n   * A flag indicating whether conrad is running or not.\n   *\n   * @type {Boolean}\n   */\n  var _isRunning = false;\n\n  /**\n   * The hash of registered jobs. Each job must at least have a unique ID\n   * under the key \"id\" and a function under the key \"job\". This hash\n   * contains each running job and each waiting job.\n   *\n   * @type {Object}\n   */\n  var _jobs = {};\n\n  /**\n   * The hash of currently running jobs.\n   *\n   * @type {Object}\n   */\n  var _runningJobs = {};\n\n  /**\n   * The array of currently running jobs, sorted by priority.\n   *\n   * @type {Array}\n   */\n  var _sortedByPriorityJobs = [];\n\n  /**\n   * The array of currently waiting jobs.\n   *\n   * @type {Object}\n   */\n  var _waitingJobs = {};\n\n  /**\n   * The array of finished jobs. They are stored in an array, since two jobs\n   * with the same \"id\" can happen at two different times.\n   *\n   * @type {Array}\n   */\n  var _doneJobs = [];\n\n  /**\n   * A dirty flag to keep conrad from starting: Indeed, when addJob() is called\n   * with several jobs, conrad must be started only at the end. This flag keeps\n   * me from duplicating the code that effectively adds a job.\n   *\n   * @type {Boolean}\n   */\n  var _noStart = false;\n\n  /**\n   * An hash containing some global settings about how conrad.js should\n   * behave.\n   *\n   * @type {Object}\n   */\n  var _parameters = {\n    frameDuration: 20,\n    history: true\n  };\n\n  /**\n   * This object contains every handlers bound to conrad events. It does not\n   * requirea any DOM implementation, since the events are all JavaScript.\n   *\n   * @type {Object}\n   */\n  var _handlers = Object.create(null);\n\n\n  /**\n   * PRIVATE FUNCTIONS:\n   * ******************\n   */\n\n  /**\n   * Will execute the handler everytime that the indicated event (or the\n   * indicated events) will be triggered.\n   *\n   * @param  {string|array|object} events  The name of the event (or the events\n   *                                       separated by spaces).\n   * @param  {function(Object)}    handler The handler to bind.\n   * @return {Object}                      Returns conrad.\n   */\n  function _bind(events, handler) {\n    var i,\n        i_end,\n        event,\n        eArray;\n\n    if (!arguments.length)\n      return;\n    else if (\n      arguments.length === 1 &&\n      Object(arguments[0]) === arguments[0]\n    )\n      for (events in arguments[0])\n        _bind(events, arguments[0][events]);\n    else if (arguments.length > 1) {\n      eArray =\n        Array.isArray(events) ?\n          events :\n          events.split(/ /);\n\n      for (i = 0, i_end = eArray.length; i !== i_end; i += 1) {\n        event = eArray[i];\n\n        if (!_handlers[event])\n          _handlers[event] = [];\n\n        // Using an object instead of directly the handler will make possible\n        // later to add flags\n        _handlers[event].push({\n          handler: handler\n        });\n      }\n    }\n  }\n\n  /**\n   * Removes the handler from a specified event (or specified events).\n   *\n   * @param  {?string}           events  The name of the event (or the events\n   *                                     separated by spaces). If undefined,\n   *                                     then all handlers are removed.\n   * @param  {?function(Object)} handler The handler to unbind. If undefined,\n   *                                     each handler bound to the event or the\n   *                                     events will be removed.\n   * @return {Object}            Returns conrad.\n   */\n  function _unbind(events, handler) {\n    var i,\n        i_end,\n        j,\n        j_end,\n        a,\n        event,\n        eArray = Array.isArray(events) ?\n                   events :\n                   events.split(/ /);\n\n    if (!arguments.length)\n      _handlers = Object.create(null);\n    else if (handler) {\n      for (i = 0, i_end = eArray.length; i !== i_end; i += 1) {\n        event = eArray[i];\n        if (_handlers[event]) {\n          a = [];\n          for (j = 0, j_end = _handlers[event].length; j !== j_end; j += 1)\n            if (_handlers[event][j].handler !== handler)\n              a.push(_handlers[event][j]);\n\n          _handlers[event] = a;\n        }\n\n        if (_handlers[event] && _handlers[event].length === 0)\n          delete _handlers[event];\n      }\n    } else\n      for (i = 0, i_end = eArray.length; i !== i_end; i += 1)\n        delete _handlers[eArray[i]];\n  }\n\n  /**\n   * Executes each handler bound to the event.\n   *\n   * @param  {string}  events The name of the event (or the events separated\n   *                          by spaces).\n   * @param  {?Object} data   The content of the event (optional).\n   * @return {Object}         Returns conrad.\n   */\n  function _dispatch(events, data) {\n    var i,\n        j,\n        i_end,\n        j_end,\n        event,\n        eventName,\n        eArray = Array.isArray(events) ?\n                   events :\n                   events.split(/ /);\n\n    data = data === undefined ? {} : data;\n\n    for (i = 0, i_end = eArray.length; i !== i_end; i += 1) {\n      eventName = eArray[i];\n\n      if (_handlers[eventName]) {\n        event = {\n          type: eventName,\n          data: data || {}\n        };\n\n        for (j = 0, j_end = _handlers[eventName].length; j !== j_end; j += 1)\n          try {\n            _handlers[eventName][j].handler(event);\n          } catch (e) {}\n      }\n    }\n  }\n\n  /**\n   * Executes the most prioritary job once, and deals with filling the stats\n   * (done, time, averageTime, currentTime, etc...).\n   *\n   * @return {?Object} Returns the job object if it has to be killed, null else.\n   */\n  function _executeFirstJob() {\n    var i,\n        l,\n        test,\n        kill,\n        pushed = false,\n        time = __dateNow(),\n        job = _sortedByPriorityJobs.shift();\n\n    // Execute the job and look at the result:\n    test = job.job();\n\n    // Deal with stats:\n    time = __dateNow() - time;\n    job.done++;\n    job.time += time;\n    job.currentTime += time;\n    job.weightTime = job.currentTime / (job.weight || 1);\n    job.averageTime = job.time / job.done;\n\n    // Check if the job has to be killed:\n    kill = job.count ? (job.count <= job.done) : !test;\n\n    // Reset priorities:\n    if (!kill) {\n      for (i = 0, l = _sortedByPriorityJobs.length; i < l; i++)\n        if (_sortedByPriorityJobs[i].weightTime > job.weightTime) {\n          _sortedByPriorityJobs.splice(i, 0, job);\n          pushed = true;\n          break;\n        }\n\n      if (!pushed)\n        _sortedByPriorityJobs.push(job);\n    }\n\n    return kill ? job : null;\n  }\n\n  /**\n   * Activates a job, by adding it to the _runningJobs object and the\n   * _sortedByPriorityJobs array. It also initializes its currentTime value.\n   *\n   * @param  {Object} job The job to activate.\n   */\n  function _activateJob(job) {\n    var l = _sortedByPriorityJobs.length;\n\n    // Add the job to the running jobs:\n    _runningJobs[job.id] = job;\n    job.status = 'running';\n\n    // Add the job to the priorities:\n    if (l) {\n      job.weightTime = _sortedByPriorityJobs[l - 1].weightTime;\n      job.currentTime = job.weightTime * (job.weight || 1);\n    }\n\n    // Initialize the job and dispatch:\n    job.startTime = __dateNow();\n    _dispatch('jobStarted', __clone(job));\n\n    _sortedByPriorityJobs.push(job);\n  }\n\n  /**\n   * The main loop of conrad.js:\n   *  . It executes job such that they all occupate the same processing time.\n   *  . It stops jobs that do not need to be executed anymore.\n   *  . It triggers callbacks when it is relevant.\n   *  . It starts waiting jobs when they need to be started.\n   *  . It injects frames to keep a constant frapes per second ratio.\n   *  . It stops itself when there are no more jobs to execute.\n   */\n  function _loop() {\n    var k,\n        o,\n        l,\n        job,\n        time,\n        deadJob;\n\n    // Deal with the newly added jobs (the _jobs object):\n    for (k in _jobs) {\n      job = _jobs[k];\n\n      if (job.after)\n        _waitingJobs[k] = job;\n      else\n        _activateJob(job);\n\n      delete _jobs[k];\n    }\n\n    // Set the _isRunning flag to false if there are no running job:\n    _isRunning = !!_sortedByPriorityJobs.length;\n\n    // Deal with the running jobs (the _runningJobs object):\n    while (\n      _sortedByPriorityJobs.length &&\n      __dateNow() - _lastFrameTime < _parameters.frameDuration\n    ) {\n      deadJob = _executeFirstJob();\n\n      // Deal with the case where the job has ended:\n      if (deadJob) {\n        _killJob(deadJob.id);\n\n        // Check for waiting jobs:\n        for (k in _waitingJobs)\n          if (_waitingJobs[k].after === deadJob.id) {\n            _activateJob(_waitingJobs[k]);\n            delete _waitingJobs[k];\n          }\n      }\n    }\n\n    // Check if conrad still has jobs to deal with, and kill it if not:\n    if (_isRunning) {\n      // Update the _lastFrameTime:\n      _lastFrameTime = __dateNow();\n\n      _dispatch('enterFrame');\n      setTimeout(_loop, 0);\n    } else\n      _dispatch('stop');\n  }\n\n  /**\n   * Adds one or more jobs, and starts the loop if no job was running before. A\n   * job is at least a unique string \"id\" and a function, and there are some\n   * parameters that you can specify for each job to modify the way conrad will\n   * execute it. If a job is added with the \"id\" of another job that is waiting\n   * or still running, an error will be thrown.\n   *\n   * When a job is added, it is referenced in the _jobs object, by its id.\n   * Then, if it has to be executed right now, it will be also referenced in\n   * the _runningJobs object. If it has to wait, then it will be added into the\n   * _waitingJobs object, until it can start.\n   *\n   * Keep reading this documentation to see how to call this method.\n   *\n   * @return {Object} Returns conrad.\n   *\n   * Adding one job:\n   * ***************\n   * Basically, a job is defined by its string id and a function (the job). It\n   * is also possible to add some parameters:\n   *\n   *  > conrad.addJob('myJobId', myJobFunction);\n   *  > conrad.addJob('myJobId', {\n   *  >   job: myJobFunction,\n   *  >   someParameter: someValue\n   *  > });\n   *  > conrad.addJob({\n   *  >   id: 'myJobId',\n   *  >   job: myJobFunction,\n   *  >   someParameter: someValue\n   *  > });\n   *\n   * Adding several jobs:\n   * ********************\n   * When adding several jobs at the same time, it is possible to specify\n   * parameters for each one individually or for all:\n   *\n   *  > conrad.addJob([\n   *  >   {\n   *  >     id: 'myJobId1',\n   *  >     job: myJobFunction1,\n   *  >     someParameter1: someValue1\n   *  >   },\n   *  >   {\n   *  >     id: 'myJobId2',\n   *  >     job: myJobFunction2,\n   *  >     someParameter2: someValue2\n   *  >   }\n   *  > ], {\n   *  >   someCommonParameter: someCommonValue\n   *  > });\n   *  > conrad.addJob({\n   *  >   myJobId1: {,\n   *  >     job: myJobFunction1,\n   *  >     someParameter1: someValue1\n   *  >   },\n   *  >   myJobId2: {,\n   *  >     job: myJobFunction2,\n   *  >     someParameter2: someValue2\n   *  >   }\n   *  > }, {\n   *  >   someCommonParameter: someCommonValue\n   *  > });\n   *  > conrad.addJob({\n   *  >   myJobId1: myJobFunction1,\n   *  >   myJobId2: myJobFunction2\n   *  > }, {\n   *  >   someCommonParameter: someCommonValue\n   *  > });\n   *\n   *  Recognized parameters:\n   *  **********************\n   *  Here is the exhaustive list of every accepted parameters:\n   *\n   *    {?Function} end      A callback to execute when the job is ended. It is\n   *                         not executed if the job is killed instead of ended\n   *                         \"naturally\".\n   *    {?Integer}  count    The number of time the job has to be executed.\n   *    {?Number}   weight   If specified, the job will be executed as it was\n   *                         added \"weight\" times.\n   *    {?String}   after    The id of another job (eventually not added yet).\n   *                         If specified, this job will start only when the\n   *                         specified \"after\" job is ended.\n   */\n  function _addJob(v1, v2) {\n    var i,\n        l,\n        o;\n\n    // Array of jobs:\n    if (Array.isArray(v1)) {\n      // Keep conrad to start until the last job is added:\n      _noStart = true;\n\n      for (i = 0, l = v1.length; i < l; i++)\n        _addJob(v1[i].id, __extend(v1[i], v2));\n\n      _noStart = false;\n      if (!_isRunning) {\n        // Update the _lastFrameTime:\n        _lastFrameTime = __dateNow();\n\n        _dispatch('start');\n        _loop();\n      }\n    } else if (typeof v1 === 'object') {\n      // One job (object):\n      if (typeof v1.id === 'string')\n        _addJob(v1.id, v1);\n\n      // Hash of jobs:\n      else {\n        // Keep conrad to start until the last job is added:\n        _noStart = true;\n\n        for (i in v1)\n          if (typeof v1[i] === 'function')\n            _addJob(i, __extend({\n              job: v1[i]\n            }, v2));\n          else\n            _addJob(i, __extend(v1[i], v2));\n\n        _noStart = false;\n        if (!_isRunning) {\n          // Update the _lastFrameTime:\n          _lastFrameTime = __dateNow();\n\n          _dispatch('start');\n          _loop();\n        }\n      }\n\n    // One job (string, *):\n    } else if (typeof v1 === 'string') {\n      if (_hasJob(v1))\n        throw new Error(\n          '[conrad.addJob] Job with id \"' + v1 + '\" already exists.'\n        );\n\n      // One job (string, function):\n      if (typeof v2 === 'function') {\n        o = {\n          id: v1,\n          done: 0,\n          time: 0,\n          status: 'waiting',\n          currentTime: 0,\n          averageTime: 0,\n          weightTime: 0,\n          job: v2\n        };\n\n      // One job (string, object):\n      } else if (typeof v2 === 'object') {\n        o = __extend(\n          {\n            id: v1,\n            done: 0,\n            time: 0,\n            status: 'waiting',\n            currentTime: 0,\n            averageTime: 0,\n            weightTime: 0\n          },\n          v2\n        );\n\n      // If none of those cases, throw an error:\n      } else\n        throw new Error('[conrad.addJob] Wrong arguments.');\n\n      // Effectively add the job:\n      _jobs[v1] = o;\n      _dispatch('jobAdded', __clone(o));\n\n      // Check if the loop has to be started:\n      if (!_isRunning && !_noStart) {\n        // Update the _lastFrameTime:\n        _lastFrameTime = __dateNow();\n\n        _dispatch('start');\n        _loop();\n      }\n\n    // If none of those cases, throw an error:\n    } else\n      throw new Error('[conrad.addJob] Wrong arguments.');\n\n    return this;\n  }\n\n  /**\n   * Kills one or more jobs, indicated by their ids. It is only possible to\n   * kill running jobs or waiting jobs. If you try to kill a job that does not\n   * exist or that is already killed, a warning will be thrown.\n   *\n   * @param  {Array|String} v1 A string job id or an array of job ids.\n   * @return {Object}       Returns conrad.\n   */\n  function _killJob(v1) {\n    var i,\n        l,\n        k,\n        a,\n        job,\n        found = false;\n\n    // Array of job ids:\n    if (Array.isArray(v1))\n      for (i = 0, l = v1.length; i < l; i++)\n        _killJob(v1[i]);\n\n    // One job's id:\n    else if (typeof v1 === 'string') {\n      a = [_runningJobs, _waitingJobs, _jobs];\n\n      // Remove the job from the hashes:\n      for (i = 0, l = a.length; i < l; i++)\n        if (v1 in a[i]) {\n          job = a[i][v1];\n\n          if (_parameters.history) {\n            job.status = 'done';\n            _doneJobs.push(job);\n          }\n\n          _dispatch('jobEnded', __clone(job));\n          delete a[i][v1];\n\n          if (typeof job.end === 'function')\n            job.end();\n\n          found = true;\n        }\n\n      // Remove the priorities array:\n      a = _sortedByPriorityJobs;\n      for (i = 0, l = a.length; i < l; i++)\n        if (a[i].id === v1) {\n          a.splice(i, 1);\n          break;\n        }\n\n      if (!found)\n        throw new Error('[conrad.killJob] Job \"' + v1 + '\" not found.');\n\n    // If none of those cases, throw an error:\n    } else\n      throw new Error('[conrad.killJob] Wrong arguments.');\n\n    return this;\n  }\n\n  /**\n   * Kills every running, waiting, and just added jobs.\n   *\n   * @return {Object} Returns conrad.\n   */\n  function _killAll() {\n    var k,\n        jobs = __extend(_jobs, _runningJobs, _waitingJobs);\n\n    // Take every jobs and push them into the _doneJobs object:\n    if (_parameters.history)\n      for (k in jobs) {\n        jobs[k].status = 'done';\n        _doneJobs.push(jobs[k]);\n\n        if (typeof jobs[k].end === 'function')\n          jobs[k].end();\n      }\n\n    // Reinitialize the different jobs lists:\n    _jobs = {};\n    _waitingJobs = {};\n    _runningJobs = {};\n    _sortedByPriorityJobs = [];\n\n    // In case some jobs are added right after the kill:\n    _isRunning = false;\n\n    return this;\n  }\n\n  /**\n   * Returns true if a job with the specified id is currently running or\n   * waiting, and false else.\n   *\n   * @param  {String}  id The id of the job.\n   * @return {?Object} Returns the job object if it exists.\n   */\n  function _hasJob(id) {\n    var job = _jobs[id] || _runningJobs[id] || _waitingJobs[id];\n    return job ? __extend(job) : null;\n  }\n\n  /**\n   * This method will set the setting specified by \"v1\" to the value specified\n   * by \"v2\" if both are given, and else return the current value of the\n   * settings \"v1\".\n   *\n   * @param  {String}   v1 The name of the property.\n   * @param  {?*}       v2 Eventually, a value to set to the specified\n   *                       property.\n   * @return {Object|*} Returns the specified settings value if \"v2\" is not\n   *                    given, and conrad else.\n   */\n  function _settings(v1, v2) {\n    var o;\n\n    if (typeof a1 === 'string' && arguments.length === 1)\n      return _parameters[a1];\n    else {\n      o = (typeof a1 === 'object' && arguments.length === 1) ?\n        a1 || {} :\n        {};\n      if (typeof a1 === 'string')\n        o[a1] = a2;\n\n      for (var k in o)\n        if (o[k] !== undefined)\n          _parameters[k] = o[k];\n        else\n          delete _parameters[k];\n\n      return this;\n    }\n  }\n\n  /**\n   * Returns true if conrad is currently running, and false else.\n   *\n   * @return {Boolean} Returns _isRunning.\n   */\n  function _getIsRunning() {\n    return _isRunning;\n  }\n\n  /**\n   * Unreference every job that is stored in the _doneJobs object. It will\n   * not be possible anymore to get stats about these jobs, but it will release\n   * the memory.\n   *\n   * @return {Object} Returns conrad.\n   */\n  function _clearHistory() {\n    _doneJobs = [];\n    return this;\n  }\n\n  /**\n   * Returns a snapshot of every data about jobs that wait to be started, are\n   * currently running or are done.\n   *\n   * It is possible to get only running, waiting or done jobs by giving\n   * \"running\", \"waiting\" or \"done\" as fist argument.\n   *\n   * It is also possible to get every job with a specified id by giving it as\n   * first argument. Also, using a RegExp instead of an id will return every\n   * jobs whose ids match the RegExp. And these two last use cases work as well\n   * by giving before \"running\", \"waiting\" or \"done\".\n   *\n   * @return {Array} The array of the matching jobs.\n   *\n   * Some call examples:\n   * *******************\n   *  > conrad.getStats('running')\n   *  > conrad.getStats('waiting')\n   *  > conrad.getStats('done')\n   *  > conrad.getStats('myJob')\n   *  > conrad.getStats(/test/)\n   *  > conrad.getStats('running', 'myRunningJob')\n   *  > conrad.getStats('running', /test/)\n   */\n  function _getStats(v1, v2) {\n    var a,\n        k,\n        i,\n        l,\n        stats,\n        pattern,\n        isPatternString;\n\n    if (!arguments.length) {\n      stats = [];\n\n      for (k in _jobs)\n        stats.push(_jobs[k]);\n\n      for (k in _waitingJobs)\n        stats.push(_waitingJobs[k]);\n\n      for (k in _runningJobs)\n        stats.push(_runningJobs[k]);\n\n      stats = stats.concat(_doneJobs);\n    }\n\n    if (typeof v1 === 'string')\n      switch (v1) {\n        case 'waiting':\n          stats = __objectValues(_waitingJobs);\n          break;\n        case 'running':\n          stats = __objectValues(_runningJobs);\n          break;\n        case 'done':\n          stats = _doneJobs;\n          break;\n        default:\n          pattern = v1;\n      }\n\n    if (v1 instanceof RegExp)\n      pattern = v1;\n\n    if (!pattern && (typeof v2 === 'string' || v2 instanceof RegExp))\n      pattern = v2;\n\n    // Filter jobs if a pattern is given:\n    if (pattern) {\n      isPatternString = typeof pattern === 'string';\n\n      if (stats instanceof Array) {\n        a = stats;\n      } else if (typeof stats === 'object') {\n        a = [];\n\n        for (k in stats)\n          a = a.concat(stats[k]);\n      } else {\n        a = [];\n\n        for (k in _jobs)\n          a.push(_jobs[k]);\n\n        for (k in _waitingJobs)\n          a.push(_waitingJobs[k]);\n\n        for (k in _runningJobs)\n          a.push(_runningJobs[k]);\n\n        a = a.concat(_doneJobs);\n      }\n\n      stats = [];\n      for (i = 0, l = a.length; i < l; i++)\n        if (isPatternString ? a[i].id === pattern : a[i].id.match(pattern))\n          stats.push(a[i]);\n    }\n\n    return __clone(stats);\n  }\n\n\n  /**\n   * TOOLS FUNCTIONS:\n   * ****************\n   */\n\n  /**\n   * This function takes any number of objects as arguments, copies from each\n   * of these objects each pair key/value into a new object, and finally\n   * returns this object.\n   *\n   * The arguments are parsed from the last one to the first one, such that\n   * when two objects have keys in common, the \"earliest\" object wins.\n   *\n   * Example:\n   * ********\n   *  > var o1 = {\n   *  >       a: 1,\n   *  >       b: 2,\n   *  >       c: '3'\n   *  >     },\n   *  >     o2 = {\n   *  >       c: '4',\n   *  >       d: [ 5 ]\n   *  >     };\n   *  > __extend(o1, o2);\n   *  > // Returns: {\n   *  > //   a: 1,\n   *  > //   b: 2,\n   *  > //   c: '3',\n   *  > //   d: [ 5 ]\n   *  > // };\n   *\n   * @param  {Object+} Any number of objects.\n   * @return {Object}  The merged object.\n   */\n  function __extend() {\n    var i,\n        k,\n        res = {},\n        l = arguments.length;\n\n    for (i = l - 1; i >= 0; i--)\n      for (k in arguments[i])\n        res[k] = arguments[i][k];\n\n    return res;\n  }\n\n  /**\n   * This function simply clones an object. This object must contain only\n   * objects, arrays and immutable values. Since it is not public, it does not\n   * deal with cyclic references, DOM elements and instantiated objects - so\n   * use it carefully.\n   *\n   * @param  {Object} The object to clone.\n   * @return {Object} The clone.\n   */\n  function __clone(item) {\n    var result, i, k, l;\n\n    if (!item)\n      return item;\n\n    if (Array.isArray(item)) {\n      result = [];\n      for (i = 0, l = item.length; i < l; i++)\n        result.push(__clone(item[i]));\n    } else if (typeof item === 'object') {\n      result = {};\n      for (i in item)\n        result[i] = __clone(item[i]);\n    } else\n      result = item;\n\n    return result;\n  }\n\n  /**\n   * Returns an array containing the values of an object.\n   *\n   * @param  {Object} The object.\n   * @return {Array}  The array of values.\n   */\n  function __objectValues(o) {\n    var k,\n        a = [];\n\n    for (k in o)\n      a.push(o[k]);\n\n    return a;\n  }\n\n  /**\n   * A short \"Date.now()\" polyfill.\n   *\n   * @return {Number} The current time (in ms).\n   */\n  function __dateNow() {\n    return Date.now ? Date.now() : new Date().getTime();\n  }\n\n  /**\n   * Polyfill for the Array.isArray function:\n   */\n  if (!Array.isArray)\n    Array.isArray = function(v) {\n      return Object.prototype.toString.call(v) === '[object Array]';\n    };\n\n\n  /**\n   * EXPORT PUBLIC API:\n   * ******************\n   */\n  var conrad = {\n    hasJob: _hasJob,\n    addJob: _addJob,\n    killJob: _killJob,\n    killAll: _killAll,\n    settings: _settings,\n    getStats: _getStats,\n    isRunning: _getIsRunning,\n    clearHistory: _clearHistory,\n\n    // Events management:\n    bind: _bind,\n    unbind: _unbind,\n\n    // Version:\n    version: '0.1.0'\n  };\n\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports)\n      exports = module.exports = conrad;\n    exports.conrad = conrad;\n  }\n  global.conrad = conrad;\n})(this);\n\n// Hardcoded export for the node.js version:\nvar sigma = this.sigma,\n    conrad = this.conrad;\n\nsigma.conrad = conrad;\n\n// Dirty polyfills to permit sigma usage in node\nif (typeof HTMLElement === 'undefined')\n  HTMLElement = function() {};\n\nif (typeof window === 'undefined')\n  window = {\n    addEventListener: function() {}\n  };\n\nif (typeof exports !== 'undefined') {\n  if (typeof module !== 'undefined' && module.exports)\n    exports = module.exports = sigma;\n  exports.sigma = sigma;\n}\n\n;(function(undefined) {\n  'use strict';\n\n  if (typeof sigma === 'undefined')\n    throw 'sigma is not declared';\n\n  var _root = this;\n\n  // Initialize packages:\n  sigma.utils = sigma.utils || {};\n\n  /**\n   * MISC UTILS:\n   */\n  /**\n   * This function takes any number of objects as arguments, copies from each\n   * of these objects each pair key/value into a new object, and finally\n   * returns this object.\n   *\n   * The arguments are parsed from the last one to the first one, such that\n   * when several objects have keys in common, the \"earliest\" object wins.\n   *\n   * Example:\n   * ********\n   *  > var o1 = {\n   *  >       a: 1,\n   *  >       b: 2,\n   *  >       c: '3'\n   *  >     },\n   *  >     o2 = {\n   *  >       c: '4',\n   *  >       d: [ 5 ]\n   *  >     };\n   *  > sigma.utils.extend(o1, o2);\n   *  > // Returns: {\n   *  > //   a: 1,\n   *  > //   b: 2,\n   *  > //   c: '3',\n   *  > //   d: [ 5 ]\n   *  > // };\n   *\n   * @param  {object+} Any number of objects.\n   * @return {object}  The merged object.\n   */\n  sigma.utils.extend = function() {\n    var i,\n        k,\n        res = {},\n        l = arguments.length;\n\n    for (i = l - 1; i >= 0; i--)\n      for (k in arguments[i])\n        res[k] = arguments[i][k];\n\n    return res;\n  };\n\n  /**\n   * A short \"Date.now()\" polyfill.\n   *\n   * @return {Number} The current time (in ms).\n   */\n  sigma.utils.dateNow = function() {\n    return Date.now ? Date.now() : new Date().getTime();\n  };\n\n  /**\n   * Takes a package name as parameter and checks at each lebel if it exists,\n   * and if it does not, creates it.\n   *\n   * Example:\n   * ********\n   *  > sigma.utils.pkg('a.b.c');\n   *  > a.b.c;\n   *  > // Object {};\n   *  >\n   *  > sigma.utils.pkg('a.b.d');\n   *  > a.b;\n   *  > // Object { c: {}, d: {} };\n   *\n   * @param  {string} pkgName The name of the package to create/find.\n   * @return {object}         The related package.\n   */\n  sigma.utils.pkg = function(pkgName) {\n    return (pkgName || '').split('.').reduce(function(context, objName) {\n      return (objName in context) ?\n        context[objName] :\n        (context[objName] = {});\n    }, _root);\n  };\n\n  /**\n   * Returns a unique incremental number ID.\n   *\n   * Example:\n   * ********\n   *  > sigma.utils.id();\n   *  > // 1;\n   *  >\n   *  > sigma.utils.id();\n   *  > // 2;\n   *  >\n   *  > sigma.utils.id();\n   *  > // 3;\n   *\n   * @param  {string} pkgName The name of the package to create/find.\n   * @return {object}         The related package.\n   */\n  sigma.utils.id = (function() {\n    var i = 0;\n    return function() {\n      return ++i;\n    };\n  })();\n\n  /**\n   * This function takes an hexa color (for instance \"#ffcc00\" or \"#fc0\") or a\n   * rgb / rgba color (like \"rgb(255,255,12)\" or \"rgba(255,255,12,1)\") and\n   * returns an integer equal to \"r * 255 * 255 + g * 255 + b\", to gain some\n   * memory in the data given to WebGL shaders.\n   *\n   * Note that the function actually caches its results for better performance.\n   *\n   * @param  {string} val The hexa or rgba color.\n   * @return {number}     The number value.\n   */\n  var floatColorCache = {};\n\n  sigma.utils.floatColor = function(val) {\n\n    // Is the color already computed?\n    if (floatColorCache[val])\n      return floatColorCache[val];\n\n    var original = val,\n        r = 0,\n        g = 0,\n        b = 0;\n\n    if (val[0] === '#') {\n      val = val.slice(1);\n\n      if (val.length === 3) {\n        r = parseInt(val.charAt(0) + val.charAt(0), 16);\n        g = parseInt(val.charAt(1) + val.charAt(1), 16);\n        b = parseInt(val.charAt(2) + val.charAt(2), 16);\n      }\n      else {\n        r = parseInt(val.charAt(0) + val.charAt(1), 16);\n        g = parseInt(val.charAt(2) + val.charAt(3), 16);\n        b = parseInt(val.charAt(4) + val.charAt(5), 16);\n      }\n    } else if (val.match(/^ *rgba? *\\(/)) {\n      val = val.match(\n        /^ *rgba? *\\( *([0-9]*) *, *([0-9]*) *, *([0-9]*) *(,.*)?\\) *$/\n      );\n      r = +val[1];\n      g = +val[2];\n      b = +val[3];\n    }\n\n    var color = (\n      r * 256 * 256 +\n      g * 256 +\n      b\n    );\n\n    // Caching the color\n    floatColorCache[original] = color;\n\n    return color;\n  };\n\n    /**\n   * Perform a zoom into a camera, with or without animation, to the\n   * coordinates indicated using a specified ratio.\n   *\n   * Recognized parameters:\n   * **********************\n   * Here is the exhaustive list of every accepted parameters in the animation\n   * object:\n   *\n   *   {?number} duration     An amount of time that means the duration of the\n   *                          animation. If this parameter doesn't exist the\n   *                          zoom will be performed without animation.\n   *   {?function} onComplete A function to perform it after the animation. It\n   *                          will be performed even if there is no duration.\n   *\n   * @param {camera}     The camera where perform the zoom.\n   * @param {x}          The X coordiantion where the zoom goes.\n   * @param {y}          The Y coordiantion where the zoom goes.\n   * @param {ratio}      The ratio to apply it to the current camera ratio.\n   * @param {?animation} A dictionary with options for a possible animation.\n   */\n  sigma.utils.zoomTo = function(camera, x, y, ratio, animation) {\n    var settings = camera.settings,\n        count,\n        newRatio,\n        animationSettings,\n        coordinates;\n\n    // Create the newRatio dealing with min / max:\n    newRatio = Math.max(\n      settings('zoomMin'),\n      Math.min(\n        settings('zoomMax'),\n        camera.ratio * ratio\n      )\n    );\n\n    // Check that the new ratio is different from the initial one:\n    if (newRatio !== camera.ratio) {\n      // Create the coordinates variable:\n      ratio = newRatio / camera.ratio;\n      coordinates = {\n        x: x * (1 - ratio) + camera.x,\n        y: y * (1 - ratio) + camera.y,\n        ratio: newRatio\n      };\n\n      if (animation && animation.duration) {\n        // Complete the animation setings:\n        count = sigma.misc.animation.killAll(camera);\n        animation = sigma.utils.extend(\n          animation,\n          {\n            easing: count ? 'quadraticOut' : 'quadraticInOut'\n          }\n        );\n\n        sigma.misc.animation.camera(camera, coordinates, animation);\n      } else {\n        camera.goTo(coordinates);\n        if (animation && animation.onComplete)\n          animation.onComplete();\n      }\n    }\n  };\n\n  /**\n   * Return the control point coordinates for a quadratic bezier curve.\n   *\n   * @param  {number} x1  The X coordinate of the start point.\n   * @param  {number} y1  The Y coordinate of the start point.\n   * @param  {number} x2  The X coordinate of the end point.\n   * @param  {number} y2  The Y coordinate of the end point.\n   * @return {x,y}        The control point coordinates.\n   */\n  sigma.utils.getQuadraticControlPoint = function(x1, y1, x2, y2) {\n    return {\n      x: (x1 + x2) / 2 + (y2 - y1) / 4,\n      y: (y1 + y2) / 2 + (x1 - x2) / 4\n    };\n  };\n\n  /**\n    * Compute the coordinates of the point positioned\n    * at length t in the quadratic bezier curve.\n    *\n    * @param  {number} t  In [0,1] the step percentage to reach\n    *                     the point in the curve from the context point.\n    * @param  {number} x1 The X coordinate of the context point.\n    * @param  {number} y1 The Y coordinate of the context point.\n    * @param  {number} x2 The X coordinate of the ending point.\n    * @param  {number} y2 The Y coordinate of the ending point.\n    * @param  {number} xi The X coordinate of the control point.\n    * @param  {number} yi The Y coordinate of the control point.\n    * @return {object}    {x,y}.\n  */\n  sigma.utils.getPointOnQuadraticCurve = function(t, x1, y1, x2, y2, xi, yi) {\n    // http://stackoverflow.com/a/5634528\n    return {\n      x: Math.pow(1 - t, 2) * x1 + 2 * (1 - t) * t * xi + Math.pow(t, 2) * x2,\n      y: Math.pow(1 - t, 2) * y1 + 2 * (1 - t) * t * yi + Math.pow(t, 2) * y2\n    };\n  };\n\n  /**\n    * Compute the coordinates of the point positioned\n    * at length t in the cubic bezier curve.\n    *\n    * @param  {number} t  In [0,1] the step percentage to reach\n    *                     the point in the curve from the context point.\n    * @param  {number} x1 The X coordinate of the context point.\n    * @param  {number} y1 The Y coordinate of the context point.\n    * @param  {number} x2 The X coordinate of the end point.\n    * @param  {number} y2 The Y coordinate of the end point.\n    * @param  {number} cx The X coordinate of the first control point.\n    * @param  {number} cy The Y coordinate of the first control point.\n    * @param  {number} dx The X coordinate of the second control point.\n    * @param  {number} dy The Y coordinate of the second control point.\n    * @return {object}    {x,y} The point at t.\n  */\n  sigma.utils.getPointOnBezierCurve =\n    function(t, x1, y1, x2, y2, cx, cy, dx, dy) {\n    // http://stackoverflow.com/a/15397596\n    // Blending functions:\n    var B0_t = Math.pow(1 - t, 3),\n        B1_t = 3 * t * Math.pow(1 - t, 2),\n        B2_t = 3 * Math.pow(t, 2) * (1 - t),\n        B3_t = Math.pow(t, 3);\n\n    return {\n      x: (B0_t * x1) + (B1_t * cx) + (B2_t * dx) + (B3_t * x2),\n      y: (B0_t * y1) + (B1_t * cy) + (B2_t * dy) + (B3_t * y2)\n    };\n  };\n\n  /**\n   * Return the coordinates of the two control points for a self loop (i.e.\n   * where the start point is also the end point) computed as a cubic bezier\n   * curve.\n   *\n   * @param  {number} x    The X coordinate of the node.\n   * @param  {number} y    The Y coordinate of the node.\n   * @param  {number} size The node size.\n   * @return {x1,y1,x2,y2} The coordinates of the two control points.\n   */\n  sigma.utils.getSelfLoopControlPoints = function(x , y, size) {\n    return {\n      x1: x - size * 7,\n      y1: y,\n      x2: x,\n      y2: y + size * 7\n    };\n  };\n\n  /**\n   * Return the euclidian distance between two points of a plane\n   * with an orthonormal basis.\n   *\n   * @param  {number} x1  The X coordinate of the first point.\n   * @param  {number} y1  The Y coordinate of the first point.\n   * @param  {number} x2  The X coordinate of the second point.\n   * @param  {number} y2  The Y coordinate of the second point.\n   * @return {number}     The euclidian distance.\n   */\n  sigma.utils.getDistance = function(x0, y0, x1, y1) {\n    return Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2));\n  };\n\n  /**\n   * Return the coordinates of the intersection points of two circles.\n   *\n   * @param  {number} x0  The X coordinate of center location of the first\n   *                      circle.\n   * @param  {number} y0  The Y coordinate of center location of the first\n   *                      circle.\n   * @param  {number} r0  The radius of the first circle.\n   * @param  {number} x1  The X coordinate of center location of the second\n   *                      circle.\n   * @param  {number} y1  The Y coordinate of center location of the second\n   *                      circle.\n   * @param  {number} r1  The radius of the second circle.\n   * @return {xi,yi}      The coordinates of the intersection points.\n   */\n  sigma.utils.getCircleIntersection = function(x0, y0, r0, x1, y1, r1) {\n    // http://stackoverflow.com/a/12219802\n    var a, dx, dy, d, h, rx, ry, x2, y2;\n\n    // dx and dy are the vertical and horizontal distances between the circle\n    // centers:\n    dx = x1 - x0;\n    dy = y1 - y0;\n\n    // Determine the straight-line distance between the centers:\n    d = Math.sqrt((dy * dy) + (dx * dx));\n\n    // Check for solvability:\n    if (d > (r0 + r1)) {\n        // No solution. circles do not intersect.\n        return false;\n    }\n    if (d < Math.abs(r0 - r1)) {\n        // No solution. one circle is contained in the other.\n        return false;\n    }\n\n    //'point 2' is the point where the line through the circle intersection\n    // points crosses the line between the circle centers.\n\n    // Determine the distance from point 0 to point 2:\n    a = ((r0 * r0) - (r1 * r1) + (d * d)) / (2.0 * d);\n\n    // Determine the coordinates of point 2:\n    x2 = x0 + (dx * a / d);\n    y2 = y0 + (dy * a / d);\n\n    // Determine the distance from point 2 to either of the intersection\n    // points:\n    h = Math.sqrt((r0 * r0) - (a * a));\n\n    // Determine the offsets of the intersection points from point 2:\n    rx = -dy * (h / d);\n    ry = dx * (h / d);\n\n    // Determine the absolute intersection points:\n    var xi = x2 + rx;\n    var xi_prime = x2 - rx;\n    var yi = y2 + ry;\n    var yi_prime = y2 - ry;\n\n    return {xi: xi, xi_prime: xi_prime, yi: yi, yi_prime: yi_prime};\n  };\n\n  /**\n    * Check if a point is on a line segment.\n    *\n    * @param  {number} x       The X coordinate of the point to check.\n    * @param  {number} y       The Y coordinate of the point to check.\n    * @param  {number} x1      The X coordinate of the line start point.\n    * @param  {number} y1      The Y coordinate of the line start point.\n    * @param  {number} x2      The X coordinate of the line end point.\n    * @param  {number} y2      The Y coordinate of the line end point.\n    * @param  {number} epsilon The precision (consider the line thickness).\n    * @return {boolean}        True if point is \"close to\" the line\n    *                          segment, false otherwise.\n  */\n  sigma.utils.isPointOnSegment = function(x, y, x1, y1, x2, y2, epsilon) {\n    // http://stackoverflow.com/a/328122\n    var crossProduct = Math.abs((y - y1) * (x2 - x1) - (x - x1) * (y2 - y1)),\n        d = sigma.utils.getDistance(x1, y1, x2, y2),\n        nCrossProduct = crossProduct / d; // normalized cross product\n\n    return (nCrossProduct < epsilon &&\n     Math.min(x1, x2) <= x && x <= Math.max(x1, x2) &&\n     Math.min(y1, y2) <= y && y <= Math.max(y1, y2));\n  };\n\n  /**\n    * Check if a point is on a quadratic bezier curve segment with a thickness.\n    *\n    * @param  {number} x       The X coordinate of the point to check.\n    * @param  {number} y       The Y coordinate of the point to check.\n    * @param  {number} x1      The X coordinate of the curve start point.\n    * @param  {number} y1      The Y coordinate of the curve start point.\n    * @param  {number} x2      The X coordinate of the curve end point.\n    * @param  {number} y2      The Y coordinate of the curve end point.\n    * @param  {number} cpx     The X coordinate of the curve control point.\n    * @param  {number} cpy     The Y coordinate of the curve control point.\n    * @param  {number} epsilon The precision (consider the line thickness).\n    * @return {boolean}        True if (x,y) is on the curve segment,\n    *                          false otherwise.\n  */\n  sigma.utils.isPointOnQuadraticCurve =\n    function(x, y, x1, y1, x2, y2, cpx, cpy, epsilon) {\n    // Fails if the point is too far from the extremities of the segment,\n    // preventing for more costly computation:\n    var dP1P2 = sigma.utils.getDistance(x1, y1, x2, y2);\n    if (Math.abs(x - x1) > dP1P2 || Math.abs(y - y1) > dP1P2) {\n      return false;\n    }\n\n    var dP1 = sigma.utils.getDistance(x, y, x1, y1),\n        dP2 = sigma.utils.getDistance(x, y, x2, y2),\n        t = 0.5,\n        r = (dP1 < dP2) ? -0.01 : 0.01,\n        rThreshold = 0.001,\n        i = 100,\n        pt = sigma.utils.getPointOnQuadraticCurve(t, x1, y1, x2, y2, cpx, cpy),\n        dt = sigma.utils.getDistance(x, y, pt.x, pt.y),\n        old_dt;\n\n    // This algorithm minimizes the distance from the point to the curve. It\n    // find the optimal t value where t=0 is the start point and t=1 is the end\n    // point of the curve, starting from t=0.5.\n    // It terminates because it runs a maximum of i interations.\n    while (i-- > 0 &&\n      t >= 0 && t <= 1 &&\n      (dt > epsilon) &&\n      (r > rThreshold || r < -rThreshold)) {\n      old_dt = dt;\n      pt = sigma.utils.getPointOnQuadraticCurve(t, x1, y1, x2, y2, cpx, cpy);\n      dt = sigma.utils.getDistance(x, y, pt.x, pt.y);\n\n      if (dt > old_dt) {\n        // not the right direction:\n        // halfstep in the opposite direction\n        r = -r / 2;\n        t += r;\n      }\n      else if (t + r < 0 || t + r > 1) {\n        // oops, we've gone too far:\n        // revert with a halfstep\n        r = r / 2;\n        dt = old_dt;\n      }\n      else {\n        // progress:\n        t += r;\n      }\n    }\n\n    return dt < epsilon;\n  };\n\n\n  /**\n    * Check if a point is on a cubic bezier curve segment with a thickness.\n    *\n    * @param  {number} x       The X coordinate of the point to check.\n    * @param  {number} y       The Y coordinate of the point to check.\n    * @param  {number} x1      The X coordinate of the curve start point.\n    * @param  {number} y1      The Y coordinate of the curve start point.\n    * @param  {number} x2      The X coordinate of the curve end point.\n    * @param  {number} y2      The Y coordinate of the curve end point.\n    * @param  {number} cpx1    The X coordinate of the 1st curve control point.\n    * @param  {number} cpy1    The Y coordinate of the 1st curve control point.\n    * @param  {number} cpx2    The X coordinate of the 2nd curve control point.\n    * @param  {number} cpy2    The Y coordinate of the 2nd curve control point.\n    * @param  {number} epsilon The precision (consider the line thickness).\n    * @return {boolean}        True if (x,y) is on the curve segment,\n    *                          false otherwise.\n  */\n  sigma.utils.isPointOnBezierCurve =\n    function(x, y, x1, y1, x2, y2, cpx1, cpy1, cpx2, cpy2, epsilon) {\n    // Fails if the point is too far from the extremities of the segment,\n    // preventing for more costly computation:\n    var dP1CP1 = sigma.utils.getDistance(x1, y1, cpx1, cpy1);\n    if (Math.abs(x - x1) > dP1CP1 || Math.abs(y - y1) > dP1CP1) {\n      return false;\n    }\n\n    var dP1 = sigma.utils.getDistance(x, y, x1, y1),\n        dP2 = sigma.utils.getDistance(x, y, x2, y2),\n        t = 0.5,\n        r = (dP1 < dP2) ? -0.01 : 0.01,\n        rThreshold = 0.001,\n        i = 100,\n        pt = sigma.utils.getPointOnBezierCurve(\n          t, x1, y1, x2, y2, cpx1, cpy1, cpx2, cpy2),\n        dt = sigma.utils.getDistance(x, y, pt.x, pt.y),\n        old_dt;\n\n    // This algorithm minimizes the distance from the point to the curve. It\n    // find the optimal t value where t=0 is the start point and t=1 is the end\n    // point of the curve, starting from t=0.5.\n    // It terminates because it runs a maximum of i interations.\n    while (i-- > 0 &&\n      t >= 0 && t <= 1 &&\n      (dt > epsilon) &&\n      (r > rThreshold || r < -rThreshold)) {\n      old_dt = dt;\n      pt = sigma.utils.getPointOnBezierCurve(\n        t, x1, y1, x2, y2, cpx1, cpy1, cpx2, cpy2);\n      dt = sigma.utils.getDistance(x, y, pt.x, pt.y);\n\n      if (dt > old_dt) {\n        // not the right direction:\n        // halfstep in the opposite direction\n        r = -r / 2;\n        t += r;\n      }\n      else if (t + r < 0 || t + r > 1) {\n        // oops, we've gone too far:\n        // revert with a halfstep\n        r = r / 2;\n        dt = old_dt;\n      }\n      else {\n        // progress:\n        t += r;\n      }\n    }\n\n    return dt < epsilon;\n  };\n\n\n  /**\n   * ************\n   * EVENTS UTILS:\n   * ************\n   */\n  /**\n   * Here are some useful functions to unify extraction of the information we\n   * need with mouse events and touch events, from different browsers:\n   */\n\n  /**\n   * Extract the local X position from a mouse or touch event.\n   *\n   * @param  {event}  e A mouse or touch event.\n   * @return {number}   The local X value of the mouse.\n   */\n  sigma.utils.getX = function(e) {\n    return (\n      (e.offsetX !== undefined && e.offsetX) ||\n      (e.layerX !== undefined && e.layerX) ||\n      (e.clientX !== undefined && e.clientX)\n    );\n  };\n\n  /**\n   * Extract the local Y position from a mouse or touch event.\n   *\n   * @param  {event}  e A mouse or touch event.\n   * @return {number}   The local Y value of the mouse.\n   */\n  sigma.utils.getY = function(e) {\n    return (\n      (e.offsetY !== undefined && e.offsetY) ||\n      (e.layerY !== undefined && e.layerY) ||\n      (e.clientY !== undefined && e.clientY)\n    );\n  };\n\n  /**\n   * The pixel ratio of the screen. Taking zoom into account\n   *\n   * @return {number}        Pixel ratio of the screen\n   */\n  sigma.utils.getPixelRatio = function() {\n    var ratio = 1;\n    if (window.screen.deviceXDPI !== undefined &&\n         window.screen.logicalXDPI !== undefined &&\n         window.screen.deviceXDPI > window.screen.logicalXDPI) {\n        ratio = window.screen.systemXDPI / window.screen.logicalXDPI;\n    }\n    else if (window.devicePixelRatio !== undefined) {\n        ratio = window.devicePixelRatio;\n    }\n    return ratio;\n  };\n\n  /**\n   * Extract the width from a mouse or touch event.\n   *\n   * @param  {event}  e A mouse or touch event.\n   * @return {number}   The width of the event's target.\n   */\n  sigma.utils.getWidth = function(e) {\n    var w = (!e.target.ownerSVGElement) ?\n              e.target.width :\n              e.target.ownerSVGElement.width;\n\n    return (\n      (typeof w === 'number' && w) ||\n      (w !== undefined && w.baseVal !== undefined && w.baseVal.value)\n    );\n  };\n\n  /**\n   * Extract the center from a mouse or touch event.\n   *\n   * @param  {event}  e A mouse or touch event.\n   * @return {object}   The center of the event's target.\n   */\n  sigma.utils.getCenter = function(e) {\n    var ratio = e.target.namespaceURI.indexOf('svg') !== -1 ? 1 :\n        sigma.utils.getPixelRatio();\n    return {\n      x: sigma.utils.getWidth(e) / (2 * ratio),\n      y: sigma.utils.getHeight(e) / (2 * ratio)\n    };\n  };\n\n  /**\n   * Convert mouse coords to sigma coords\n   *\n   * @param  {event}   e A mouse or touch event.\n   * @param  {number?} x The x coord to convert\n   * @param  {number?} x The y coord to convert\n   *\n   * @return {object}    The standardized event\n   */\n  sigma.utils.mouseCoords = function(e, x, y) {\n    x = x || sigma.utils.getX(e);\n    y = y || sigma.utils.getY(e);\n    return {\n        x: x - sigma.utils.getCenter(e).x,\n        y: y - sigma.utils.getCenter(e).y,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        ctrlKey: e.ctrlKey,\n        metaKey: e.metaKey,\n        altKey: e.altKey,\n        shiftKey: e.shiftKey\n    };\n  };\n\n  /**\n   * Extract the height from a mouse or touch event.\n   *\n   * @param  {event}  e A mouse or touch event.\n   * @return {number}   The height of the event's target.\n   */\n  sigma.utils.getHeight = function(e) {\n    var h = (!e.target.ownerSVGElement) ?\n              e.target.height :\n              e.target.ownerSVGElement.height;\n\n    return (\n      (typeof h === 'number' && h) ||\n      (h !== undefined && h.baseVal !== undefined && h.baseVal.value)\n    );\n  };\n\n  /**\n   * Extract the wheel delta from a mouse or touch event.\n   *\n   * @param  {event}  e A mouse or touch event.\n   * @return {number}   The wheel delta of the mouse.\n   */\n  sigma.utils.getDelta = function(e) {\n    return (\n      (e.wheelDelta !== undefined && e.wheelDelta) ||\n      (e.detail !== undefined && -e.detail)\n    );\n  };\n\n  /**\n   * Returns the offset of a DOM element.\n   *\n   * @param  {DOMElement} dom The element to retrieve the position.\n   * @return {object}         The offset of the DOM element (top, left).\n   */\n  sigma.utils.getOffset = function(dom) {\n    var left = 0,\n        top = 0;\n\n    while (dom) {\n      top = top + parseInt(dom.offsetTop);\n      left = left + parseInt(dom.offsetLeft);\n      dom = dom.offsetParent;\n    }\n\n    return {\n      top: top,\n      left: left\n    };\n  };\n\n  /**\n   * Simulates a \"double click\" event.\n   *\n   * @param  {HTMLElement} target   The event target.\n   * @param  {string}      type     The event type.\n   * @param  {function}    callback The callback to execute.\n   */\n  sigma.utils.doubleClick = function(target, type, callback) {\n    var clicks = 0,\n        self = this,\n        handlers;\n\n    target._doubleClickHandler = target._doubleClickHandler || {};\n    target._doubleClickHandler[type] = target._doubleClickHandler[type] || [];\n    handlers = target._doubleClickHandler[type];\n\n    handlers.push(function(e) {\n      clicks++;\n\n      if (clicks === 2) {\n        clicks = 0;\n        return callback(e);\n      } else if (clicks === 1) {\n        setTimeout(function() {\n          clicks = 0;\n        }, sigma.settings.doubleClickTimeout);\n      }\n    });\n\n    target.addEventListener(type, handlers[handlers.length - 1], false);\n  };\n\n  /**\n   * Unbind simulated \"double click\" events.\n   *\n   * @param  {HTMLElement} target   The event target.\n   * @param  {string}      type     The event type.\n   */\n  sigma.utils.unbindDoubleClick = function(target, type) {\n    var handler,\n        handlers = (target._doubleClickHandler || {})[type] || [];\n\n    while ((handler = handlers.pop())) {\n      target.removeEventListener(type, handler);\n    }\n\n    delete (target._doubleClickHandler || {})[type];\n  };\n\n\n\n\n  /**\n   * Here are just some of the most basic easing functions, used for the\n   * animated camera \"goTo\" calls.\n   *\n   * If you need some more easings functions, don't hesitate to add them to\n   * sigma.utils.easings. But I will not add some more here or merge PRs\n   * containing, because I do not want sigma sources full of overkill and never\n   * used stuff...\n   */\n  sigma.utils.easings = sigma.utils.easings || {};\n  sigma.utils.easings.linearNone = function(k) {\n    return k;\n  };\n  sigma.utils.easings.quadraticIn = function(k) {\n    return k * k;\n  };\n  sigma.utils.easings.quadraticOut = function(k) {\n    return k * (2 - k);\n  };\n  sigma.utils.easings.quadraticInOut = function(k) {\n    if ((k *= 2) < 1)\n      return 0.5 * k * k;\n    return - 0.5 * (--k * (k - 2) - 1);\n  };\n  sigma.utils.easings.cubicIn = function(k) {\n    return k * k * k;\n  };\n  sigma.utils.easings.cubicOut = function(k) {\n    return --k * k * k + 1;\n  };\n  sigma.utils.easings.cubicInOut = function(k) {\n    if ((k *= 2) < 1)\n      return 0.5 * k * k * k;\n    return 0.5 * ((k -= 2) * k * k + 2);\n  };\n\n\n\n\n  /**\n   * ************\n   * WEBGL UTILS:\n   * ************\n   */\n  /**\n   * Loads a WebGL shader and returns it.\n   *\n   * @param  {WebGLContext}           gl           The WebGLContext to use.\n   * @param  {string}                 shaderSource The shader source.\n   * @param  {number}                 shaderType   The type of shader.\n   * @param  {function(string): void} error        Callback for errors.\n   * @return {WebGLShader}                         The created shader.\n   */\n  sigma.utils.loadShader = function(gl, shaderSource, shaderType, error) {\n    var compiled,\n        shader = gl.createShader(shaderType);\n\n    // Load the shader source\n    gl.shaderSource(shader, shaderSource);\n\n    // Compile the shader\n    gl.compileShader(shader);\n\n    // Check the compile status\n    compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\n    // If something went wrong:\n    if (!compiled) {\n      if (error) {\n        error(\n          'Error compiling shader \"' + shader + '\":' +\n          gl.getShaderInfoLog(shader)\n        );\n      }\n\n      gl.deleteShader(shader);\n      return null;\n    }\n\n    return shader;\n  };\n\n  /**\n   * Creates a program, attaches shaders, binds attrib locations, links the\n   * program and calls useProgram.\n   *\n   * @param  {Array.<WebGLShader>}    shaders   The shaders to attach.\n   * @param  {Array.<string>}         attribs   The attribs names.\n   * @param  {Array.<number>}         locations The locations for the attribs.\n   * @param  {function(string): void} error     Callback for errors.\n   * @return {WebGLProgram}                     The created program.\n   */\n  sigma.utils.loadProgram = function(gl, shaders, attribs, loc, error) {\n    var i,\n        linked,\n        program = gl.createProgram();\n\n    for (i = 0; i < shaders.length; ++i)\n      gl.attachShader(program, shaders[i]);\n\n    if (attribs)\n      for (i = 0; i < attribs.length; ++i)\n        gl.bindAttribLocation(\n          program,\n          locations ? locations[i] : i,\n          opt_attribs[i]\n        );\n\n    gl.linkProgram(program);\n\n    // Check the link status\n    linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (!linked) {\n      if (error)\n        error('Error in program linking: ' + gl.getProgramInfoLog(program));\n\n      gl.deleteProgram(program);\n      return null;\n    }\n\n    return program;\n  };\n\n\n\n\n  /**\n   * *********\n   * MATRICES:\n   * *********\n   * The following utils are just here to help generating the transformation\n   * matrices for the WebGL renderers.\n   */\n  sigma.utils.pkg('sigma.utils.matrices');\n\n  /**\n   * The returns a 3x3 translation matrix.\n   *\n   * @param  {number} dx The X translation.\n   * @param  {number} dy The Y translation.\n   * @return {array}     Returns the matrix.\n   */\n  sigma.utils.matrices.translation = function(dx, dy) {\n    return [\n      1, 0, 0,\n      0, 1, 0,\n      dx, dy, 1\n    ];\n  };\n\n  /**\n   * The returns a 3x3 or 2x2 rotation matrix.\n   *\n   * @param  {number}  angle The rotation angle.\n   * @param  {boolean} m2    If true, the function will return a 2x2 matrix.\n   * @return {array}         Returns the matrix.\n   */\n  sigma.utils.matrices.rotation = function(angle, m2) {\n    var cos = Math.cos(angle),\n        sin = Math.sin(angle);\n\n    return m2 ? [\n      cos, -sin,\n      sin, cos\n    ] : [\n      cos, -sin, 0,\n      sin, cos, 0,\n      0, 0, 1\n    ];\n  };\n\n  /**\n   * The returns a 3x3 or 2x2 homothetic transformation matrix.\n   *\n   * @param  {number}  ratio The scaling ratio.\n   * @param  {boolean} m2    If true, the function will return a 2x2 matrix.\n   * @return {array}         Returns the matrix.\n   */\n  sigma.utils.matrices.scale = function(ratio, m2) {\n    return m2 ? [\n      ratio, 0,\n      0, ratio\n    ] : [\n      ratio, 0, 0,\n      0, ratio, 0,\n      0, 0, 1\n    ];\n  };\n\n  /**\n   * The returns a 3x3 or 2x2 homothetic transformation matrix.\n   *\n   * @param  {array}   a  The first matrix.\n   * @param  {array}   b  The second matrix.\n   * @param  {boolean} m2 If true, the function will assume both matrices are\n   *                      2x2.\n   * @return {array}      Returns the matrix.\n   */\n  sigma.utils.matrices.multiply = function(a, b, m2) {\n    var l = m2 ? 2 : 3,\n        a00 = a[0 * l + 0],\n        a01 = a[0 * l + 1],\n        a02 = a[0 * l + 2],\n        a10 = a[1 * l + 0],\n        a11 = a[1 * l + 1],\n        a12 = a[1 * l + 2],\n        a20 = a[2 * l + 0],\n        a21 = a[2 * l + 1],\n        a22 = a[2 * l + 2],\n        b00 = b[0 * l + 0],\n        b01 = b[0 * l + 1],\n        b02 = b[0 * l + 2],\n        b10 = b[1 * l + 0],\n        b11 = b[1 * l + 1],\n        b12 = b[1 * l + 2],\n        b20 = b[2 * l + 0],\n        b21 = b[2 * l + 1],\n        b22 = b[2 * l + 2];\n\n    return m2 ? [\n      a00 * b00 + a01 * b10,\n      a00 * b01 + a01 * b11,\n      a10 * b00 + a11 * b10,\n      a10 * b01 + a11 * b11\n    ] : [\n      a00 * b00 + a01 * b10 + a02 * b20,\n      a00 * b01 + a01 * b11 + a02 * b21,\n      a00 * b02 + a01 * b12 + a02 * b22,\n      a10 * b00 + a11 * b10 + a12 * b20,\n      a10 * b01 + a11 * b11 + a12 * b21,\n      a10 * b02 + a11 * b12 + a12 * b22,\n      a20 * b00 + a21 * b10 + a22 * b20,\n      a20 * b01 + a21 * b11 + a22 * b21,\n      a20 * b02 + a21 * b12 + a22 * b22\n    ];\n  };\n}).call(this);\n\n;(function(global) {\n  'use strict';\n\n  /**\n   * http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n   * http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\n   * requestAnimationFrame polyfill by Erik Möller.\n   * fixes from Paul Irish and Tino Zijdel\n   * MIT license\n   */\n  var x,\n      lastTime = 0,\n      vendors = ['ms', 'moz', 'webkit', 'o'];\n\n  for (x = 0; x < vendors.length && !global.requestAnimationFrame; x++) {\n    global.requestAnimationFrame =\n      global[vendors[x] + 'RequestAnimationFrame'];\n    global.cancelAnimationFrame =\n      global[vendors[x] + 'CancelAnimationFrame'] ||\n      global[vendors[x] + 'CancelRequestAnimationFrame'];\n  }\n\n  if (!global.requestAnimationFrame)\n    global.requestAnimationFrame = function(callback, element) {\n      var currTime = new Date().getTime(),\n          timeToCall = Math.max(0, 16 - (currTime - lastTime)),\n          id = global.setTimeout(\n            function() {\n              callback(currTime + timeToCall);\n            },\n            timeToCall\n          );\n\n      lastTime = currTime + timeToCall;\n      return id;\n    };\n\n  if (!global.cancelAnimationFrame)\n    global.cancelAnimationFrame = function(id) {\n      clearTimeout(id);\n    };\n\n  /**\n   * Function.prototype.bind polyfill found on MDN.\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind#Compatibility\n   * Public domain\n   */\n  if (!Function.prototype.bind)\n    Function.prototype.bind = function(oThis) {\n      if (typeof this !== 'function')\n        // Closest thing possible to the ECMAScript 5 internal IsCallable\n        // function:\n        throw new TypeError(\n          'Function.prototype.bind - what is trying to be bound is not callable'\n        );\n\n      var aArgs = Array.prototype.slice.call(arguments, 1),\n          fToBind = this,\n          fNOP,\n          fBound;\n\n      fNOP = function() {};\n      fBound = function() {\n        return fToBind.apply(\n          this instanceof fNOP && oThis ?\n            this :\n            oThis,\n          aArgs.concat(Array.prototype.slice.call(arguments))\n        );\n      };\n\n      fNOP.prototype = this.prototype;\n      fBound.prototype = new fNOP();\n\n      return fBound;\n    };\n})(this);\n\n;(function(undefined) {\n  'use strict';\n\n  if (typeof sigma === 'undefined')\n    throw 'sigma is not declared';\n\n  // Packages initialization:\n  sigma.utils.pkg('sigma.settings');\n\n  var settings = {\n    /**\n     * GRAPH SETTINGS:\n     * ***************\n     */\n    // {boolean} Indicates if the data have to be cloned in methods to add\n    //           nodes or edges.\n    clone: true,\n    // {boolean} Indicates if nodes \"id\" values and edges \"id\", \"source\" and\n    //           \"target\" values must be set as immutable.\n    immutable: true,\n    // {boolean} Indicates if sigma can log its errors and warnings.\n    verbose: false,\n\n\n    /**\n     * RENDERERS SETTINGS:\n     * *******************\n     */\n    // {string}\n    classPrefix: 'sigma',\n    // {string}\n    defaultNodeType: 'def',\n    // {string}\n    defaultEdgeType: 'def',\n    // {string}\n    defaultLabelColor: '#000',\n    // {string}\n    defaultEdgeColor: '#000',\n    // {string}\n    defaultNodeColor: '#000',\n    // {string}\n    defaultLabelSize: 14,\n    // {string} Indicates how to choose the edges color. Available values:\n    //          \"source\", \"target\", \"default\"\n    edgeColor: 'source',\n    // {number} Defines the minimal edge's arrow display size.\n    minArrowSize: 0,\n    // {string}\n    font: 'arial',\n    // {string} Example: 'bold'\n    fontStyle: '',\n    // {string} Indicates how to choose the labels color. Available values:\n    //          \"node\", \"default\"\n    labelColor: 'default',\n    // {string} Indicates how to choose the labels size. Available values:\n    //          \"fixed\", \"proportional\"\n    labelSize: 'fixed',\n    // {string} The ratio between the font size of the label and the node size.\n    labelSizeRatio: 1,\n    // {number} The minimum size a node must have to see its label displayed.\n    labelThreshold: 8,\n    // {number} The oversampling factor used in WebGL renderer.\n    webglOversamplingRatio: 2,\n    // {number} The size of the border of hovered nodes.\n    borderSize: 0,\n    // {number} The default hovered node border's color.\n    defaultNodeBorderColor: '#000',\n    // {number} The hovered node's label font. If not specified, will heritate\n    //          the \"font\" value.\n    hoverFont: '',\n    // {boolean} If true, then only one node can be hovered at a time.\n    singleHover: true,\n    // {string} Example: 'bold'\n    hoverFontStyle: '',\n    // {string} Indicates how to choose the hovered nodes shadow color.\n    //          Available values: \"node\", \"default\"\n    labelHoverShadow: 'default',\n    // {string}\n    labelHoverShadowColor: '#000',\n    // {string} Indicates how to choose the hovered nodes color.\n    //          Available values: \"node\", \"default\"\n    nodeHoverColor: 'node',\n    // {string}\n    defaultNodeHoverColor: '#000',\n    // {string} Indicates how to choose the hovered nodes background color.\n    //          Available values: \"node\", \"default\"\n    labelHoverBGColor: 'default',\n    // {string}\n    defaultHoverLabelBGColor: '#fff',\n    // {string} Indicates how to choose the hovered labels color.\n    //          Available values: \"node\", \"default\"\n    labelHoverColor: 'default',\n    // {string}\n    defaultLabelHoverColor: '#000',\n    // {string} Indicates how to choose the edges hover color. Available values:\n    //          \"edge\", \"default\"\n    edgeHoverColor: 'edge',\n    // {number} The size multiplicator of hovered edges.\n    edgeHoverSizeRatio: 1,\n    // {string}\n    defaultEdgeHoverColor: '#000',\n    // {boolean} Indicates if the edge extremities must be hovered when the\n    //           edge is hovered.\n    edgeHoverExtremities: false,\n    // {booleans} The different drawing modes:\n    //           false: Layered not displayed.\n    //           true: Layered displayed.\n    drawEdges: true,\n    drawNodes: true,\n    drawLabels: true,\n    drawEdgeLabels: false,\n    // {boolean} Indicates if the edges must be drawn in several frames or in\n    //           one frame, as the nodes and labels are drawn.\n    batchEdgesDrawing: false,\n    // {boolean} Indicates if the edges must be hidden during dragging and\n    //           animations.\n    hideEdgesOnMove: false,\n    // {numbers} The different batch sizes, when elements are displayed in\n    //           several frames.\n    canvasEdgesBatchSize: 500,\n    webglEdgesBatchSize: 1000,\n\n\n\n\n    /**\n     * RESCALE SETTINGS:\n     * *****************\n     */\n    // {string} Indicates of to scale the graph relatively to its container.\n    //          Available values: \"inside\", \"outside\"\n    scalingMode: 'inside',\n    // {number} The margin to keep around the graph.\n    sideMargin: 0,\n    // {number} Determine the size of the smallest and the biggest node / edges\n    //          on the screen. This mapping makes easier to display the graph,\n    //          avoiding too big nodes that take half of the screen, or too\n    //          small ones that are not readable. If the two parameters are\n    //          equals, then the minimal display size will be 0. And if they\n    //          are both equal to 0, then there is no mapping, and the radius\n    //          of the nodes will be their size.\n    minEdgeSize: 0.5,\n    maxEdgeSize: 1,\n    minNodeSize: 1,\n    maxNodeSize: 8,\n\n\n\n\n    /**\n     * CAPTORS SETTINGS:\n     * *****************\n     */\n    // {boolean}\n    touchEnabled: true,\n    // {boolean}\n    mouseEnabled: true,\n    // {boolean}\n    mouseWheelEnabled: true,\n    // {boolean}\n    doubleClickEnabled: true,\n    // {boolean} Defines whether the custom events such as \"clickNode\" can be\n    //           used.\n    eventsEnabled: true,\n    // {number} Defines by how much multiplicating the zooming level when the\n    //          user zooms with the mouse-wheel.\n    zoomingRatio: 1.7,\n    // {number} Defines by how much multiplicating the zooming level when the\n    //          user zooms by double clicking.\n    doubleClickZoomingRatio: 2.2,\n    // {number} The minimum zooming level.\n    zoomMin: 0.0625,\n    // {number} The maximum zooming level.\n    zoomMax: 2,\n    // {number} The duration of animations following a mouse scrolling.\n    mouseZoomDuration: 200,\n    // {number} The duration of animations following a mouse double click.\n    doubleClickZoomDuration: 200,\n    // {number} The duration of animations following a mouse dropping.\n    mouseInertiaDuration: 200,\n    // {number} The inertia power (mouse captor).\n    mouseInertiaRatio: 3,\n    // {number} The duration of animations following a touch dropping.\n    touchInertiaDuration: 200,\n    // {number} The inertia power (touch captor).\n    touchInertiaRatio: 3,\n    // {number} The maximum time between two clicks to make it a double click.\n    doubleClickTimeout: 300,\n    // {number} The maximum time between two taps to make it a double tap.\n    doubleTapTimeout: 300,\n    // {number} The maximum time of dragging to trigger intertia.\n    dragTimeout: 200,\n\n\n\n\n    /**\n     * GLOBAL SETTINGS:\n     * ****************\n     */\n    // {boolean} Determines whether the instance has to refresh itself\n    //           automatically when a \"resize\" event is dispatched from the\n    //           window object.\n    autoResize: true,\n    // {boolean} Determines whether the \"rescale\" middleware has to be called\n    //           automatically for each camera on refresh.\n    autoRescale: true,\n    // {boolean} If set to false, the camera method \"goTo\" will basically do\n    //           nothing.\n    enableCamera: true,\n    // {boolean} If set to false, the nodes cannot be hovered.\n    enableHovering: true,\n    // {boolean} If set to true, the edges can be hovered.\n    enableEdgeHovering: false,\n    // {number} The size of the area around the edges to activate hovering.\n    edgeHoverPrecision: 5,\n    // {boolean} If set to true, the rescale middleware will ignore node sizes\n    //           to determine the graphs boundings.\n    rescaleIgnoreSize: false,\n    // {boolean} Determines if the core has to try to catch errors on\n    //           rendering.\n    skipErrors: false,\n\n\n\n\n    /**\n     * CAMERA SETTINGS:\n     * ****************\n     */\n    // {number} The power degrees applied to the nodes/edges size relatively to\n    //          the zooming level. Basically:\n    //           > onScreenR = Math.pow(zoom, nodesPowRatio) * R\n    //           > onScreenT = Math.pow(zoom, edgesPowRatio) * T\n    nodesPowRatio: 0.5,\n    edgesPowRatio: 0.5,\n\n\n\n\n    /**\n     * ANIMATIONS SETTINGS:\n     * ********************\n     */\n    // {number} The default animation time.\n    animationsTime: 200\n  };\n\n  // Export the previously designed settings:\n  sigma.settings = sigma.utils.extend(sigma.settings || {}, settings);\n}).call(this);\n\n;(function() {\n  'use strict';\n\n  /**\n   * Dispatcher constructor.\n   *\n   * @return {dispatcher} The new dispatcher instance.\n   */\n  var dispatcher = function() {\n    Object.defineProperty(this, '_handlers', {\n      value: {}\n    });\n  };\n\n\n\n\n  /**\n   * Will execute the handler everytime that the indicated event (or the\n   * indicated events) will be triggered.\n   *\n   * @param  {string}           events  The name of the event (or the events\n   *                                    separated by spaces).\n   * @param  {function(Object)} handler The handler to bind.\n   * @return {dispatcher}               Returns the instance itself.\n   */\n  dispatcher.prototype.bind = function(events, handler) {\n    var i,\n        l,\n        event,\n        eArray;\n\n    if (\n      arguments.length === 1 &&\n      typeof arguments[0] === 'object'\n    )\n      for (events in arguments[0])\n        this.bind(events, arguments[0][events]);\n    else if (\n      arguments.length === 2 &&\n      typeof arguments[1] === 'function'\n    ) {\n      eArray = typeof events === 'string' ? events.split(' ') : events;\n\n      for (i = 0, l = eArray.length; i !== l; i += 1) {\n        event = eArray[i];\n\n        // Check that event is not '':\n        if (!event)\n          continue;\n\n        if (!this._handlers[event])\n          this._handlers[event] = [];\n\n        // Using an object instead of directly the handler will make possible\n        // later to add flags\n        this._handlers[event].push({\n          handler: handler\n        });\n      }\n    } else\n      throw 'bind: Wrong arguments.';\n\n    return this;\n  };\n\n  /**\n   * Removes the handler from a specified event (or specified events).\n   *\n   * @param  {?string}           events  The name of the event (or the events\n   *                                     separated by spaces). If undefined,\n   *                                     then all handlers are removed.\n   * @param  {?function(object)} handler The handler to unbind. If undefined,\n   *                                     each handler bound to the event or the\n   *                                     events will be removed.\n   * @return {dispatcher}                Returns the instance itself.\n   */\n  dispatcher.prototype.unbind = function(events, handler) {\n    var i,\n        n,\n        j,\n        m,\n        k,\n        a,\n        event,\n        eArray = typeof events === 'string' ? events.split(' ') : events;\n\n    if (!arguments.length) {\n      for (k in this._handlers)\n        delete this._handlers[k];\n      return this;\n    }\n\n    if (handler) {\n      for (i = 0, n = eArray.length; i !== n; i += 1) {\n        event = eArray[i];\n        if (this._handlers[event]) {\n          a = [];\n          for (j = 0, m = this._handlers[event].length; j !== m; j += 1)\n            if (this._handlers[event][j].handler !== handler)\n              a.push(this._handlers[event][j]);\n\n          this._handlers[event] = a;\n        }\n\n        if (this._handlers[event] && this._handlers[event].length === 0)\n          delete this._handlers[event];\n      }\n    } else\n      for (i = 0, n = eArray.length; i !== n; i += 1)\n        delete this._handlers[eArray[i]];\n\n    return this;\n  };\n\n  /**\n   * Executes each handler bound to the event\n   *\n   * @param  {string}     events The name of the event (or the events separated\n   *                             by spaces).\n   * @param  {?object}    data   The content of the event (optional).\n   * @return {dispatcher}        Returns the instance itself.\n   */\n  dispatcher.prototype.dispatchEvent = function(events, data) {\n    var i,\n        n,\n        j,\n        m,\n        a,\n        event,\n        eventName,\n        self = this,\n        eArray = typeof events === 'string' ? events.split(' ') : events;\n\n    data = data === undefined ? {} : data;\n\n    for (i = 0, n = eArray.length; i !== n; i += 1) {\n      eventName = eArray[i];\n\n      if (this._handlers[eventName]) {\n        event = self.getEvent(eventName, data);\n        a = [];\n\n        for (j = 0, m = this._handlers[eventName].length; j !== m; j += 1) {\n          this._handlers[eventName][j].handler(event);\n          if (!this._handlers[eventName][j].one)\n            a.push(this._handlers[eventName][j]);\n        }\n\n        this._handlers[eventName] = a;\n      }\n    }\n\n    return this;\n  };\n\n  /**\n   * Return an event object.\n   *\n   * @param  {string}  events The name of the event.\n   * @param  {?object} data   The content of the event (optional).\n   * @return {object}         Returns the instance itself.\n   */\n  dispatcher.prototype.getEvent = function(event, data) {\n    return {\n      type: event,\n      data: data || {},\n      target: this\n    };\n  };\n\n  /**\n   * A useful function to deal with inheritance. It will make the target\n   * inherit the prototype of the class dispatcher as well as its constructor.\n   *\n   * @param {object} target The target.\n   */\n  dispatcher.extend = function(target, args) {\n    var k;\n\n    for (k in dispatcher.prototype)\n      if (dispatcher.prototype.hasOwnProperty(k))\n        target[k] = dispatcher.prototype[k];\n\n    dispatcher.apply(target, args);\n  };\n\n\n\n\n  /**\n   * EXPORT:\n   * *******\n   */\n  if (typeof this.sigma !== 'undefined') {\n    this.sigma.classes = this.sigma.classes || {};\n    this.sigma.classes.dispatcher = dispatcher;\n  } else if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports)\n      exports = module.exports = dispatcher;\n    exports.dispatcher = dispatcher;\n  } else\n    this.dispatcher = dispatcher;\n}).call(this);\n\n;(function() {\n  'use strict';\n\n  /**\n   * This utils aims to facilitate the manipulation of each instance setting.\n   * Using a function instead of an object brings two main advantages: First,\n   * it will be easier in the future to catch settings updates through a\n   * function than an object. Second, giving it a full object will \"merge\" it\n   * to the settings object properly, keeping us to have to always add a loop.\n   *\n   * @return {configurable} The \"settings\" function.\n   */\n  var configurable = function() {\n    var i,\n        l,\n        data = {},\n        datas = Array.prototype.slice.call(arguments, 0);\n\n    /**\n     * The method to use to set or get any property of this instance.\n     *\n     * @param  {string|object}    a1 If it is a string and if a2 is undefined,\n     *                               then it will return the corresponding\n     *                               property. If it is a string and if a2 is\n     *                               set, then it will set a2 as the property\n     *                               corresponding to a1, and return this. If\n     *                               it is an object, then each pair string +\n     *                               object(or any other type) will be set as a\n     *                               property.\n     * @param  {*?}               a2 The new property corresponding to a1 if a1\n     *                               is a string.\n     * @return {*|configurable}      Returns itself or the corresponding\n     *                               property.\n     *\n     * Polymorphism:\n     * *************\n     * Here are some basic use examples:\n     *\n     *  > settings = new configurable();\n     *  > settings('mySetting', 42);\n     *  > settings('mySetting'); // Logs: 42\n     *  > settings('mySetting', 123);\n     *  > settings('mySetting'); // Logs: 123\n     *  > settings({mySetting: 456});\n     *  > settings('mySetting'); // Logs: 456\n     *\n     * Also, it is possible to use the function as a fallback:\n     *  > settings({mySetting: 'abc'}, 'mySetting');  // Logs: 'abc'\n     *  > settings({hisSetting: 'abc'}, 'mySetting'); // Logs: 456\n     */\n    var settings = function(a1, a2) {\n      var o,\n          i,\n          l,\n          k;\n\n      if (arguments.length === 1 && typeof a1 === 'string') {\n        if (data[a1] !== undefined)\n          return data[a1];\n        for (i = 0, l = datas.length; i < l; i++)\n          if (datas[i][a1] !== undefined)\n            return datas[i][a1];\n        return undefined;\n      } else if (typeof a1 === 'object' && typeof a2 === 'string') {\n        return (a1 || {})[a2] !== undefined ? a1[a2] : settings(a2);\n      } else {\n        o = (typeof a1 === 'object' && a2 === undefined) ? a1 : {};\n\n        if (typeof a1 === 'string')\n          o[a1] = a2;\n\n        for (i = 0, k = Object.keys(o), l = k.length; i < l; i++)\n          data[k[i]] = o[k[i]];\n\n        return this;\n      }\n    };\n\n    /**\n     * This method returns a new configurable function, with new objects\n     *\n     * @param  {object*}  Any number of objects to search in.\n     * @return {function} Returns the function. Check its documentation to know\n     *                    more about how it works.\n     */\n    settings.embedObjects = function() {\n      var args = datas.concat(\n        data\n      ).concat(\n        Array.prototype.splice.call(arguments, 0)\n      );\n\n      return configurable.apply({}, args);\n    };\n\n    // Initialize\n    for (i = 0, l = arguments.length; i < l; i++)\n      settings(arguments[i]);\n\n    return settings;\n  };\n\n  /**\n   * EXPORT:\n   * *******\n   */\n  if (typeof this.sigma !== 'undefined') {\n    this.sigma.classes = this.sigma.classes || {};\n    this.sigma.classes.configurable = configurable;\n  } else if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports)\n      exports = module.exports = configurable;\n    exports.configurable = configurable;\n  } else\n    this.configurable = configurable;\n}).call(this);\n\n;(function(undefined) {\n  'use strict';\n\n  var _methods = Object.create(null),\n      _indexes = Object.create(null),\n      _initBindings = Object.create(null),\n      _methodBindings = Object.create(null),\n      _methodBeforeBindings = Object.create(null),\n      _defaultSettings = {\n        immutable: true,\n        clone: true\n      },\n      _defaultSettingsFunction = function(key) {\n        return _defaultSettings[key];\n      };\n\n  /**\n   * The graph constructor. It initializes the data and the indexes, and binds\n   * the custom indexes and methods to its own scope.\n   *\n   * Recognized parameters:\n   * **********************\n   * Here is the exhaustive list of every accepted parameters in the settings\n   * object:\n   *\n   *   {boolean} clone     Indicates if the data have to be cloned in methods\n   *                       to add nodes or edges.\n   *   {boolean} immutable Indicates if nodes \"id\" values and edges \"id\",\n   *                       \"source\" and \"target\" values must be set as\n   *                       immutable.\n   *\n   * @param  {?configurable} settings Eventually a settings function.\n   * @return {graph}                  The new graph instance.\n   */\n  var graph = function(settings) {\n    var k,\n        fn,\n        data;\n\n    /**\n     * DATA:\n     * *****\n     * Every data that is callable from graph methods are stored in this \"data\"\n     * object. This object will be served as context for all these methods,\n     * and it is possible to add other type of data in it.\n     */\n    data = {\n      /**\n       * SETTINGS FUNCTION:\n       * ******************\n       */\n      settings: settings || _defaultSettingsFunction,\n\n      /**\n       * MAIN DATA:\n       * **********\n       */\n      nodesArray: [],\n      edgesArray: [],\n\n      /**\n       * GLOBAL INDEXES:\n       * ***************\n       * These indexes just index data by ids.\n       */\n      nodesIndex: Object.create(null),\n      edgesIndex: Object.create(null),\n\n      /**\n       * LOCAL INDEXES:\n       * **************\n       * These indexes refer from node to nodes. Each key is an id, and each\n       * value is the array of the ids of related nodes.\n       */\n      inNeighborsIndex: Object.create(null),\n      outNeighborsIndex: Object.create(null),\n      allNeighborsIndex: Object.create(null),\n\n      inNeighborsCount: Object.create(null),\n      outNeighborsCount: Object.create(null),\n      allNeighborsCount: Object.create(null)\n    };\n\n    // Execute bindings:\n    for (k in _initBindings)\n      _initBindings[k].call(data);\n\n    // Add methods to both the scope and the data objects:\n    for (k in _methods) {\n      fn = __bindGraphMethod(k, data, _methods[k]);\n      this[k] = fn;\n      data[k] = fn;\n    }\n  };\n\n\n\n\n  /**\n   * A custom tool to bind methods such that function that are bound to it will\n   * be executed anytime the method is called.\n   *\n   * @param  {string}   methodName The name of the method to bind.\n   * @param  {object}   scope      The scope where the method must be executed.\n   * @param  {function} fn         The method itself.\n   * @return {function}            The new method.\n   */\n  function __bindGraphMethod(methodName, scope, fn) {\n    var result = function() {\n      var k,\n          res;\n\n      // Execute \"before\" bound functions:\n      for (k in _methodBeforeBindings[methodName])\n        _methodBeforeBindings[methodName][k].apply(scope, arguments);\n\n      // Apply the method:\n      res = fn.apply(scope, arguments);\n\n      // Execute bound functions:\n      for (k in _methodBindings[methodName])\n        _methodBindings[methodName][k].apply(scope, arguments);\n\n      // Return res:\n      return res;\n    };\n\n    return result;\n  }\n\n  /**\n   * This custom tool function removes every pair key/value from an hash. The\n   * goal is to avoid creating a new object while some other references are\n   * still hanging in some scopes...\n   *\n   * @param  {object} obj The object to empty.\n   * @return {object}     The empty object.\n   */\n  function __emptyObject(obj) {\n    var k;\n\n    for (k in obj)\n      if (!('hasOwnProperty' in obj) || obj.hasOwnProperty(k))\n        delete obj[k];\n\n    return obj;\n  }\n\n\n\n\n  /**\n   * This global method adds a method that will be bound to the futurly created\n   * graph instances.\n   *\n   * Since these methods will be bound to their scope when the instances are\n   * created, it does not use the prototype. Because of that, methods have to\n   * be added before instances are created to make them available.\n   *\n   * Here is an example:\n   *\n   *  > graph.addMethod('getNodesCount', function() {\n   *  >   return this.nodesArray.length;\n   *  > });\n   *  >\n   *  > var myGraph = new graph();\n   *  > console.log(myGraph.getNodesCount()); // outputs 0\n   *\n   * @param  {string}   methodName The name of the method.\n   * @param  {function} fn         The method itself.\n   * @return {object}              The global graph constructor.\n   */\n  graph.addMethod = function(methodName, fn) {\n    if (\n      typeof methodName !== 'string' ||\n      typeof fn !== 'function' ||\n      arguments.length !== 2\n    )\n      throw 'addMethod: Wrong arguments.';\n\n    if (_methods[methodName] || graph[methodName])\n      throw 'The method \"' + methodName + '\" already exists.';\n\n    _methods[methodName] = fn;\n    _methodBindings[methodName] = Object.create(null);\n    _methodBeforeBindings[methodName] = Object.create(null);\n\n    return this;\n  };\n\n  /**\n   * This global method returns true if the method has already been added, and\n   * false else.\n   *\n   * Here are some examples:\n   *\n   *  > graph.hasMethod('addNode'); // returns true\n   *  > graph.hasMethod('hasMethod'); // returns true\n   *  > graph.hasMethod('unexistingMethod'); // returns false\n   *\n   * @param  {string}  methodName The name of the method.\n   * @return {boolean}            The result.\n   */\n  graph.hasMethod = function(methodName) {\n    return !!(_methods[methodName] || graph[methodName]);\n  };\n\n  /**\n   * This global methods attaches a function to a method. Anytime the specified\n   * method is called, the attached function is called right after, with the\n   * same arguments and in the same scope. The attached function is called\n   * right before if the last argument is true, unless the method is the graph\n   * constructor.\n   *\n   * To attach a function to the graph constructor, use 'constructor' as the\n   * method name (first argument).\n   *\n   * The main idea is to have a clean way to keep custom indexes up to date,\n   * for instance:\n   *\n   *  > var timesAddNodeCalled = 0;\n   *  > graph.attach('addNode', 'timesAddNodeCalledInc', function() {\n   *  >   timesAddNodeCalled++;\n   *  > });\n   *  >\n   *  > var myGraph = new graph();\n   *  > console.log(timesAddNodeCalled); // outputs 0\n   *  >\n   *  > myGraph.addNode({ id: '1' }).addNode({ id: '2' });\n   *  > console.log(timesAddNodeCalled); // outputs 2\n   *\n   * The idea for calling a function before is to provide pre-processors, for\n   * instance:\n   *\n   *  > var colorPalette = { Person: '#C3CBE1', Place: '#9BDEBD' };\n   *  > graph.attach('addNode', 'applyNodeColorPalette', function(n) {\n   *  >   n.color = colorPalette[n.category];\n   *  > }, true);\n   *  >\n   *  > var myGraph = new graph();\n   *  > myGraph.addNode({ id: 'n0', category: 'Person' });\n   *  > console.log(myGraph.nodes('n0').color); // outputs '#C3CBE1'\n   *\n   * @param  {string}   methodName The name of the related method or\n   *                               \"constructor\".\n   * @param  {string}   key        The key to identify the function to attach.\n   * @param  {function} fn         The function to bind.\n   * @param  {boolean}  before     If true the function is called right before.\n   * @return {object}              The global graph constructor.\n   */\n  graph.attach = function(methodName, key, fn, before) {\n    if (\n      typeof methodName !== 'string' ||\n      typeof key !== 'string' ||\n      typeof fn !== 'function' ||\n      arguments.length < 3 ||\n      arguments.length > 4\n    )\n      throw 'attach: Wrong arguments.';\n\n    var bindings;\n\n    if (methodName === 'constructor')\n      bindings = _initBindings;\n    else {\n      if (before) {\n        if (!_methodBeforeBindings[methodName])\n        throw 'The method \"' + methodName + '\" does not exist.';\n\n        bindings = _methodBeforeBindings[methodName];\n      }\n      else {\n        if (!_methodBindings[methodName])\n          throw 'The method \"' + methodName + '\" does not exist.';\n\n        bindings = _methodBindings[methodName];\n      }\n    }\n\n    if (bindings[key])\n      throw 'A function \"' + key + '\" is already attached ' +\n            'to the method \"' + methodName + '\".';\n\n    bindings[key] = fn;\n\n    return this;\n  };\n\n  /**\n   * Alias of attach(methodName, key, fn, true).\n   */\n  graph.attachBefore = function(methodName, key, fn) {\n    return this.attach(methodName, key, fn, true);\n  };\n\n  /**\n   * This methods is just an helper to deal with custom indexes. It takes as\n   * arguments the name of the index and an object containing all the different\n   * functions to bind to the methods.\n   *\n   * Here is a basic example, that creates an index to keep the number of nodes\n   * in the current graph. It also adds a method to provide a getter on that\n   * new index:\n   *\n   *  > sigma.classes.graph.addIndex('nodesCount', {\n   *  >   constructor: function() {\n   *  >     this.nodesCount = 0;\n   *  >   },\n   *  >   addNode: function() {\n   *  >     this.nodesCount++;\n   *  >   },\n   *  >   dropNode: function() {\n   *  >     this.nodesCount--;\n   *  >   }\n   *  > });\n   *  >\n   *  > sigma.classes.graph.addMethod('getNodesCount', function() {\n   *  >   return this.nodesCount;\n   *  > });\n   *  >\n   *  > var myGraph = new sigma.classes.graph();\n   *  > console.log(myGraph.getNodesCount()); // outputs 0\n   *  >\n   *  > myGraph.addNode({ id: '1' }).addNode({ id: '2' });\n   *  > console.log(myGraph.getNodesCount()); // outputs 2\n   *\n   * @param  {string} name     The name of the index.\n   * @param  {object} bindings The object containing the functions to bind.\n   * @return {object}          The global graph constructor.\n   */\n  graph.addIndex = function(name, bindings) {\n    if (\n      typeof name !== 'string' ||\n      Object(bindings) !== bindings ||\n      arguments.length !== 2\n    )\n      throw 'addIndex: Wrong arguments.';\n\n    if (_indexes[name])\n      throw 'The index \"' + name + '\" already exists.';\n\n    var k;\n\n    // Store the bindings:\n    _indexes[name] = bindings;\n\n    // Attach the bindings:\n    for (k in bindings)\n      if (typeof bindings[k] !== 'function')\n        throw 'The bindings must be functions.';\n      else\n        graph.attach(k, name, bindings[k]);\n\n    return this;\n  };\n\n\n\n\n  /**\n   * This method adds a node to the graph. The node must be an object, with a\n   * string under the key \"id\". Except for this, it is possible to add any\n   * other attribute, that will be preserved all along the manipulations.\n   *\n   * If the graph option \"clone\" has a truthy value, the node will be cloned\n   * when added to the graph. Also, if the graph option \"immutable\" has a\n   * truthy value, its id will be defined as immutable.\n   *\n   * @param  {object} node The node to add.\n   * @return {object}      The graph instance.\n   */\n  graph.addMethod('addNode', function(node) {\n    // Check that the node is an object and has an id:\n    if (Object(node) !== node || arguments.length !== 1)\n      throw 'addNode: Wrong arguments.';\n\n    if (typeof node.id !== 'string' && typeof node.id !== 'number')\n      throw 'The node must have a string or number id.';\n\n    if (this.nodesIndex[node.id])\n      throw 'The node \"' + node.id + '\" already exists.';\n\n    var k,\n        id = node.id,\n        validNode = Object.create(null);\n\n    // Check the \"clone\" option:\n    if (this.settings('clone')) {\n      for (k in node)\n        if (k !== 'id')\n          validNode[k] = node[k];\n    } else\n      validNode = node;\n\n    // Check the \"immutable\" option:\n    if (this.settings('immutable'))\n      Object.defineProperty(validNode, 'id', {\n        value: id,\n        enumerable: true\n      });\n    else\n      validNode.id = id;\n\n    // Add empty containers for edges indexes:\n    this.inNeighborsIndex[id] = Object.create(null);\n    this.outNeighborsIndex[id] = Object.create(null);\n    this.allNeighborsIndex[id] = Object.create(null);\n\n    this.inNeighborsCount[id] = 0;\n    this.outNeighborsCount[id] = 0;\n    this.allNeighborsCount[id] = 0;\n\n    // Add the node to indexes:\n    this.nodesArray.push(validNode);\n    this.nodesIndex[validNode.id] = validNode;\n\n    // Return the current instance:\n    return this;\n  });\n\n  /**\n   * This method adds an edge to the graph. The edge must be an object, with a\n   * string under the key \"id\", and strings under the keys \"source\" and\n   * \"target\" that design existing nodes. Except for this, it is possible to\n   * add any other attribute, that will be preserved all along the\n   * manipulations.\n   *\n   * If the graph option \"clone\" has a truthy value, the edge will be cloned\n   * when added to the graph. Also, if the graph option \"immutable\" has a\n   * truthy value, its id, source and target will be defined as immutable.\n   *\n   * @param  {object} edge The edge to add.\n   * @return {object}      The graph instance.\n   */\n  graph.addMethod('addEdge', function(edge) {\n    // Check that the edge is an object and has an id:\n    if (Object(edge) !== edge || arguments.length !== 1)\n      throw 'addEdge: Wrong arguments.';\n\n    if (typeof edge.id !== 'string' && typeof edge.id !== 'number')\n      throw 'The edge must have a string or number id.';\n\n    if ((typeof edge.source !== 'string' && typeof edge.source !== 'number') ||\n        !this.nodesIndex[edge.source])\n      throw 'The edge source must have an existing node id.';\n\n    if ((typeof edge.target !== 'string' && typeof edge.target !== 'number') ||\n        !this.nodesIndex[edge.target])\n      throw 'The edge target must have an existing node id.';\n\n    if (this.edgesIndex[edge.id])\n      throw 'The edge \"' + edge.id + '\" already exists.';\n\n    var k,\n        validEdge = Object.create(null);\n\n    // Check the \"clone\" option:\n    if (this.settings('clone')) {\n      for (k in edge)\n        if (k !== 'id' && k !== 'source' && k !== 'target')\n          validEdge[k] = edge[k];\n    } else\n      validEdge = edge;\n\n    // Check the \"immutable\" option:\n    if (this.settings('immutable')) {\n      Object.defineProperty(validEdge, 'id', {\n        value: edge.id,\n        enumerable: true\n      });\n\n      Object.defineProperty(validEdge, 'source', {\n        value: edge.source,\n        enumerable: true\n      });\n\n      Object.defineProperty(validEdge, 'target', {\n        value: edge.target,\n        enumerable: true\n      });\n    } else {\n      validEdge.id = edge.id;\n      validEdge.source = edge.source;\n      validEdge.target = edge.target;\n    }\n\n    // Add the edge to indexes:\n    this.edgesArray.push(validEdge);\n    this.edgesIndex[validEdge.id] = validEdge;\n\n    if (!this.inNeighborsIndex[validEdge.target][validEdge.source])\n      this.inNeighborsIndex[validEdge.target][validEdge.source] =\n        Object.create(null);\n    this.inNeighborsIndex[validEdge.target][validEdge.source][validEdge.id] =\n      validEdge;\n\n    if (!this.outNeighborsIndex[validEdge.source][validEdge.target])\n      this.outNeighborsIndex[validEdge.source][validEdge.target] =\n        Object.create(null);\n    this.outNeighborsIndex[validEdge.source][validEdge.target][validEdge.id] =\n      validEdge;\n\n    if (!this.allNeighborsIndex[validEdge.source][validEdge.target])\n      this.allNeighborsIndex[validEdge.source][validEdge.target] =\n        Object.create(null);\n    this.allNeighborsIndex[validEdge.source][validEdge.target][validEdge.id] =\n      validEdge;\n\n    if (validEdge.target !== validEdge.source) {\n      if (!this.allNeighborsIndex[validEdge.target][validEdge.source])\n        this.allNeighborsIndex[validEdge.target][validEdge.source] =\n          Object.create(null);\n      this.allNeighborsIndex[validEdge.target][validEdge.source][validEdge.id] =\n        validEdge;\n    }\n\n    // Keep counts up to date:\n    this.inNeighborsCount[validEdge.target]++;\n    this.outNeighborsCount[validEdge.source]++;\n    this.allNeighborsCount[validEdge.target]++;\n    this.allNeighborsCount[validEdge.source]++;\n\n    return this;\n  });\n\n  /**\n   * This method drops a node from the graph. It also removes each edge that is\n   * bound to it, through the dropEdge method. An error is thrown if the node\n   * does not exist.\n   *\n   * @param  {string} id The node id.\n   * @return {object}    The graph instance.\n   */\n  graph.addMethod('dropNode', function(id) {\n    // Check that the arguments are valid:\n    if ((typeof id !== 'string' && typeof id !== 'number') ||\n        arguments.length !== 1)\n      throw 'dropNode: Wrong arguments.';\n\n    if (!this.nodesIndex[id])\n      throw 'The node \"' + id + '\" does not exist.';\n\n    var i, k, l;\n\n    // Remove the node from indexes:\n    delete this.nodesIndex[id];\n    for (i = 0, l = this.nodesArray.length; i < l; i++)\n      if (this.nodesArray[i].id === id) {\n        this.nodesArray.splice(i, 1);\n        break;\n      }\n\n    // Remove related edges:\n    for (i = this.edgesArray.length - 1; i >= 0; i--)\n      if (this.edgesArray[i].source === id || this.edgesArray[i].target === id)\n        this.dropEdge(this.edgesArray[i].id);\n\n    // Remove related edge indexes:\n    delete this.inNeighborsIndex[id];\n    delete this.outNeighborsIndex[id];\n    delete this.allNeighborsIndex[id];\n\n    delete this.inNeighborsCount[id];\n    delete this.outNeighborsCount[id];\n    delete this.allNeighborsCount[id];\n\n    for (k in this.nodesIndex) {\n      delete this.inNeighborsIndex[k][id];\n      delete this.outNeighborsIndex[k][id];\n      delete this.allNeighborsIndex[k][id];\n    }\n\n    return this;\n  });\n\n  /**\n   * This method drops an edge from the graph. An error is thrown if the edge\n   * does not exist.\n   *\n   * @param  {string} id The edge id.\n   * @return {object}    The graph instance.\n   */\n  graph.addMethod('dropEdge', function(id) {\n    // Check that the arguments are valid:\n    if ((typeof id !== 'string' && typeof id !== 'number') ||\n        arguments.length !== 1)\n      throw 'dropEdge: Wrong arguments.';\n\n    if (!this.edgesIndex[id])\n      throw 'The edge \"' + id + '\" does not exist.';\n\n    var i, l, edge;\n\n    // Remove the edge from indexes:\n    edge = this.edgesIndex[id];\n    delete this.edgesIndex[id];\n    for (i = 0, l = this.edgesArray.length; i < l; i++)\n      if (this.edgesArray[i].id === id) {\n        this.edgesArray.splice(i, 1);\n        break;\n      }\n\n    delete this.inNeighborsIndex[edge.target][edge.source][edge.id];\n    if (!Object.keys(this.inNeighborsIndex[edge.target][edge.source]).length)\n      delete this.inNeighborsIndex[edge.target][edge.source];\n\n    delete this.outNeighborsIndex[edge.source][edge.target][edge.id];\n    if (!Object.keys(this.outNeighborsIndex[edge.source][edge.target]).length)\n      delete this.outNeighborsIndex[edge.source][edge.target];\n\n    delete this.allNeighborsIndex[edge.source][edge.target][edge.id];\n    if (!Object.keys(this.allNeighborsIndex[edge.source][edge.target]).length)\n      delete this.allNeighborsIndex[edge.source][edge.target];\n\n    if (edge.target !== edge.source) {\n      delete this.allNeighborsIndex[edge.target][edge.source][edge.id];\n      if (!Object.keys(this.allNeighborsIndex[edge.target][edge.source]).length)\n        delete this.allNeighborsIndex[edge.target][edge.source];\n    }\n\n    this.inNeighborsCount[edge.target]--;\n    this.outNeighborsCount[edge.source]--;\n    this.allNeighborsCount[edge.source]--;\n    this.allNeighborsCount[edge.target]--;\n\n    return this;\n  });\n\n  /**\n   * This method destroys the current instance. It basically empties each index\n   * and methods attached to the graph.\n   */\n  graph.addMethod('kill', function() {\n    // Delete arrays:\n    this.nodesArray.length = 0;\n    this.edgesArray.length = 0;\n    delete this.nodesArray;\n    delete this.edgesArray;\n\n    // Delete indexes:\n    delete this.nodesIndex;\n    delete this.edgesIndex;\n    delete this.inNeighborsIndex;\n    delete this.outNeighborsIndex;\n    delete this.allNeighborsIndex;\n    delete this.inNeighborsCount;\n    delete this.outNeighborsCount;\n    delete this.allNeighborsCount;\n  });\n\n  /**\n   * This method empties the nodes and edges arrays, as well as the different\n   * indexes.\n   *\n   * @return {object} The graph instance.\n   */\n  graph.addMethod('clear', function() {\n    this.nodesArray.length = 0;\n    this.edgesArray.length = 0;\n\n    // Due to GC issues, I prefer not to create new object. These objects are\n    // only available from the methods and attached functions, but still, it is\n    // better to prevent ghost references to unrelevant data...\n    __emptyObject(this.nodesIndex);\n    __emptyObject(this.edgesIndex);\n    __emptyObject(this.nodesIndex);\n    __emptyObject(this.inNeighborsIndex);\n    __emptyObject(this.outNeighborsIndex);\n    __emptyObject(this.allNeighborsIndex);\n    __emptyObject(this.inNeighborsCount);\n    __emptyObject(this.outNeighborsCount);\n    __emptyObject(this.allNeighborsCount);\n\n    return this;\n  });\n\n  /**\n   * This method reads an object and adds the nodes and edges, through the\n   * proper methods \"addNode\" and \"addEdge\".\n   *\n   * Here is an example:\n   *\n   *  > var myGraph = new graph();\n   *  > myGraph.read({\n   *  >   nodes: [\n   *  >     { id: 'n0' },\n   *  >     { id: 'n1' }\n   *  >   ],\n   *  >   edges: [\n   *  >     {\n   *  >       id: 'e0',\n   *  >       source: 'n0',\n   *  >       target: 'n1'\n   *  >     }\n   *  >   ]\n   *  > });\n   *  >\n   *  > console.log(\n   *  >   myGraph.nodes().length,\n   *  >   myGraph.edges().length\n   *  > ); // outputs 2 1\n   *\n   * @param  {object} g The graph object.\n   * @return {object}   The graph instance.\n   */\n  graph.addMethod('read', function(g) {\n    var i,\n        a,\n        l;\n\n    a = g.nodes || [];\n    for (i = 0, l = a.length; i < l; i++)\n      this.addNode(a[i]);\n\n    a = g.edges || [];\n    for (i = 0, l = a.length; i < l; i++)\n      this.addEdge(a[i]);\n\n    return this;\n  });\n\n  /**\n   * This methods returns one or several nodes, depending on how it is called.\n   *\n   * To get the array of nodes, call \"nodes\" without argument. To get a\n   * specific node, call it with the id of the node. The get multiple node,\n   * call it with an array of ids, and it will return the array of nodes, in\n   * the same order.\n   *\n   * @param  {?(string|array)} v Eventually one id, an array of ids.\n   * @return {object|array}      The related node or array of nodes.\n   */\n  graph.addMethod('nodes', function(v) {\n    // Clone the array of nodes and return it:\n    if (!arguments.length)\n      return this.nodesArray.slice(0);\n\n    // Return the related node:\n    if (arguments.length === 1 &&\n        (typeof v === 'string' || typeof v === 'number'))\n      return this.nodesIndex[v];\n\n    // Return an array of the related node:\n    if (\n      arguments.length === 1 &&\n      Object.prototype.toString.call(v) === '[object Array]'\n    ) {\n      var i,\n          l,\n          a = [];\n\n      for (i = 0, l = v.length; i < l; i++)\n        if (typeof v[i] === 'string' || typeof v[i] === 'number')\n          a.push(this.nodesIndex[v[i]]);\n        else\n          throw 'nodes: Wrong arguments.';\n\n      return a;\n    }\n\n    throw 'nodes: Wrong arguments.';\n  });\n\n  /**\n   * This methods returns the degree of one or several nodes, depending on how\n   * it is called. It is also possible to get incoming or outcoming degrees\n   * instead by specifying 'in' or 'out' as a second argument.\n   *\n   * @param  {string|array} v     One id, an array of ids.\n   * @param  {?string}      which Which degree is required. Values are 'in',\n   *                              'out', and by default the normal degree.\n   * @return {number|array}       The related degree or array of degrees.\n   */\n  graph.addMethod('degree', function(v, which) {\n    // Check which degree is required:\n    which = {\n      'in': this.inNeighborsCount,\n      'out': this.outNeighborsCount\n    }[which || ''] || this.allNeighborsCount;\n\n    // Return the related node:\n    if (typeof v === 'string' || typeof v === 'number')\n      return which[v];\n\n    // Return an array of the related node:\n    if (Object.prototype.toString.call(v) === '[object Array]') {\n      var i,\n          l,\n          a = [];\n\n      for (i = 0, l = v.length; i < l; i++)\n        if (typeof v[i] === 'string' || typeof v[i] === 'number')\n          a.push(which[v[i]]);\n        else\n          throw 'degree: Wrong arguments.';\n\n      return a;\n    }\n\n    throw 'degree: Wrong arguments.';\n  });\n\n  /**\n   * This methods returns one or several edges, depending on how it is called.\n   *\n   * To get the array of edges, call \"edges\" without argument. To get a\n   * specific edge, call it with the id of the edge. The get multiple edge,\n   * call it with an array of ids, and it will return the array of edges, in\n   * the same order.\n   *\n   * @param  {?(string|array)} v Eventually one id, an array of ids.\n   * @return {object|array}      The related edge or array of edges.\n   */\n  graph.addMethod('edges', function(v) {\n    // Clone the array of edges and return it:\n    if (!arguments.length)\n      return this.edgesArray.slice(0);\n\n    // Return the related edge:\n    if (arguments.length === 1 &&\n        (typeof v === 'string' || typeof v === 'number'))\n      return this.edgesIndex[v];\n\n    // Return an array of the related edge:\n    if (\n      arguments.length === 1 &&\n      Object.prototype.toString.call(v) === '[object Array]'\n    ) {\n      var i,\n          l,\n          a = [];\n\n      for (i = 0, l = v.length; i < l; i++)\n        if (typeof v[i] === 'string' || typeof v[i] === 'number')\n          a.push(this.edgesIndex[v[i]]);\n        else\n          throw 'edges: Wrong arguments.';\n\n      return a;\n    }\n\n    throw 'edges: Wrong arguments.';\n  });\n\n\n  /**\n   * EXPORT:\n   * *******\n   */\n  if (typeof sigma !== 'undefined') {\n    sigma.classes = sigma.classes || Object.create(null);\n    sigma.classes.graph = graph;\n  } else if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports)\n      exports = module.exports = graph;\n    exports.graph = graph;\n  } else\n    this.graph = graph;\n}).call(this);\n\n;(function(undefined) {\n  'use strict';\n\n  if (typeof sigma === 'undefined')\n    throw 'sigma is not declared';\n\n  sigma.utils.pkg('sigma.classes');\n\n  /**\n   * The camera constructor. It just initializes its attributes and methods.\n   *\n   * @param  {string}       id       The id.\n   * @param  {sigma.classes.graph}  graph    The graph.\n   * @param  {configurable} settings The settings function.\n   * @param  {?object}      options  Eventually some overriding options.\n   * @return {camera}                Returns the fresh new camera instance.\n   */\n  sigma.classes.camera = function(id, graph, settings, options) {\n    sigma.classes.dispatcher.extend(this);\n\n    Object.defineProperty(this, 'graph', {\n      value: graph\n    });\n    Object.defineProperty(this, 'id', {\n      value: id\n    });\n    Object.defineProperty(this, 'readPrefix', {\n      value: 'read_cam' + id + ':'\n    });\n    Object.defineProperty(this, 'prefix', {\n      value: 'cam' + id + ':'\n    });\n\n    this.x = 0;\n    this.y = 0;\n    this.ratio = 1;\n    this.angle = 0;\n    this.isAnimated = false;\n    this.settings = (typeof options === 'object' && options) ?\n      settings.embedObject(options) :\n      settings;\n  };\n\n  /**\n   * Updates the camera position.\n   *\n   * @param  {object} coordinates The new coordinates object.\n   * @return {camera}             Returns the camera.\n   */\n  sigma.classes.camera.prototype.goTo = function(coordinates) {\n    if (!this.settings('enableCamera'))\n      return this;\n\n    var i,\n        l,\n        c = coordinates || {},\n        keys = ['x', 'y', 'ratio', 'angle'];\n\n    for (i = 0, l = keys.length; i < l; i++)\n      if (c[keys[i]] !== undefined) {\n        if (typeof c[keys[i]] === 'number' && !isNaN(c[keys[i]]))\n          this[keys[i]] = c[keys[i]];\n        else\n          throw 'Value for \"' + keys[i] + '\" is not a number.';\n      }\n\n    this.dispatchEvent('coordinatesUpdated');\n    return this;\n  };\n\n  /**\n   * This method takes a graph and computes for each node and edges its\n   * coordinates relatively to the center of the camera. Basically, it will\n   * compute the coordinates that will be used by the graphic renderers.\n   *\n   * Since it should be possible to use different cameras and different\n   * renderers, it is possible to specify a prefix to put before the new\n   * coordinates (to get something like \"node.camera1_x\")\n   *\n   * @param  {?string} read    The prefix of the coordinates to read.\n   * @param  {?string} write   The prefix of the coordinates to write.\n   * @param  {?object} options Eventually an object of options. Those can be:\n   *                           - A restricted nodes array.\n   *                           - A restricted edges array.\n   *                           - A width.\n   *                           - A height.\n   * @return {camera}        Returns the camera.\n   */\n  sigma.classes.camera.prototype.applyView = function(read, write, options) {\n    options = options || {};\n    write = write !== undefined ? write : this.prefix;\n    read = read !== undefined ? read : this.readPrefix;\n\n    var nodes = options.nodes || this.graph.nodes(),\n        edges = options.edges || this.graph.edges();\n\n    var i,\n        l,\n        node,\n        relCos = Math.cos(this.angle) / this.ratio,\n        relSin = Math.sin(this.angle) / this.ratio,\n        nodeRatio = Math.pow(this.ratio, this.settings('nodesPowRatio')),\n        edgeRatio = Math.pow(this.ratio, this.settings('edgesPowRatio')),\n        xOffset = (options.width || 0) / 2 - this.x * relCos - this.y * relSin,\n        yOffset = (options.height || 0) / 2 - this.y * relCos + this.x * relSin;\n\n    for (i = 0, l = nodes.length; i < l; i++) {\n      node = nodes[i];\n      node[write + 'x'] =\n        (node[read + 'x'] || 0) * relCos +\n        (node[read + 'y'] || 0) * relSin +\n        xOffset;\n      node[write + 'y'] =\n        (node[read + 'y'] || 0) * relCos -\n        (node[read + 'x'] || 0) * relSin +\n        yOffset;\n      node[write + 'size'] =\n        (node[read + 'size'] || 0) /\n        nodeRatio;\n    }\n\n    for (i = 0, l = edges.length; i < l; i++) {\n      edges[i][write + 'size'] =\n        (edges[i][read + 'size'] || 0) /\n        edgeRatio;\n    }\n\n    return this;\n  };\n\n  /**\n   * This function converts the coordinates of a point from the frame of the\n   * camera to the frame of the graph.\n   *\n   * @param  {number} x The X coordinate of the point in the frame of the\n   *                    camera.\n   * @param  {number} y The Y coordinate of the point in the frame of the\n   *                    camera.\n   * @return {object}   The point coordinates in the frame of the graph.\n   */\n  sigma.classes.camera.prototype.graphPosition = function(x, y, vector) {\n    var X = 0,\n        Y = 0,\n        cos = Math.cos(this.angle),\n        sin = Math.sin(this.angle);\n\n    // Revert the origin differential vector:\n    if (!vector) {\n      X = - (this.x * cos + this.y * sin) / this.ratio;\n      Y = - (this.y * cos - this.x * sin) / this.ratio;\n    }\n\n    return {\n      x: (x * cos + y * sin) / this.ratio + X,\n      y: (y * cos - x * sin) / this.ratio + Y\n    };\n  };\n\n  /**\n   * This function converts the coordinates of a point from the frame of the\n   * graph to the frame of the camera.\n   *\n   * @param  {number} x The X coordinate of the point in the frame of the\n   *                    graph.\n   * @param  {number} y The Y coordinate of the point in the frame of the\n   *                    graph.\n   * @return {object}   The point coordinates in the frame of the camera.\n   */\n  sigma.classes.camera.prototype.cameraPosition = function(x, y, vector) {\n    var X = 0,\n        Y = 0,\n        cos = Math.cos(this.angle),\n        sin = Math.sin(this.angle);\n\n    // Revert the origin differential vector:\n    if (!vector) {\n      X = - (this.x * cos + this.y * sin) / this.ratio;\n      Y = - (this.y * cos - this.x * sin) / this.ratio;\n    }\n\n    return {\n      x: ((x - X) * cos - (y - Y) * sin) * this.ratio,\n      y: ((y - Y) * cos + (x - X) * sin) * this.ratio\n    };\n  };\n\n  /**\n   * This method returns the transformation matrix of the camera. This is\n   * especially useful to apply the camera view directly in shaders, in case of\n   * WebGL rendering.\n   *\n   * @return {array} The transformation matrix.\n   */\n  sigma.classes.camera.prototype.getMatrix = function() {\n    var scale = sigma.utils.matrices.scale(1 / this.ratio),\n        rotation = sigma.utils.matrices.rotation(this.angle),\n        translation = sigma.utils.matrices.translation(-this.x, -this.y),\n        matrix = sigma.utils.matrices.multiply(\n          translation,\n          sigma.utils.matrices.multiply(\n            rotation,\n            scale\n          )\n        );\n\n    return matrix;\n  };\n\n  /**\n   * Taking a width and a height as parameters, this method returns the\n   * coordinates of the rectangle representing the camera on screen, in the\n   * graph's referentiel.\n   *\n   * To keep displaying labels of nodes going out of the screen, the method\n   * keeps a margin around the screen in the returned rectangle.\n   *\n   * @param  {number} width  The width of the screen.\n   * @param  {number} height The height of the screen.\n   * @return {object}        The rectangle as x1, y1, x2 and y2, representing\n   *                         two opposite points.\n   */\n  sigma.classes.camera.prototype.getRectangle = function(width, height) {\n    var widthVect = this.cameraPosition(width, 0, true),\n        heightVect = this.cameraPosition(0, height, true),\n        centerVect = this.cameraPosition(width / 2, height / 2, true),\n        marginX = this.cameraPosition(width / 4, 0, true).x,\n        marginY = this.cameraPosition(0, height / 4, true).y;\n\n    return {\n      x1: this.x - centerVect.x - marginX,\n      y1: this.y - centerVect.y - marginY,\n      x2: this.x - centerVect.x + marginX + widthVect.x,\n      y2: this.y - centerVect.y - marginY + widthVect.y,\n      height: Math.sqrt(\n        Math.pow(heightVect.x, 2) +\n        Math.pow(heightVect.y + 2 * marginY, 2)\n      )\n    };\n  };\n}).call(this);\n\n;(function(undefined) {\n  'use strict';\n\n  /**\n   * Sigma Quadtree Module\n   * =====================\n   *\n   * Author: Guillaume Plique (Yomguithereal)\n   * Version: 0.2\n   */\n\n\n\n  /**\n   * Quad Geometric Operations\n   * -------------------------\n   *\n   * A useful batch of geometric operations used by the quadtree.\n   */\n\n  var _geom = {\n\n    /**\n     * Transforms a graph node with x, y and size into an\n     * axis-aligned square.\n     *\n     * @param  {object} A graph node with at least a point (x, y) and a size.\n     * @return {object} A square: two points (x1, y1), (x2, y2) and height.\n     */\n    pointToSquare: function(n) {\n      return {\n        x1: n.x - n.size,\n        y1: n.y - n.size,\n        x2: n.x + n.size,\n        y2: n.y - n.size,\n        height: n.size * 2\n      };\n    },\n\n    /**\n     * Checks whether a rectangle is axis-aligned.\n     *\n     * @param  {object}  A rectangle defined by two points\n     *                   (x1, y1) and (x2, y2).\n     * @return {boolean} True if the rectangle is axis-aligned.\n     */\n    isAxisAligned: function(r) {\n      return r.x1 === r.x2 || r.y1 === r.y2;\n    },\n\n    /**\n     * Compute top points of an axis-aligned rectangle. This is useful in\n     * cases when the rectangle has been rotated (left, right or bottom up) and\n     * later operations need to know the top points.\n     *\n     * @param  {object} An axis-aligned rectangle defined by two points\n     *                  (x1, y1), (x2, y2) and height.\n     * @return {object} A rectangle: two points (x1, y1), (x2, y2) and height.\n     */\n    axisAlignedTopPoints: function(r) {\n\n      // Basic\n      if (r.y1 === r.y2 && r.x1 < r.x2)\n        return r;\n\n      // Rotated to right\n      if (r.x1 === r.x2 && r.y2 > r.y1)\n        return {\n          x1: r.x1 - r.height, y1: r.y1,\n          x2: r.x1, y2: r.y1,\n          height: r.height\n        };\n\n      // Rotated to left\n      if (r.x1 === r.x2 && r.y2 < r.y1)\n        return {\n          x1: r.x1, y1: r.y2,\n          x2: r.x2 + r.height, y2: r.y2,\n          height: r.height\n        };\n\n      // Bottom's up\n      return {\n        x1: r.x2, y1: r.y1 - r.height,\n        x2: r.x1, y2: r.y1 - r.height,\n        height: r.height\n      };\n    },\n\n    /**\n     * Get coordinates of a rectangle's lower left corner from its top points.\n     *\n     * @param  {object} A rectangle defined by two points (x1, y1) and (x2, y2).\n     * @return {object} Coordinates of the corner (x, y).\n     */\n    lowerLeftCoor: function(r) {\n      var width = (\n        Math.sqrt(\n          Math.pow(r.x2 - r.x1, 2) +\n          Math.pow(r.y2 - r.y1, 2)\n        )\n      );\n\n      return {\n        x: r.x1 - (r.y2 - r.y1) * r.height / width,\n        y: r.y1 + (r.x2 - r.x1) * r.height / width\n      };\n    },\n\n    /**\n     * Get coordinates of a rectangle's lower right corner from its top points\n     * and its lower left corner.\n     *\n     * @param  {object} A rectangle defined by two points (x1, y1) and (x2, y2).\n     * @param  {object} A corner's coordinates (x, y).\n     * @return {object} Coordinates of the corner (x, y).\n     */\n    lowerRightCoor: function(r, llc) {\n      return {\n        x: llc.x - r.x1 + r.x2,\n        y: llc.y - r.y1 + r.y2\n      };\n    },\n\n    /**\n     * Get the coordinates of all the corners of a rectangle from its top point.\n     *\n     * @param  {object} A rectangle defined by two points (x1, y1) and (x2, y2).\n     * @return {array}  An array of the four corners' coordinates (x, y).\n     */\n    rectangleCorners: function(r) {\n      var llc = this.lowerLeftCoor(r),\n          lrc = this.lowerRightCoor(r, llc);\n\n      return [\n        {x: r.x1, y: r.y1},\n        {x: r.x2, y: r.y2},\n        {x: llc.x, y: llc.y},\n        {x: lrc.x, y: lrc.y}\n      ];\n    },\n\n    /**\n     * Split a square defined by its boundaries into four.\n     *\n     * @param  {object} Boundaries of the square (x, y, width, height).\n     * @return {array}  An array containing the four new squares, themselves\n     *                  defined by an array of their four corners (x, y).\n     */\n    splitSquare: function(b) {\n      return [\n        [\n          {x: b.x, y: b.y},\n          {x: b.x + b.width / 2, y: b.y},\n          {x: b.x, y: b.y + b.height / 2},\n          {x: b.x + b.width / 2, y: b.y + b.height / 2}\n        ],\n        [\n          {x: b.x + b.width / 2, y: b.y},\n          {x: b.x + b.width, y: b.y},\n          {x: b.x + b.width / 2, y: b.y + b.height / 2},\n          {x: b.x + b.width, y: b.y + b.height / 2}\n        ],\n        [\n          {x: b.x, y: b.y + b.height / 2},\n          {x: b.x + b.width / 2, y: b.y + b.height / 2},\n          {x: b.x, y: b.y + b.height},\n          {x: b.x + b.width / 2, y: b.y + b.height}\n        ],\n        [\n          {x: b.x + b.width / 2, y: b.y + b.height / 2},\n          {x: b.x + b.width, y: b.y + b.height / 2},\n          {x: b.x + b.width / 2, y: b.y + b.height},\n          {x: b.x + b.width, y: b.y + b.height}\n        ]\n      ];\n    },\n\n    /**\n     * Compute the four axis between corners of rectangle A and corners of\n     * rectangle B. This is needed later to check an eventual collision.\n     *\n     * @param  {array} An array of rectangle A's four corners (x, y).\n     * @param  {array} An array of rectangle B's four corners (x, y).\n     * @return {array} An array of four axis defined by their coordinates (x,y).\n     */\n    axis: function(c1, c2) {\n      return [\n        {x: c1[1].x - c1[0].x, y: c1[1].y - c1[0].y},\n        {x: c1[1].x - c1[3].x, y: c1[1].y - c1[3].y},\n        {x: c2[0].x - c2[2].x, y: c2[0].y - c2[2].y},\n        {x: c2[0].x - c2[1].x, y: c2[0].y - c2[1].y}\n      ];\n    },\n\n    /**\n     * Project a rectangle's corner on an axis.\n     *\n     * @param  {object} Coordinates of a corner (x, y).\n     * @param  {object} Coordinates of an axis (x, y).\n     * @return {object} The projection defined by coordinates (x, y).\n     */\n    projection: function(c, a) {\n      var l = (\n        (c.x * a.x + c.y * a.y) /\n        (Math.pow(a.x, 2) + Math.pow(a.y, 2))\n      );\n\n      return {\n        x: l * a.x,\n        y: l * a.y\n      };\n    },\n\n    /**\n     * Check whether two rectangles collide on one particular axis.\n     *\n     * @param  {object}   An axis' coordinates (x, y).\n     * @param  {array}    Rectangle A's corners.\n     * @param  {array}    Rectangle B's corners.\n     * @return {boolean}  True if the rectangles collide on the axis.\n     */\n    axisCollision: function(a, c1, c2) {\n      var sc1 = [],\n          sc2 = [];\n\n      for (var ci = 0; ci < 4; ci++) {\n        var p1 = this.projection(c1[ci], a),\n            p2 = this.projection(c2[ci], a);\n\n        sc1.push(p1.x * a.x + p1.y * a.y);\n        sc2.push(p2.x * a.x + p2.y * a.y);\n      }\n\n      var maxc1 = Math.max.apply(Math, sc1),\n          maxc2 = Math.max.apply(Math, sc2),\n          minc1 = Math.min.apply(Math, sc1),\n          minc2 = Math.min.apply(Math, sc2);\n\n      return (minc2 <= maxc1 && maxc2 >= minc1);\n    },\n\n    /**\n     * Check whether two rectangles collide on each one of their four axis. If\n     * all axis collide, then the two rectangles do collide on the plane.\n     *\n     * @param  {array}    Rectangle A's corners.\n     * @param  {array}    Rectangle B's corners.\n     * @return {boolean}  True if the rectangles collide.\n     */\n    collision: function(c1, c2) {\n      var axis = this.axis(c1, c2),\n          col = true;\n\n      for (var i = 0; i < 4; i++)\n        col = col && this.axisCollision(axis[i], c1, c2);\n\n      return col;\n    }\n  };\n\n\n  /**\n   * Quad Functions\n   * ------------\n   *\n   * The Quadtree functions themselves.\n   * For each of those functions, we consider that in a splitted quad, the\n   * index of each node is the following:\n   * 0: top left\n   * 1: top right\n   * 2: bottom left\n   * 3: bottom right\n   *\n   * Moreover, the hereafter quad's philosophy is to consider that if an element\n   * collides with more than one nodes, this element belongs to each of the\n   * nodes it collides with where other would let it lie on a higher node.\n   */\n\n  /**\n   * Get the index of the node containing the point in the quad\n   *\n   * @param  {object}  point      A point defined by coordinates (x, y).\n   * @param  {object}  quadBounds Boundaries of the quad (x, y, width, heigth).\n   * @return {integer}            The index of the node containing the point.\n   */\n  function _quadIndex(point, quadBounds) {\n    var xmp = quadBounds.x + quadBounds.width / 2,\n        ymp = quadBounds.y + quadBounds.height / 2,\n        top = (point.y < ymp),\n        left = (point.x < xmp);\n\n    if (top) {\n      if (left)\n        return 0;\n      else\n        return 1;\n    }\n    else {\n      if (left)\n        return 2;\n      else\n        return 3;\n    }\n  }\n\n  /**\n   * Get a list of indexes of nodes containing an axis-aligned rectangle\n   *\n   * @param  {object}  rectangle   A rectangle defined by two points (x1, y1),\n   *                               (x2, y2) and height.\n   * @param  {array}   quadCorners An array of the quad nodes' corners.\n   * @return {array}               An array of indexes containing one to\n   *                               four integers.\n   */\n  function _quadIndexes(rectangle, quadCorners) {\n    var indexes = [];\n\n    // Iterating through quads\n    for (var i = 0; i < 4; i++)\n      if ((rectangle.x2 >= quadCorners[i][0].x) &&\n          (rectangle.x1 <= quadCorners[i][1].x) &&\n          (rectangle.y1 + rectangle.height >= quadCorners[i][0].y) &&\n          (rectangle.y1 <= quadCorners[i][2].y))\n        indexes.push(i);\n\n    return indexes;\n  }\n\n  /**\n   * Get a list of indexes of nodes containing a non-axis-aligned rectangle\n   *\n   * @param  {array}  corners      An array containing each corner of the\n   *                               rectangle defined by its coordinates (x, y).\n   * @param  {array}  quadCorners  An array of the quad nodes' corners.\n   * @return {array}               An array of indexes containing one to\n   *                               four integers.\n   */\n  function _quadCollision(corners, quadCorners) {\n    var indexes = [];\n\n    // Iterating through quads\n    for (var i = 0; i < 4; i++)\n      if (_geom.collision(corners, quadCorners[i]))\n        indexes.push(i);\n\n    return indexes;\n  }\n\n  /**\n   * Subdivide a quad by creating a node at a precise index. The function does\n   * not generate all four nodes not to potentially create unused nodes.\n   *\n   * @param  {integer}  index The index of the node to create.\n   * @param  {object}   quad  The quad object to subdivide.\n   * @return {object}         A new quad representing the node created.\n   */\n  function _quadSubdivide(index, quad) {\n    var next = quad.level + 1,\n        subw = Math.round(quad.bounds.width / 2),\n        subh = Math.round(quad.bounds.height / 2),\n        qx = Math.round(quad.bounds.x),\n        qy = Math.round(quad.bounds.y),\n        x,\n        y;\n\n    switch (index) {\n      case 0:\n        x = qx;\n        y = qy;\n        break;\n      case 1:\n        x = qx + subw;\n        y = qy;\n        break;\n      case 2:\n        x = qx;\n        y = qy + subh;\n        break;\n      case 3:\n        x = qx + subw;\n        y = qy + subh;\n        break;\n    }\n\n    return _quadTree(\n      {x: x, y: y, width: subw, height: subh},\n      next,\n      quad.maxElements,\n      quad.maxLevel\n    );\n  }\n\n  /**\n   * Recursively insert an element into the quadtree. Only points\n   * with size, i.e. axis-aligned squares, may be inserted with this\n   * method.\n   *\n   * @param  {object}  el         The element to insert in the quadtree.\n   * @param  {object}  sizedPoint A sized point defined by two top points\n   *                              (x1, y1), (x2, y2) and height.\n   * @param  {object}  quad       The quad in which to insert the element.\n   * @return {undefined}          The function does not return anything.\n   */\n  function _quadInsert(el, sizedPoint, quad) {\n    if (quad.level < quad.maxLevel) {\n\n      // Searching appropriate quads\n      var indexes = _quadIndexes(sizedPoint, quad.corners);\n\n      // Iterating\n      for (var i = 0, l = indexes.length; i < l; i++) {\n\n        // Subdividing if necessary\n        if (quad.nodes[indexes[i]] === undefined)\n          quad.nodes[indexes[i]] = _quadSubdivide(indexes[i], quad);\n\n        // Recursion\n        _quadInsert(el, sizedPoint, quad.nodes[indexes[i]]);\n      }\n    }\n    else {\n\n      // Pushing the element in a leaf node\n      quad.elements.push(el);\n    }\n  }\n\n  /**\n   * Recursively retrieve every elements held by the node containing the\n   * searched point.\n   *\n   * @param  {object}  point The searched point (x, y).\n   * @param  {object}  quad  The searched quad.\n   * @return {array}         An array of elements contained in the relevant\n   *                         node.\n   */\n  function _quadRetrievePoint(point, quad) {\n    if (quad.level < quad.maxLevel) {\n      var index = _quadIndex(point, quad.bounds);\n\n      // If node does not exist we return an empty list\n      if (quad.nodes[index] !== undefined) {\n        return _quadRetrievePoint(point, quad.nodes[index]);\n      }\n      else {\n        return [];\n      }\n    }\n    else {\n      return quad.elements;\n    }\n  }\n\n  /**\n   * Recursively retrieve every elements contained within an rectangular area\n   * that may or may not be axis-aligned.\n   *\n   * @param  {object|array} rectData       The searched area defined either by\n   *                                       an array of four corners (x, y) in\n   *                                       the case of a non-axis-aligned\n   *                                       rectangle or an object with two top\n   *                                       points (x1, y1), (x2, y2) and height.\n   * @param  {object}       quad           The searched quad.\n   * @param  {function}     collisionFunc  The collision function used to search\n   *                                       for node indexes.\n   * @param  {array?}       els            The retrieved elements.\n   * @return {array}                       An array of elements contained in the\n   *                                       area.\n   */\n  function _quadRetrieveArea(rectData, quad, collisionFunc, els) {\n    els = els || {};\n\n    if (quad.level < quad.maxLevel) {\n      var indexes = collisionFunc(rectData, quad.corners);\n\n      for (var i = 0, l = indexes.length; i < l; i++)\n        if (quad.nodes[indexes[i]] !== undefined)\n          _quadRetrieveArea(\n            rectData,\n            quad.nodes[indexes[i]],\n            collisionFunc,\n            els\n          );\n    } else\n      for (var j = 0, m = quad.elements.length; j < m; j++)\n        if (els[quad.elements[j].id] === undefined)\n          els[quad.elements[j].id] = quad.elements[j];\n\n    return els;\n  }\n\n  /**\n   * Creates the quadtree object itself.\n   *\n   * @param  {object}   bounds       The boundaries of the quad defined by an\n   *                                 origin (x, y), width and heigth.\n   * @param  {integer}  level        The level of the quad in the tree.\n   * @param  {integer}  maxElements  The max number of element in a leaf node.\n   * @param  {integer}  maxLevel     The max recursion level of the tree.\n   * @return {object}                The quadtree object.\n   */\n  function _quadTree(bounds, level, maxElements, maxLevel) {\n    return {\n      level: level || 0,\n      bounds: bounds,\n      corners: _geom.splitSquare(bounds),\n      maxElements: maxElements || 20,\n      maxLevel: maxLevel || 4,\n      elements: [],\n      nodes: []\n    };\n  }\n\n\n  /**\n   * Sigma Quad Constructor\n   * ----------------------\n   *\n   * The quad API as exposed to sigma.\n   */\n\n  /**\n   * The quad core that will become the sigma interface with the quadtree.\n   *\n   * property {object} _tree  Property holding the quadtree object.\n   * property {object} _geom  Exposition of the _geom namespace for testing.\n   * property {object} _cache Cache for the area method.\n   */\n  var quad = function() {\n    this._geom = _geom;\n    this._tree = null;\n    this._cache = {\n      query: false,\n      result: false\n    };\n  };\n\n  /**\n   * Index a graph by inserting its nodes into the quadtree.\n   *\n   * @param  {array}  nodes   An array of nodes to index.\n   * @param  {object} params  An object of parameters with at least the quad\n   *                          bounds.\n   * @return {object}         The quadtree object.\n   *\n   * Parameters:\n   * ----------\n   * bounds:      {object}   boundaries of the quad defined by its origin (x, y)\n   *                         width and heigth.\n   * prefix:      {string?}  a prefix for node geometric attributes.\n   * maxElements: {integer?} the max number of elements in a leaf node.\n   * maxLevel:    {integer?} the max recursion level of the tree.\n   */\n  quad.prototype.index = function(nodes, params) {\n\n    // Enforcing presence of boundaries\n    if (!params.bounds)\n      throw 'sigma.classes.quad.index: bounds information not given.';\n\n    // Prefix\n    var prefix = params.prefix || '';\n\n    // Building the tree\n    this._tree = _quadTree(\n      params.bounds,\n      0,\n      params.maxElements,\n      params.maxLevel\n    );\n\n    // Inserting graph nodes into the tree\n    for (var i = 0, l = nodes.length; i < l; i++) {\n\n      // Inserting node\n      _quadInsert(\n        nodes[i],\n        _geom.pointToSquare({\n          x: nodes[i][prefix + 'x'],\n          y: nodes[i][prefix + 'y'],\n          size: nodes[i][prefix + 'size']\n        }),\n        this._tree\n      );\n    }\n\n    // Reset cache:\n    this._cache = {\n      query: false,\n      result: false\n    };\n\n    // remove?\n    return this._tree;\n  };\n\n  /**\n   * Retrieve every graph nodes held by the quadtree node containing the\n   * searched point.\n   *\n   * @param  {number} x of the point.\n   * @param  {number} y of the point.\n   * @return {array}  An array of nodes retrieved.\n   */\n  quad.prototype.point = function(x, y) {\n    return this._tree ?\n      _quadRetrievePoint({x: x, y: y}, this._tree) || [] :\n      [];\n  };\n\n  /**\n   * Retrieve every graph nodes within a rectangular area. The methods keep the\n   * last area queried in cache for optimization reason and will act differently\n   * for the same reason if the area is axis-aligned or not.\n   *\n   * @param  {object} A rectangle defined by two top points (x1, y1), (x2, y2)\n   *                  and height.\n   * @return {array}  An array of nodes retrieved.\n   */\n  quad.prototype.area = function(rect) {\n    var serialized = JSON.stringify(rect),\n        collisionFunc,\n        rectData;\n\n    // Returning cache?\n    if (this._cache.query === serialized)\n      return this._cache.result;\n\n    // Axis aligned ?\n    if (_geom.isAxisAligned(rect)) {\n      collisionFunc = _quadIndexes;\n      rectData = _geom.axisAlignedTopPoints(rect);\n    }\n    else {\n      collisionFunc = _quadCollision;\n      rectData = _geom.rectangleCorners(rect);\n    }\n\n    // Retrieving nodes\n    var nodes = this._tree ?\n      _quadRetrieveArea(\n        rectData,\n        this._tree,\n        collisionFunc\n      ) :\n      [];\n\n    // Object to array\n    var nodesArray = [];\n    for (var i in nodes)\n      nodesArray.push(nodes[i]);\n\n    // Caching\n    this._cache.query = serialized;\n    this._cache.result = nodesArray;\n\n    return nodesArray;\n  };\n\n\n  /**\n   * EXPORT:\n   * *******\n   */\n  if (typeof this.sigma !== 'undefined') {\n    this.sigma.classes = this.sigma.classes || {};\n    this.sigma.classes.quad = quad;\n  } else if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports)\n      exports = module.exports = quad;\n    exports.quad = quad;\n  } else\n    this.quad = quad;\n}).call(this);\n\n;(function(undefined) {\n  'use strict';\n\n  /**\n   * Sigma Quadtree Module for edges\n   * ===============================\n   *\n   * Author: Sébastien Heymann,\n   *   from the quad of Guillaume Plique (Yomguithereal)\n   * Version: 0.2\n   */\n\n\n\n  /**\n   * Quad Geometric Operations\n   * -------------------------\n   *\n   * A useful batch of geometric operations used by the quadtree.\n   */\n\n  var _geom = {\n\n    /**\n     * Transforms a graph node with x, y and size into an\n     * axis-aligned square.\n     *\n     * @param  {object} A graph node with at least a point (x, y) and a size.\n     * @return {object} A square: two points (x1, y1), (x2, y2) and height.\n     */\n    pointToSquare: function(n) {\n      return {\n        x1: n.x - n.size,\n        y1: n.y - n.size,\n        x2: n.x + n.size,\n        y2: n.y - n.size,\n        height: n.size * 2\n      };\n    },\n\n    /**\n     * Transforms a graph edge with x1, y1, x2, y2 and size into an\n     * axis-aligned square.\n     *\n     * @param  {object} A graph edge with at least two points\n     *                  (x1, y1), (x2, y2) and a size.\n     * @return {object} A square: two points (x1, y1), (x2, y2) and height.\n     */\n    lineToSquare: function(e) {\n      if (e.y1 < e.y2) {\n        // (e.x1, e.y1) on top\n        if (e.x1 < e.x2) {\n          // (e.x1, e.y1) on left\n          return {\n            x1: e.x1 - e.size,\n            y1: e.y1 - e.size,\n            x2: e.x2 + e.size,\n            y2: e.y1 - e.size,\n            height: e.y2 - e.y1 + e.size * 2\n          };\n        }\n        // (e.x1, e.y1) on right\n        return {\n          x1: e.x2 - e.size,\n          y1: e.y1 - e.size,\n          x2: e.x1 + e.size,\n          y2: e.y1 - e.size,\n          height: e.y2 - e.y1 + e.size * 2\n        };\n      }\n\n      // (e.x2, e.y2) on top\n      if (e.x1 < e.x2) {\n        // (e.x1, e.y1) on left\n        return {\n          x1: e.x1 - e.size,\n          y1: e.y2 - e.size,\n          x2: e.x2 + e.size,\n          y2: e.y2 - e.size,\n          height: e.y1 - e.y2 + e.size * 2\n        };\n      }\n      // (e.x2, e.y2) on right\n      return {\n        x1: e.x2 - e.size,\n        y1: e.y2 - e.size,\n        x2: e.x1 + e.size,\n        y2: e.y2 - e.size,\n        height: e.y1 - e.y2 + e.size * 2\n      };\n    },\n\n    /**\n     * Transforms a graph edge of type 'curve' with x1, y1, x2, y2,\n     * control point and size into an axis-aligned square.\n     *\n     * @param  {object} e  A graph edge with at least two points\n     *                     (x1, y1), (x2, y2) and a size.\n     * @param  {object} cp A control point (x,y).\n     * @return {object}    A square: two points (x1, y1), (x2, y2) and height.\n     */\n    quadraticCurveToSquare: function(e, cp) {\n      var pt = sigma.utils.getPointOnQuadraticCurve(\n        0.5,\n        e.x1,\n        e.y1,\n        e.x2,\n        e.y2,\n        cp.x,\n        cp.y\n      );\n\n      // Bounding box of the two points and the point at the middle of the\n      // curve:\n      var minX = Math.min(e.x1, e.x2, pt.x),\n          maxX = Math.max(e.x1, e.x2, pt.x),\n          minY = Math.min(e.y1, e.y2, pt.y),\n          maxY = Math.max(e.y1, e.y2, pt.y);\n\n      return {\n        x1: minX - e.size,\n        y1: minY - e.size,\n        x2: maxX + e.size,\n        y2: minY - e.size,\n        height: maxY - minY + e.size * 2\n      };\n    },\n\n    /**\n     * Transforms a graph self loop into an axis-aligned square.\n     *\n     * @param  {object} n A graph node with a point (x, y) and a size.\n     * @return {object}   A square: two points (x1, y1), (x2, y2) and height.\n     */\n    selfLoopToSquare: function(n) {\n      // Fitting to the curve is too costly, we compute a larger bounding box\n      // using the control points:\n      var cp = sigma.utils.getSelfLoopControlPoints(n.x, n.y, n.size);\n\n      // Bounding box of the point and the two control points:\n      var minX = Math.min(n.x, cp.x1, cp.x2),\n          maxX = Math.max(n.x, cp.x1, cp.x2),\n          minY = Math.min(n.y, cp.y1, cp.y2),\n          maxY = Math.max(n.y, cp.y1, cp.y2);\n\n      return {\n        x1: minX - n.size,\n        y1: minY - n.size,\n        x2: maxX + n.size,\n        y2: minY - n.size,\n        height: maxY - minY + n.size * 2\n      };\n    },\n\n    /**\n     * Checks whether a rectangle is axis-aligned.\n     *\n     * @param  {object}  A rectangle defined by two points\n     *                   (x1, y1) and (x2, y2).\n     * @return {boolean} True if the rectangle is axis-aligned.\n     */\n    isAxisAligned: function(r) {\n      return r.x1 === r.x2 || r.y1 === r.y2;\n    },\n\n    /**\n     * Compute top points of an axis-aligned rectangle. This is useful in\n     * cases when the rectangle has been rotated (left, right or bottom up) and\n     * later operations need to know the top points.\n     *\n     * @param  {object} An axis-aligned rectangle defined by two points\n     *                  (x1, y1), (x2, y2) and height.\n     * @return {object} A rectangle: two points (x1, y1), (x2, y2) and height.\n     */\n    axisAlignedTopPoints: function(r) {\n\n      // Basic\n      if (r.y1 === r.y2 && r.x1 < r.x2)\n        return r;\n\n      // Rotated to right\n      if (r.x1 === r.x2 && r.y2 > r.y1)\n        return {\n          x1: r.x1 - r.height, y1: r.y1,\n          x2: r.x1, y2: r.y1,\n          height: r.height\n        };\n\n      // Rotated to left\n      if (r.x1 === r.x2 && r.y2 < r.y1)\n        return {\n          x1: r.x1, y1: r.y2,\n          x2: r.x2 + r.height, y2: r.y2,\n          height: r.height\n        };\n\n      // Bottom's up\n      return {\n        x1: r.x2, y1: r.y1 - r.height,\n        x2: r.x1, y2: r.y1 - r.height,\n        height: r.height\n      };\n    },\n\n    /**\n     * Get coordinates of a rectangle's lower left corner from its top points.\n     *\n     * @param  {object} A rectangle defined by two points (x1, y1) and (x2, y2).\n     * @return {object} Coordinates of the corner (x, y).\n     */\n    lowerLeftCoor: function(r) {\n      var width = (\n        Math.sqrt(\n          Math.pow(r.x2 - r.x1, 2) +\n          Math.pow(r.y2 - r.y1, 2)\n        )\n      );\n\n      return {\n        x: r.x1 - (r.y2 - r.y1) * r.height / width,\n        y: r.y1 + (r.x2 - r.x1) * r.height / width\n      };\n    },\n\n    /**\n     * Get coordinates of a rectangle's lower right corner from its top points\n     * and its lower left corner.\n     *\n     * @param  {object} A rectangle defined by two points (x1, y1) and (x2, y2).\n     * @param  {object} A corner's coordinates (x, y).\n     * @return {object} Coordinates of the corner (x, y).\n     */\n    lowerRightCoor: function(r, llc) {\n      return {\n        x: llc.x - r.x1 + r.x2,\n        y: llc.y - r.y1 + r.y2\n      };\n    },\n\n    /**\n     * Get the coordinates of all the corners of a rectangle from its top point.\n     *\n     * @param  {object} A rectangle defined by two points (x1, y1) and (x2, y2).\n     * @return {array}  An array of the four corners' coordinates (x, y).\n     */\n    rectangleCorners: function(r) {\n      var llc = this.lowerLeftCoor(r),\n          lrc = this.lowerRightCoor(r, llc);\n\n      return [\n        {x: r.x1, y: r.y1},\n        {x: r.x2, y: r.y2},\n        {x: llc.x, y: llc.y},\n        {x: lrc.x, y: lrc.y}\n      ];\n    },\n\n    /**\n     * Split a square defined by its boundaries into four.\n     *\n     * @param  {object} Boundaries of the square (x, y, width, height).\n     * @return {array}  An array containing the four new squares, themselves\n     *                  defined by an array of their four corners (x, y).\n     */\n    splitSquare: function(b) {\n      return [\n        [\n          {x: b.x, y: b.y},\n          {x: b.x + b.width / 2, y: b.y},\n          {x: b.x, y: b.y + b.height / 2},\n          {x: b.x + b.width / 2, y: b.y + b.height / 2}\n        ],\n        [\n          {x: b.x + b.width / 2, y: b.y},\n          {x: b.x + b.width, y: b.y},\n          {x: b.x + b.width / 2, y: b.y + b.height / 2},\n          {x: b.x + b.width, y: b.y + b.height / 2}\n        ],\n        [\n          {x: b.x, y: b.y + b.height / 2},\n          {x: b.x + b.width / 2, y: b.y + b.height / 2},\n          {x: b.x, y: b.y + b.height},\n          {x: b.x + b.width / 2, y: b.y + b.height}\n        ],\n        [\n          {x: b.x + b.width / 2, y: b.y + b.height / 2},\n          {x: b.x + b.width, y: b.y + b.height / 2},\n          {x: b.x + b.width / 2, y: b.y + b.height},\n          {x: b.x + b.width, y: b.y + b.height}\n        ]\n      ];\n    },\n\n    /**\n     * Compute the four axis between corners of rectangle A and corners of\n     * rectangle B. This is needed later to check an eventual collision.\n     *\n     * @param  {array} An array of rectangle A's four corners (x, y).\n     * @param  {array} An array of rectangle B's four corners (x, y).\n     * @return {array} An array of four axis defined by their coordinates (x,y).\n     */\n    axis: function(c1, c2) {\n      return [\n        {x: c1[1].x - c1[0].x, y: c1[1].y - c1[0].y},\n        {x: c1[1].x - c1[3].x, y: c1[1].y - c1[3].y},\n        {x: c2[0].x - c2[2].x, y: c2[0].y - c2[2].y},\n        {x: c2[0].x - c2[1].x, y: c2[0].y - c2[1].y}\n      ];\n    },\n\n    /**\n     * Project a rectangle's corner on an axis.\n     *\n     * @param  {object} Coordinates of a corner (x, y).\n     * @param  {object} Coordinates of an axis (x, y).\n     * @return {object} The projection defined by coordinates (x, y).\n     */\n    projection: function(c, a) {\n      var l = (\n        (c.x * a.x + c.y * a.y) /\n        (Math.pow(a.x, 2) + Math.pow(a.y, 2))\n      );\n\n      return {\n        x: l * a.x,\n        y: l * a.y\n      };\n    },\n\n    /**\n     * Check whether two rectangles collide on one particular axis.\n     *\n     * @param  {object}   An axis' coordinates (x, y).\n     * @param  {array}    Rectangle A's corners.\n     * @param  {array}    Rectangle B's corners.\n     * @return {boolean}  True if the rectangles collide on the axis.\n     */\n    axisCollision: function(a, c1, c2) {\n      var sc1 = [],\n          sc2 = [];\n\n      for (var ci = 0; ci < 4; ci++) {\n        var p1 = this.projection(c1[ci], a),\n            p2 = this.projection(c2[ci], a);\n\n        sc1.push(p1.x * a.x + p1.y * a.y);\n        sc2.push(p2.x * a.x + p2.y * a.y);\n      }\n\n      var maxc1 = Math.max.apply(Math, sc1),\n          maxc2 = Math.max.apply(Math, sc2),\n          minc1 = Math.min.apply(Math, sc1),\n          minc2 = Math.min.apply(Math, sc2);\n\n      return (minc2 <= maxc1 && maxc2 >= minc1);\n    },\n\n    /**\n     * Check whether two rectangles collide on each one of their four axis. If\n     * all axis collide, then the two rectangles do collide on the plane.\n     *\n     * @param  {array}    Rectangle A's corners.\n     * @param  {array}    Rectangle B's corners.\n     * @return {boolean}  True if the rectangles collide.\n     */\n    collision: function(c1, c2) {\n      var axis = this.axis(c1, c2),\n          col = true;\n\n      for (var i = 0; i < 4; i++)\n        col = col && this.axisCollision(axis[i], c1, c2);\n\n      return col;\n    }\n  };\n\n\n  /**\n   * Quad Functions\n   * ------------\n   *\n   * The Quadtree functions themselves.\n   * For each of those functions, we consider that in a splitted quad, the\n   * index of each node is the following:\n   * 0: top left\n   * 1: top right\n   * 2: bottom left\n   * 3: bottom right\n   *\n   * Moreover, the hereafter quad's philosophy is to consider that if an element\n   * collides with more than one nodes, this element belongs to each of the\n   * nodes it collides with where other would let it lie on a higher node.\n   */\n\n  /**\n   * Get the index of the node containing the point in the quad\n   *\n   * @param  {object}  point      A point defined by coordinates (x, y).\n   * @param  {object}  quadBounds Boundaries of the quad (x, y, width, heigth).\n   * @return {integer}            The index of the node containing the point.\n   */\n  function _quadIndex(point, quadBounds) {\n    var xmp = quadBounds.x + quadBounds.width / 2,\n        ymp = quadBounds.y + quadBounds.height / 2,\n        top = (point.y < ymp),\n        left = (point.x < xmp);\n\n    if (top) {\n      if (left)\n        return 0;\n      else\n        return 1;\n    }\n    else {\n      if (left)\n        return 2;\n      else\n        return 3;\n    }\n  }\n\n  /**\n   * Get a list of indexes of nodes containing an axis-aligned rectangle\n   *\n   * @param  {object}  rectangle   A rectangle defined by two points (x1, y1),\n   *                               (x2, y2) and height.\n   * @param  {array}   quadCorners An array of the quad nodes' corners.\n   * @return {array}               An array of indexes containing one to\n   *                               four integers.\n   */\n  function _quadIndexes(rectangle, quadCorners) {\n    var indexes = [];\n\n    // Iterating through quads\n    for (var i = 0; i < 4; i++)\n      if ((rectangle.x2 >= quadCorners[i][0].x) &&\n          (rectangle.x1 <= quadCorners[i][1].x) &&\n          (rectangle.y1 + rectangle.height >= quadCorners[i][0].y) &&\n          (rectangle.y1 <= quadCorners[i][2].y))\n        indexes.push(i);\n\n    return indexes;\n  }\n\n  /**\n   * Get a list of indexes of nodes containing a non-axis-aligned rectangle\n   *\n   * @param  {array}  corners      An array containing each corner of the\n   *                               rectangle defined by its coordinates (x, y).\n   * @param  {array}  quadCorners  An array of the quad nodes' corners.\n   * @return {array}               An array of indexes containing one to\n   *                               four integers.\n   */\n  function _quadCollision(corners, quadCorners) {\n    var indexes = [];\n\n    // Iterating through quads\n    for (var i = 0; i < 4; i++)\n      if (_geom.collision(corners, quadCorners[i]))\n        indexes.push(i);\n\n    return indexes;\n  }\n\n  /**\n   * Subdivide a quad by creating a node at a precise index. The function does\n   * not generate all four nodes not to potentially create unused nodes.\n   *\n   * @param  {integer}  index The index of the node to create.\n   * @param  {object}   quad  The quad object to subdivide.\n   * @return {object}         A new quad representing the node created.\n   */\n  function _quadSubdivide(index, quad) {\n    var next = quad.level + 1,\n        subw = Math.round(quad.bounds.width / 2),\n        subh = Math.round(quad.bounds.height / 2),\n        qx = Math.round(quad.bounds.x),\n        qy = Math.round(quad.bounds.y),\n        x,\n        y;\n\n    switch (index) {\n      case 0:\n        x = qx;\n        y = qy;\n        break;\n      case 1:\n        x = qx + subw;\n        y = qy;\n        break;\n      case 2:\n        x = qx;\n        y = qy + subh;\n        break;\n      case 3:\n        x = qx + subw;\n        y = qy + subh;\n        break;\n    }\n\n    return _quadTree(\n      {x: x, y: y, width: subw, height: subh},\n      next,\n      quad.maxElements,\n      quad.maxLevel\n    );\n  }\n\n  /**\n   * Recursively insert an element into the quadtree. Only points\n   * with size, i.e. axis-aligned squares, may be inserted with this\n   * method.\n   *\n   * @param  {object}  el         The element to insert in the quadtree.\n   * @param  {object}  sizedPoint A sized point defined by two top points\n   *                              (x1, y1), (x2, y2) and height.\n   * @param  {object}  quad       The quad in which to insert the element.\n   * @return {undefined}          The function does not return anything.\n   */\n  function _quadInsert(el, sizedPoint, quad) {\n    if (quad.level < quad.maxLevel) {\n\n      // Searching appropriate quads\n      var indexes = _quadIndexes(sizedPoint, quad.corners);\n\n      // Iterating\n      for (var i = 0, l = indexes.length; i < l; i++) {\n\n        // Subdividing if necessary\n        if (quad.nodes[indexes[i]] === undefined)\n          quad.nodes[indexes[i]] = _quadSubdivide(indexes[i], quad);\n\n        // Recursion\n        _quadInsert(el, sizedPoint, quad.nodes[indexes[i]]);\n      }\n    }\n    else {\n\n      // Pushing the element in a leaf node\n      quad.elements.push(el);\n    }\n  }\n\n  /**\n   * Recursively retrieve every elements held by the node containing the\n   * searched point.\n   *\n   * @param  {object}  point The searched point (x, y).\n   * @param  {object}  quad  The searched quad.\n   * @return {array}         An array of elements contained in the relevant\n   *                         node.\n   */\n  function _quadRetrievePoint(point, quad) {\n    if (quad.level < quad.maxLevel) {\n      var index = _quadIndex(point, quad.bounds);\n\n      // If node does not exist we return an empty list\n      if (quad.nodes[index] !== undefined) {\n        return _quadRetrievePoint(point, quad.nodes[index]);\n      }\n      else {\n        return [];\n      }\n    }\n    else {\n      return quad.elements;\n    }\n  }\n\n  /**\n   * Recursively retrieve every elements contained within an rectangular area\n   * that may or may not be axis-aligned.\n   *\n   * @param  {object|array} rectData       The searched area defined either by\n   *                                       an array of four corners (x, y) in\n   *                                       the case of a non-axis-aligned\n   *                                       rectangle or an object with two top\n   *                                       points (x1, y1), (x2, y2) and height.\n   * @param  {object}       quad           The searched quad.\n   * @param  {function}     collisionFunc  The collision function used to search\n   *                                       for node indexes.\n   * @param  {array?}       els            The retrieved elements.\n   * @return {array}                       An array of elements contained in the\n   *                                       area.\n   */\n  function _quadRetrieveArea(rectData, quad, collisionFunc, els) {\n    els = els || {};\n\n    if (quad.level < quad.maxLevel) {\n      var indexes = collisionFunc(rectData, quad.corners);\n\n      for (var i = 0, l = indexes.length; i < l; i++)\n        if (quad.nodes[indexes[i]] !== undefined)\n          _quadRetrieveArea(\n            rectData,\n            quad.nodes[indexes[i]],\n            collisionFunc,\n            els\n          );\n    } else\n      for (var j = 0, m = quad.elements.length; j < m; j++)\n        if (els[quad.elements[j].id] === undefined)\n          els[quad.elements[j].id] = quad.elements[j];\n\n    return els;\n  }\n\n  /**\n   * Creates the quadtree object itself.\n   *\n   * @param  {object}   bounds       The boundaries of the quad defined by an\n   *                                 origin (x, y), width and heigth.\n   * @param  {integer}  level        The level of the quad in the tree.\n   * @param  {integer}  maxElements  The max number of element in a leaf node.\n   * @param  {integer}  maxLevel     The max recursion level of the tree.\n   * @return {object}                The quadtree object.\n   */\n  function _quadTree(bounds, level, maxElements, maxLevel) {\n    return {\n      level: level || 0,\n      bounds: bounds,\n      corners: _geom.splitSquare(bounds),\n      maxElements: maxElements || 40,\n      maxLevel: maxLevel || 8,\n      elements: [],\n      nodes: []\n    };\n  }\n\n\n  /**\n   * Sigma Quad Constructor\n   * ----------------------\n   *\n   * The edgequad API as exposed to sigma.\n   */\n\n  /**\n   * The edgequad core that will become the sigma interface with the quadtree.\n   *\n   * property {object} _tree     Property holding the quadtree object.\n   * property {object} _geom     Exposition of the _geom namespace for testing.\n   * property {object} _cache    Cache for the area method.\n   * property {boolean} _enabled Can index and retreive elements.\n   */\n  var edgequad = function() {\n    this._geom = _geom;\n    this._tree = null;\n    this._cache = {\n      query: false,\n      result: false\n    };\n    this._enabled = true;\n  };\n\n  /**\n   * Index a graph by inserting its edges into the quadtree.\n   *\n   * @param  {object} graph   A graph instance.\n   * @param  {object} params  An object of parameters with at least the quad\n   *                          bounds.\n   * @return {object}         The quadtree object.\n   *\n   * Parameters:\n   * ----------\n   * bounds:      {object}   boundaries of the quad defined by its origin (x, y)\n   *                         width and heigth.\n   * prefix:      {string?}  a prefix for edge geometric attributes.\n   * maxElements: {integer?} the max number of elements in a leaf node.\n   * maxLevel:    {integer?} the max recursion level of the tree.\n   */\n  edgequad.prototype.index = function(graph, params) {\n    if (!this._enabled)\n      return this._tree;\n\n    // Enforcing presence of boundaries\n    if (!params.bounds)\n      throw 'sigma.classes.edgequad.index: bounds information not given.';\n\n    // Prefix\n    var prefix = params.prefix || '',\n        cp,\n        source,\n        target,\n        n,\n        e;\n\n    // Building the tree\n    this._tree = _quadTree(\n      params.bounds,\n      0,\n      params.maxElements,\n      params.maxLevel\n    );\n\n    var edges = graph.edges();\n\n    // Inserting graph edges into the tree\n    for (var i = 0, l = edges.length; i < l; i++) {\n      source = graph.nodes(edges[i].source);\n      target = graph.nodes(edges[i].target);\n      e = {\n        x1: source[prefix + 'x'],\n        y1: source[prefix + 'y'],\n        x2: target[prefix + 'x'],\n        y2: target[prefix + 'y'],\n        size: edges[i][prefix + 'size'] || 0\n      };\n\n      // Inserting edge\n      if (edges[i].type === 'curve' || edges[i].type === 'curvedArrow') {\n        if (source.id === target.id) {\n          n = {\n            x: source[prefix + 'x'],\n            y: source[prefix + 'y'],\n            size: source[prefix + 'size'] || 0\n          };\n          _quadInsert(\n            edges[i],\n            _geom.selfLoopToSquare(n),\n            this._tree);\n        }\n        else {\n          cp = sigma.utils.getQuadraticControlPoint(e.x1, e.y1, e.x2, e.y2);\n          _quadInsert(\n            edges[i],\n            _geom.quadraticCurveToSquare(e, cp),\n            this._tree);\n        }\n      }\n      else {\n        _quadInsert(\n          edges[i],\n          _geom.lineToSquare(e),\n          this._tree);\n      }\n    }\n\n    // Reset cache:\n    this._cache = {\n      query: false,\n      result: false\n    };\n\n    // remove?\n    return this._tree;\n  };\n\n  /**\n   * Retrieve every graph edges held by the quadtree node containing the\n   * searched point.\n   *\n   * @param  {number} x of the point.\n   * @param  {number} y of the point.\n   * @return {array}  An array of edges retrieved.\n   */\n  edgequad.prototype.point = function(x, y) {\n    if (!this._enabled)\n      return [];\n\n    return this._tree ?\n      _quadRetrievePoint({x: x, y: y}, this._tree) || [] :\n      [];\n  };\n\n  /**\n   * Retrieve every graph edges within a rectangular area. The methods keep the\n   * last area queried in cache for optimization reason and will act differently\n   * for the same reason if the area is axis-aligned or not.\n   *\n   * @param  {object} A rectangle defined by two top points (x1, y1), (x2, y2)\n   *                  and height.\n   * @return {array}  An array of edges retrieved.\n   */\n  edgequad.prototype.area = function(rect) {\n    if (!this._enabled)\n      return [];\n\n    var serialized = JSON.stringify(rect),\n        collisionFunc,\n        rectData;\n\n    // Returning cache?\n    if (this._cache.query === serialized)\n      return this._cache.result;\n\n    // Axis aligned ?\n    if (_geom.isAxisAligned(rect)) {\n      collisionFunc = _quadIndexes;\n      rectData = _geom.axisAlignedTopPoints(rect);\n    }\n    else {\n      collisionFunc = _quadCollision;\n      rectData = _geom.rectangleCorners(rect);\n    }\n\n    // Retrieving edges\n    var edges = this._tree ?\n      _quadRetrieveArea(\n        rectData,\n        this._tree,\n        collisionFunc\n      ) :\n      [];\n\n    // Object to array\n    var edgesArray = [];\n    for (var i in edges)\n      edgesArray.push(edges[i]);\n\n    // Caching\n    this._cache.query = serialized;\n    this._cache.result = edgesArray;\n\n    return edgesArray;\n  };\n\n\n  /**\n   * EXPORT:\n   * *******\n   */\n  if (typeof this.sigma !== 'undefined') {\n    this.sigma.classes = this.sigma.classes || {};\n    this.sigma.classes.edgequad = edgequad;\n  } else if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports)\n      exports = module.exports = edgequad;\n    exports.edgequad = edgequad;\n  } else\n    this.edgequad = edgequad;\n}).call(this);\n\n;(function(undefined) {\n  'use strict';\n\n  if (typeof sigma === 'undefined')\n    throw 'sigma is not declared';\n\n  // Initialize packages:\n  sigma.utils.pkg('sigma.captors');\n\n  /**\n   * The user inputs default captor. It deals with mouse events, keyboards\n   * events and touch events.\n   *\n   * @param  {DOMElement}   target   The DOM element where the listeners will be\n   *                                 bound.\n   * @param  {camera}       camera   The camera related to the target.\n   * @param  {configurable} settings The settings function.\n   * @return {sigma.captor}          The fresh new captor instance.\n   */\n  sigma.captors.mouse = function(target, camera, settings) {\n    var _self = this,\n        _target = target,\n        _camera = camera,\n        _settings = settings,\n\n        // CAMERA MANAGEMENT:\n        // ******************\n        // The camera position when the user starts dragging:\n        _startCameraX,\n        _startCameraY,\n        _startCameraAngle,\n\n        // The latest stage position:\n        _lastCameraX,\n        _lastCameraY,\n        _lastCameraAngle,\n        _lastCameraRatio,\n\n        // MOUSE MANAGEMENT:\n        // *****************\n        // The mouse position when the user starts dragging:\n        _startMouseX,\n        _startMouseY,\n\n        _isMouseDown,\n        _isMoving,\n        _hasDragged,\n        _downStartTime,\n        _movingTimeoutId;\n\n    sigma.classes.dispatcher.extend(this);\n\n    sigma.utils.doubleClick(_target, 'click', _doubleClickHandler);\n    _target.addEventListener('DOMMouseScroll', _wheelHandler, false);\n    _target.addEventListener('mousewheel', _wheelHandler, false);\n    _target.addEventListener('mousemove', _moveHandler, false);\n    _target.addEventListener('mousedown', _downHandler, false);\n    _target.addEventListener('click', _clickHandler, false);\n    _target.addEventListener('mouseout', _outHandler, false);\n    document.addEventListener('mouseup', _upHandler, false);\n\n\n\n\n    /**\n     * This method unbinds every handlers that makes the captor work.\n     */\n    this.kill = function() {\n      sigma.utils.unbindDoubleClick(_target, 'click');\n      _target.removeEventListener('DOMMouseScroll', _wheelHandler);\n      _target.removeEventListener('mousewheel', _wheelHandler);\n      _target.removeEventListener('mousemove', _moveHandler);\n      _target.removeEventListener('mousedown', _downHandler);\n      _target.removeEventListener('click', _clickHandler);\n      _target.removeEventListener('mouseout', _outHandler);\n      document.removeEventListener('mouseup', _upHandler);\n    };\n\n\n\n\n    // MOUSE EVENTS:\n    // *************\n\n    /**\n     * The handler listening to the 'move' mouse event. It will effectively\n     * drag the graph.\n     *\n     * @param {event} e A mouse event.\n     */\n    function _moveHandler(e) {\n      var x,\n          y,\n          pos;\n\n      // Dispatch event:\n      if (_settings('mouseEnabled')) {\n        _self.dispatchEvent('mousemove',\n          sigma.utils.mouseCoords(e));\n\n        if (_isMouseDown) {\n          _isMoving = true;\n          _hasDragged = true;\n\n          if (_movingTimeoutId)\n            clearTimeout(_movingTimeoutId);\n\n          _movingTimeoutId = setTimeout(function() {\n            _isMoving = false;\n          }, _settings('dragTimeout'));\n\n          sigma.misc.animation.killAll(_camera);\n\n          _camera.isMoving = true;\n          pos = _camera.cameraPosition(\n            sigma.utils.getX(e) - _startMouseX,\n            sigma.utils.getY(e) - _startMouseY,\n            true\n          );\n\n          x = _startCameraX - pos.x;\n          y = _startCameraY - pos.y;\n\n          if (x !== _camera.x || y !== _camera.y) {\n            _lastCameraX = _camera.x;\n            _lastCameraY = _camera.y;\n\n            _camera.goTo({\n              x: x,\n              y: y\n            });\n          }\n\n          if (e.preventDefault)\n            e.preventDefault();\n          else\n            e.returnValue = false;\n\n          e.stopPropagation();\n          return false;\n        }\n      }\n    }\n\n    /**\n     * The handler listening to the 'up' mouse event. It will stop dragging the\n     * graph.\n     *\n     * @param {event} e A mouse event.\n     */\n    function _upHandler(e) {\n      if (_settings('mouseEnabled') && _isMouseDown) {\n        _isMouseDown = false;\n        if (_movingTimeoutId)\n          clearTimeout(_movingTimeoutId);\n\n        _camera.isMoving = false;\n\n        var x = sigma.utils.getX(e),\n            y = sigma.utils.getY(e);\n\n        if (_isMoving) {\n          sigma.misc.animation.killAll(_camera);\n          sigma.misc.animation.camera(\n            _camera,\n            {\n              x: _camera.x +\n                _settings('mouseInertiaRatio') * (_camera.x - _lastCameraX),\n              y: _camera.y +\n                _settings('mouseInertiaRatio') * (_camera.y - _lastCameraY)\n            },\n            {\n              easing: 'quadraticOut',\n              duration: _settings('mouseInertiaDuration')\n            }\n          );\n        } else if (\n          _startMouseX !== x ||\n          _startMouseY !== y\n        )\n          _camera.goTo({\n            x: _camera.x,\n            y: _camera.y\n          });\n\n        _self.dispatchEvent('mouseup',\n          sigma.utils.mouseCoords(e));\n\n        // Update _isMoving flag:\n        _isMoving = false;\n      }\n    }\n\n    /**\n     * The handler listening to the 'down' mouse event. It will start observing\n     * the mouse position for dragging the graph.\n     *\n     * @param {event} e A mouse event.\n     */\n    function _downHandler(e) {\n      if (_settings('mouseEnabled')) {\n        _startCameraX = _camera.x;\n        _startCameraY = _camera.y;\n\n        _lastCameraX = _camera.x;\n        _lastCameraY = _camera.y;\n\n        _startMouseX = sigma.utils.getX(e);\n        _startMouseY = sigma.utils.getY(e);\n\n        _hasDragged = false;\n        _downStartTime = (new Date()).getTime();\n\n        switch (e.which) {\n          case 2:\n            // Middle mouse button pressed\n            // Do nothing.\n            break;\n          case 3:\n            // Right mouse button pressed\n            _self.dispatchEvent('rightclick',\n              sigma.utils.mouseCoords(e, _startMouseX, _startMouseY));\n            break;\n          // case 1:\n          default:\n            // Left mouse button pressed\n            _isMouseDown = true;\n\n            _self.dispatchEvent('mousedown',\n              sigma.utils.mouseCoords(e, _startMouseX, _startMouseY));\n        }\n      }\n    }\n\n    /**\n     * The handler listening to the 'out' mouse event. It will just redispatch\n     * the event.\n     *\n     * @param {event} e A mouse event.\n     */\n    function _outHandler(e) {\n      if (_settings('mouseEnabled'))\n        _self.dispatchEvent('mouseout');\n    }\n\n    /**\n     * The handler listening to the 'click' mouse event. It will redispatch the\n     * click event, but with normalized X and Y coordinates.\n     *\n     * @param {event} e A mouse event.\n     */\n    function _clickHandler(e) {\n      if (_settings('mouseEnabled')) {\n        var event = sigma.utils.mouseCoords(e);\n        event.isDragging =\n          (((new Date()).getTime() - _downStartTime) > 100) && _hasDragged;\n        _self.dispatchEvent('click', event);\n      }\n\n      if (e.preventDefault)\n        e.preventDefault();\n      else\n        e.returnValue = false;\n\n      e.stopPropagation();\n      return false;\n    }\n\n    /**\n     * The handler listening to the double click custom event. It will\n     * basically zoom into the graph.\n     *\n     * @param {event} e A mouse event.\n     */\n    function _doubleClickHandler(e) {\n      var pos,\n          ratio,\n          animation;\n\n      if (_settings('mouseEnabled')) {\n        ratio = 1 / _settings('doubleClickZoomingRatio');\n\n        _self.dispatchEvent('doubleclick',\n            sigma.utils.mouseCoords(e, _startMouseX, _startMouseY));\n\n        if (_settings('doubleClickEnabled')) {\n          pos = _camera.cameraPosition(\n            sigma.utils.getX(e) - sigma.utils.getCenter(e).x,\n            sigma.utils.getY(e) - sigma.utils.getCenter(e).y,\n            true\n          );\n\n          animation = {\n            duration: _settings('doubleClickZoomDuration')\n          };\n\n          sigma.utils.zoomTo(_camera, pos.x, pos.y, ratio, animation);\n        }\n\n        if (e.preventDefault)\n          e.preventDefault();\n        else\n          e.returnValue = false;\n\n        e.stopPropagation();\n        return false;\n      }\n    }\n\n    /**\n     * The handler listening to the 'wheel' mouse event. It will basically zoom\n     * in or not into the graph.\n     *\n     * @param {event} e A mouse event.\n     */\n    function _wheelHandler(e) {\n      var pos,\n          ratio,\n          animation,\n          wheelDelta = sigma.utils.getDelta(e);\n\n      if (_settings('mouseEnabled') && _settings('mouseWheelEnabled') && wheelDelta !== 0) {\n        ratio = wheelDelta > 0 ?\n          1 / _settings('zoomingRatio') :\n          _settings('zoomingRatio');\n\n        pos = _camera.cameraPosition(\n          sigma.utils.getX(e) - sigma.utils.getCenter(e).x,\n          sigma.utils.getY(e) - sigma.utils.getCenter(e).y,\n          true\n        );\n\n        animation = {\n          duration: _settings('mouseZoomDuration')\n        };\n\n        sigma.utils.zoomTo(_camera, pos.x, pos.y, ratio, animation);\n\n        if (e.preventDefault)\n          e.preventDefault();\n        else\n          e.returnValue = false;\n\n        e.stopPropagation();\n        return false;\n      }\n    }\n  };\n}).call(this);\n\n;(function(undefined) {\n  'use strict';\n\n  if (typeof sigma === 'undefined')\n    throw 'sigma is not declared';\n\n  // Initialize packages:\n  sigma.utils.pkg('sigma.captors');\n\n  /**\n   * The user inputs default captor. It deals with mouse events, keyboards\n   * events and touch events.\n   *\n   * @param  {DOMElement}   target   The DOM element where the listeners will be\n   *                                 bound.\n   * @param  {camera}       camera   The camera related to the target.\n   * @param  {configurable} settings The settings function.\n   * @return {sigma.captor}          The fresh new captor instance.\n   */\n  sigma.captors.touch = function(target, camera, settings) {\n    var _self = this,\n        _target = target,\n        _camera = camera,\n        _settings = settings,\n\n        // CAMERA MANAGEMENT:\n        // ******************\n        // The camera position when the user starts dragging:\n        _startCameraX,\n        _startCameraY,\n        _startCameraAngle,\n        _startCameraRatio,\n\n        // The latest stage position:\n        _lastCameraX,\n        _lastCameraY,\n        _lastCameraAngle,\n        _lastCameraRatio,\n\n        // TOUCH MANAGEMENT:\n        // *****************\n        // Touches that are down:\n        _downTouches = [],\n\n        _startTouchX0,\n        _startTouchY0,\n        _startTouchX1,\n        _startTouchY1,\n        _startTouchAngle,\n        _startTouchDistance,\n\n        _touchMode,\n\n        _isMoving,\n        _doubleTap,\n        _movingTimeoutId;\n\n    sigma.classes.dispatcher.extend(this);\n\n    sigma.utils.doubleClick(_target, 'touchstart', _doubleTapHandler);\n    _target.addEventListener('touchstart', _handleStart, false);\n    _target.addEventListener('touchend', _handleLeave, false);\n    _target.addEventListener('touchcancel', _handleLeave, false);\n    _target.addEventListener('touchleave', _handleLeave, false);\n    _target.addEventListener('touchmove', _handleMove, false);\n\n    function position(e) {\n      var offset = sigma.utils.getOffset(_target);\n\n      return {\n        x: e.pageX - offset.left,\n        y: e.pageY - offset.top\n      };\n    }\n\n    /**\n     * This method unbinds every handlers that makes the captor work.\n     */\n    this.kill = function() {\n      sigma.utils.unbindDoubleClick(_target, 'touchstart');\n      _target.addEventListener('touchstart', _handleStart);\n      _target.addEventListener('touchend', _handleLeave);\n      _target.addEventListener('touchcancel', _handleLeave);\n      _target.addEventListener('touchleave', _handleLeave);\n      _target.addEventListener('touchmove', _handleMove);\n    };\n\n    // TOUCH EVENTS:\n    // *************\n    /**\n     * The handler listening to the 'touchstart' event. It will set the touch\n     * mode (\"_touchMode\") and start observing the user touch moves.\n     *\n     * @param {event} e A touch event.\n     */\n    function _handleStart(e) {\n      if (_settings('touchEnabled')) {\n        var x0,\n            x1,\n            y0,\n            y1,\n            pos0,\n            pos1;\n\n        _downTouches = e.touches;\n\n        switch (_downTouches.length) {\n          case 1:\n            _camera.isMoving = true;\n            _touchMode = 1;\n\n            _startCameraX = _camera.x;\n            _startCameraY = _camera.y;\n\n            _lastCameraX = _camera.x;\n            _lastCameraY = _camera.y;\n\n            pos0 = position(_downTouches[0]);\n            _startTouchX0 = pos0.x;\n            _startTouchY0 = pos0.y;\n\n            break;\n          case 2:\n            _camera.isMoving = true;\n            _touchMode = 2;\n\n            pos0 = position(_downTouches[0]);\n            pos1 = position(_downTouches[1]);\n            x0 = pos0.x;\n            y0 = pos0.y;\n            x1 = pos1.x;\n            y1 = pos1.y;\n\n            _lastCameraX = _camera.x;\n            _lastCameraY = _camera.y;\n\n            _startCameraAngle = _camera.angle;\n            _startCameraRatio = _camera.ratio;\n\n            _startCameraX = _camera.x;\n            _startCameraY = _camera.y;\n\n            _startTouchX0 = x0;\n            _startTouchY0 = y0;\n            _startTouchX1 = x1;\n            _startTouchY1 = y1;\n\n            _startTouchAngle = Math.atan2(\n              _startTouchY1 - _startTouchY0,\n              _startTouchX1 - _startTouchX0\n            );\n            _startTouchDistance = Math.sqrt(\n              (_startTouchY1 - _startTouchY0) *\n                (_startTouchY1 - _startTouchY0) +\n              (_startTouchX1 - _startTouchX0) *\n                (_startTouchX1 - _startTouchX0)\n            );\n\n            e.preventDefault();\n            return false;\n        }\n      }\n    }\n\n    /**\n     * The handler listening to the 'touchend', 'touchcancel' and 'touchleave'\n     * event. It will update the touch mode if there are still at least one\n     * finger, and stop dragging else.\n     *\n     * @param {event} e A touch event.\n     */\n    function _handleLeave(e) {\n      if (_settings('touchEnabled')) {\n        _downTouches = e.touches;\n        var inertiaRatio = _settings('touchInertiaRatio');\n\n        if (_movingTimeoutId) {\n          _isMoving = false;\n          clearTimeout(_movingTimeoutId);\n        }\n\n        switch (_touchMode) {\n          case 2:\n            if (e.touches.length === 1) {\n              _handleStart(e);\n\n              e.preventDefault();\n              break;\n            }\n            /* falls through */\n          case 1:\n            _camera.isMoving = false;\n            _self.dispatchEvent('stopDrag');\n\n            if (_isMoving) {\n              _doubleTap = false;\n              sigma.misc.animation.camera(\n                _camera,\n                {\n                  x: _camera.x +\n                    inertiaRatio * (_camera.x - _lastCameraX),\n                  y: _camera.y +\n                    inertiaRatio * (_camera.y - _lastCameraY)\n                },\n                {\n                  easing: 'quadraticOut',\n                  duration: _settings('touchInertiaDuration')\n                }\n              );\n            }\n\n            _isMoving = false;\n            _touchMode = 0;\n            break;\n        }\n      }\n    }\n\n    /**\n     * The handler listening to the 'touchmove' event. It will effectively drag\n     * the graph, and eventually zooms and turn it if the user is using two\n     * fingers.\n     *\n     * @param {event} e A touch event.\n     */\n    function _handleMove(e) {\n      if (!_doubleTap && _settings('touchEnabled')) {\n        var x0,\n            x1,\n            y0,\n            y1,\n            cos,\n            sin,\n            end,\n            pos0,\n            pos1,\n            diff,\n            start,\n            dAngle,\n            dRatio,\n            newStageX,\n            newStageY,\n            newStageRatio,\n            newStageAngle;\n\n        _downTouches = e.touches;\n        _isMoving = true;\n\n        if (_movingTimeoutId)\n          clearTimeout(_movingTimeoutId);\n\n        _movingTimeoutId = setTimeout(function() {\n          _isMoving = false;\n        }, _settings('dragTimeout'));\n\n        switch (_touchMode) {\n          case 1:\n            pos0 = position(_downTouches[0]);\n            x0 = pos0.x;\n            y0 = pos0.y;\n\n            diff = _camera.cameraPosition(\n              x0 - _startTouchX0,\n              y0 - _startTouchY0,\n              true\n            );\n\n            newStageX = _startCameraX - diff.x;\n            newStageY = _startCameraY - diff.y;\n\n            if (newStageX !== _camera.x || newStageY !== _camera.y) {\n              _lastCameraX = _camera.x;\n              _lastCameraY = _camera.y;\n\n              _camera.goTo({\n                x: newStageX,\n                y: newStageY\n              });\n\n              _self.dispatchEvent('mousemove',\n                sigma.utils.mouseCoords(e, pos0.x, pos0.y));\n\n              _self.dispatchEvent('drag');\n            }\n            break;\n          case 2:\n            pos0 = position(_downTouches[0]);\n            pos1 = position(_downTouches[1]);\n            x0 = pos0.x;\n            y0 = pos0.y;\n            x1 = pos1.x;\n            y1 = pos1.y;\n\n            start = _camera.cameraPosition(\n              (_startTouchX0 + _startTouchX1) / 2 -\n                sigma.utils.getCenter(e).x,\n              (_startTouchY0 + _startTouchY1) / 2 -\n                sigma.utils.getCenter(e).y,\n              true\n            );\n            end = _camera.cameraPosition(\n              (x0 + x1) / 2 - sigma.utils.getCenter(e).x,\n              (y0 + y1) / 2 - sigma.utils.getCenter(e).y,\n              true\n            );\n\n            dAngle = Math.atan2(y1 - y0, x1 - x0) - _startTouchAngle;\n            dRatio = Math.sqrt(\n              (y1 - y0) * (y1 - y0) + (x1 - x0) * (x1 - x0)\n            ) / _startTouchDistance;\n\n            // Translation:\n            x0 = start.x;\n            y0 = start.y;\n\n            // Homothetic transformation:\n            newStageRatio = _startCameraRatio / dRatio;\n            x0 = x0 * dRatio;\n            y0 = y0 * dRatio;\n\n            // Rotation:\n            newStageAngle = _startCameraAngle - dAngle;\n            cos = Math.cos(-dAngle);\n            sin = Math.sin(-dAngle);\n            x1 = x0 * cos + y0 * sin;\n            y1 = y0 * cos - x0 * sin;\n            x0 = x1;\n            y0 = y1;\n\n            // Finalize:\n            newStageX = x0 - end.x + _startCameraX;\n            newStageY = y0 - end.y + _startCameraY;\n\n            if (\n              newStageRatio !== _camera.ratio ||\n              newStageAngle !== _camera.angle ||\n              newStageX !== _camera.x ||\n              newStageY !== _camera.y\n            ) {\n              _lastCameraX = _camera.x;\n              _lastCameraY = _camera.y;\n              _lastCameraAngle = _camera.angle;\n              _lastCameraRatio = _camera.ratio;\n\n              _camera.goTo({\n                x: newStageX,\n                y: newStageY,\n                angle: newStageAngle,\n                ratio: newStageRatio\n              });\n\n              _self.dispatchEvent('drag');\n            }\n\n            break;\n        }\n\n        e.preventDefault();\n        return false;\n      }\n    }\n\n    /**\n     * The handler listening to the double tap custom event. It will\n     * basically zoom into the graph.\n     *\n     * @param {event} e A touch event.\n     */\n    function _doubleTapHandler(e) {\n      var pos,\n          ratio,\n          animation;\n\n      if (e.touches && e.touches.length === 1 && _settings('touchEnabled')) {\n        _doubleTap = true;\n\n        ratio = 1 / _settings('doubleClickZoomingRatio');\n\n        pos = position(e.touches[0]);\n        _self.dispatchEvent('doubleclick',\n          sigma.utils.mouseCoords(e, pos.x, pos.y));\n\n        if (_settings('doubleClickEnabled')) {\n          pos = _camera.cameraPosition(\n            pos.x - sigma.utils.getCenter(e).x,\n            pos.y - sigma.utils.getCenter(e).y,\n            true\n          );\n\n          animation = {\n            duration: _settings('doubleClickZoomDuration'),\n            onComplete: function() {\n              _doubleTap = false;\n            }\n          };\n\n          sigma.utils.zoomTo(_camera, pos.x, pos.y, ratio, animation);\n        }\n\n        if (e.preventDefault)\n          e.preventDefault();\n        else\n          e.returnValue = false;\n\n        e.stopPropagation();\n        return false;\n      }\n    }\n  };\n}).call(this);\n\n;(function(undefined) {\n  'use strict';\n\n  if (typeof sigma === 'undefined')\n    throw 'sigma is not declared';\n\n  if (typeof conrad === 'undefined')\n    throw 'conrad is not declared';\n\n  // Initialize packages:\n  sigma.utils.pkg('sigma.renderers');\n\n  /**\n   * This function is the constructor of the canvas sigma's renderer.\n   *\n   * @param  {sigma.classes.graph}            graph    The graph to render.\n   * @param  {sigma.classes.camera}           camera   The camera.\n   * @param  {configurable}           settings The sigma instance settings\n   *                                           function.\n   * @param  {object}                 object   The options object.\n   * @return {sigma.renderers.canvas}          The renderer instance.\n   */\n  sigma.renderers.canvas = function(graph, camera, settings, options) {\n    if (typeof options !== 'object')\n      throw 'sigma.renderers.canvas: Wrong arguments.';\n\n    if (!(options.container instanceof HTMLElement))\n      throw 'Container not found.';\n\n    var k,\n        i,\n        l,\n        a,\n        fn,\n        self = this;\n\n    sigma.classes.dispatcher.extend(this);\n\n    // Initialize main attributes:\n    Object.defineProperty(this, 'conradId', {\n      value: sigma.utils.id()\n    });\n    this.graph = graph;\n    this.camera = camera;\n    this.contexts = {};\n    this.domElements = {};\n    this.options = options;\n    this.container = this.options.container;\n    this.settings = (\n        typeof options.settings === 'object' &&\n        options.settings\n      ) ?\n        settings.embedObjects(options.settings) :\n        settings;\n\n    // Node indexes:\n    this.nodesOnScreen = [];\n    this.edgesOnScreen = [];\n\n    // Conrad related attributes:\n    this.jobs = {};\n\n    // Find the prefix:\n    this.options.prefix = 'renderer' + this.conradId + ':';\n\n    // Initialize the DOM elements:\n    if (\n      !this.settings('batchEdgesDrawing')\n    ) {\n      this.initDOM('canvas', 'scene');\n      this.contexts.edges = this.contexts.scene;\n      this.contexts.nodes = this.contexts.scene;\n      this.contexts.labels = this.contexts.scene;\n    } else {\n      this.initDOM('canvas', 'edges');\n      this.initDOM('canvas', 'scene');\n      this.contexts.nodes = this.contexts.scene;\n      this.contexts.labels = this.contexts.scene;\n    }\n\n    this.initDOM('canvas', 'mouse');\n    this.contexts.hover = this.contexts.mouse;\n\n    // Initialize captors:\n    this.captors = [];\n    a = this.options.captors || [sigma.captors.mouse, sigma.captors.touch];\n    for (i = 0, l = a.length; i < l; i++) {\n      fn = typeof a[i] === 'function' ? a[i] : sigma.captors[a[i]];\n      this.captors.push(\n        new fn(\n          this.domElements.mouse,\n          this.camera,\n          this.settings\n        )\n      );\n    }\n\n    // Deal with sigma events:\n    sigma.misc.bindEvents.call(this, this.options.prefix);\n    sigma.misc.drawHovers.call(this, this.options.prefix);\n\n    this.resize(false);\n  };\n\n\n\n\n  /**\n   * This method renders the graph on the canvases.\n   *\n   * @param  {?object}                options Eventually an object of options.\n   * @return {sigma.renderers.canvas}         Returns the instance itself.\n   */\n  sigma.renderers.canvas.prototype.render = function(options) {\n    options = options || {};\n\n    var a,\n        i,\n        k,\n        l,\n        o,\n        id,\n        end,\n        job,\n        start,\n        edges,\n        renderers,\n        rendererType,\n        batchSize,\n        tempGCO,\n        index = {},\n        graph = this.graph,\n        nodes = this.graph.nodes,\n        prefix = this.options.prefix || '',\n        drawEdges = this.settings(options, 'drawEdges'),\n        drawNodes = this.settings(options, 'drawNodes'),\n        drawLabels = this.settings(options, 'drawLabels'),\n        drawEdgeLabels = this.settings(options, 'drawEdgeLabels'),\n        embedSettings = this.settings.embedObjects(options, {\n          prefix: this.options.prefix\n        });\n\n    // Call the resize function:\n    this.resize(false);\n\n    // Check the 'hideEdgesOnMove' setting:\n    if (this.settings(options, 'hideEdgesOnMove'))\n      if (this.camera.isAnimated || this.camera.isMoving)\n        drawEdges = false;\n\n    // Apply the camera's view:\n    this.camera.applyView(\n      undefined,\n      this.options.prefix,\n      {\n        width: this.width,\n        height: this.height\n      }\n    );\n\n    // Clear canvases:\n    this.clear();\n\n    // Kill running jobs:\n    for (k in this.jobs)\n      if (conrad.hasJob(k))\n        conrad.killJob(k);\n\n    // Find which nodes are on screen:\n    this.edgesOnScreen = [];\n    this.nodesOnScreen = this.camera.quadtree.area(\n      this.camera.getRectangle(this.width, this.height)\n    );\n\n    for (a = this.nodesOnScreen, i = 0, l = a.length; i < l; i++)\n      index[a[i].id] = a[i];\n\n    // Draw edges:\n    // - If settings('batchEdgesDrawing') is true, the edges are displayed per\n    //   batches. If not, they are drawn in one frame.\n    if (drawEdges) {\n      // First, let's identify which edges to draw. To do this, we just keep\n      // every edges that have at least one extremity displayed according to\n      // the quadtree and the \"hidden\" attribute. We also do not keep hidden\n      // edges.\n      for (a = graph.edges(), i = 0, l = a.length; i < l; i++) {\n        o = a[i];\n        if (\n          (index[o.source] || index[o.target]) &&\n          (!o.hidden && !nodes(o.source).hidden && !nodes(o.target).hidden)\n        )\n          this.edgesOnScreen.push(o);\n      }\n\n      // If the \"batchEdgesDrawing\" settings is true, edges are batched:\n      if (this.settings(options, 'batchEdgesDrawing')) {\n        id = 'edges_' + this.conradId;\n        batchSize = embedSettings('canvasEdgesBatchSize');\n\n        edges = this.edgesOnScreen;\n        l = edges.length;\n\n        start = 0;\n        end = Math.min(edges.length, start + batchSize);\n\n        job = function() {\n          tempGCO = this.contexts.edges.globalCompositeOperation;\n          this.contexts.edges.globalCompositeOperation = 'destination-over';\n\n          renderers = sigma.canvas.edges;\n          for (i = start; i < end; i++) {\n            o = edges[i];\n            (renderers[\n              o.type || this.settings(options, 'defaultEdgeType')\n            ] || renderers.def)(\n              o,\n              graph.nodes(o.source),\n              graph.nodes(o.target),\n              this.contexts.edges,\n              embedSettings\n            );\n          }\n\n          // Draw edge labels:\n          if (drawEdgeLabels) {\n            renderers = sigma.canvas.edges.labels;\n            for (i = start; i < end; i++) {\n              o = edges[i];\n              if (!o.hidden)\n                (renderers[\n                  o.type || this.settings(options, 'defaultEdgeType')\n                ] || renderers.def)(\n                  o,\n                  graph.nodes(o.source),\n                  graph.nodes(o.target),\n                  this.contexts.labels,\n                  embedSettings\n                );\n            }\n          }\n\n          // Restore original globalCompositeOperation:\n          this.contexts.edges.globalCompositeOperation = tempGCO;\n\n          // Catch job's end:\n          if (end === edges.length) {\n            delete this.jobs[id];\n            return false;\n          }\n\n          start = end + 1;\n          end = Math.min(edges.length, start + batchSize);\n          return true;\n        };\n\n        this.jobs[id] = job;\n        conrad.addJob(id, job.bind(this));\n\n      // If not, they are drawn in one frame:\n      } else {\n        renderers = sigma.canvas.edges;\n        for (a = this.edgesOnScreen, i = 0, l = a.length; i < l; i++) {\n          o = a[i];\n          (renderers[\n            o.type || this.settings(options, 'defaultEdgeType')\n          ] || renderers.def)(\n            o,\n            graph.nodes(o.source),\n            graph.nodes(o.target),\n            this.contexts.edges,\n            embedSettings\n          );\n        }\n\n        // Draw edge labels:\n        // - No batching\n        if (drawEdgeLabels) {\n          renderers = sigma.canvas.edges.labels;\n          for (a = this.edgesOnScreen, i = 0, l = a.length; i < l; i++)\n            if (!a[i].hidden)\n              (renderers[\n                a[i].type || this.settings(options, 'defaultEdgeType')\n              ] || renderers.def)(\n                a[i],\n                graph.nodes(a[i].source),\n                graph.nodes(a[i].target),\n                this.contexts.labels,\n                embedSettings\n              );\n        }\n      }\n    }\n\n    // Draw nodes:\n    // - No batching\n    if (drawNodes) {\n      renderers = sigma.canvas.nodes;\n      for (a = this.nodesOnScreen, i = 0, l = a.length; i < l; i++)\n        if (!a[i].hidden)\n          (renderers[\n            a[i].type || this.settings(options, 'defaultNodeType')\n          ] || renderers.def)(\n            a[i],\n            this.contexts.nodes,\n            embedSettings\n          );\n    }\n\n    // Draw labels:\n    // - No batching\n    if (drawLabels) {\n      renderers = sigma.canvas.labels;\n      for (a = this.nodesOnScreen, i = 0, l = a.length; i < l; i++)\n        if (!a[i].hidden)\n          (renderers[\n            a[i].type || this.settings(options, 'defaultNodeType')\n          ] || renderers.def)(\n            a[i],\n            this.contexts.labels,\n            embedSettings\n          );\n    }\n\n    this.dispatchEvent('render');\n\n    return this;\n  };\n\n  /**\n   * This method creates a DOM element of the specified type, switches its\n   * position to \"absolute\", references it to the domElements attribute, and\n   * finally appends it to the container.\n   *\n   * @param  {string} tag The label tag.\n   * @param  {string} id  The id of the element (to store it in \"domElements\").\n   */\n  sigma.renderers.canvas.prototype.initDOM = function(tag, id) {\n    var dom = document.createElement(tag);\n\n    dom.style.position = 'absolute';\n    dom.setAttribute('class', 'sigma-' + id);\n\n    this.domElements[id] = dom;\n    this.container.appendChild(dom);\n\n    if (tag.toLowerCase() === 'canvas')\n      this.contexts[id] = dom.getContext('2d');\n  };\n\n  /**\n   * This method resizes each DOM elements in the container and stores the new\n   * dimensions. Then, it renders the graph.\n   *\n   * @param  {?number}                width  The new width of the container.\n   * @param  {?number}                height The new height of the container.\n   * @return {sigma.renderers.canvas}        Returns the instance itself.\n   */\n  sigma.renderers.canvas.prototype.resize = function(w, h) {\n    var k,\n        oldWidth = this.width,\n        oldHeight = this.height,\n        pixelRatio = sigma.utils.getPixelRatio();\n\n    if (w !== undefined && h !== undefined) {\n      this.width = w;\n      this.height = h;\n    } else {\n      this.width = this.container.offsetWidth;\n      this.height = this.container.offsetHeight;\n\n      w = this.width;\n      h = this.height;\n    }\n\n    if (oldWidth !== this.width || oldHeight !== this.height) {\n      for (k in this.domElements) {\n        this.domElements[k].style.width = w + 'px';\n        this.domElements[k].style.height = h + 'px';\n\n        if (this.domElements[k].tagName.toLowerCase() === 'canvas') {\n          this.domElements[k].setAttribute('width', (w * pixelRatio) + 'px');\n          this.domElements[k].setAttribute('height', (h * pixelRatio) + 'px');\n\n          if (pixelRatio !== 1)\n            this.contexts[k].scale(pixelRatio, pixelRatio);\n        }\n      }\n    }\n\n    return this;\n  };\n\n  /**\n   * This method clears each canvas.\n   *\n   * @return {sigma.renderers.canvas} Returns the instance itself.\n   */\n  sigma.renderers.canvas.prototype.clear = function() {\n    for (var k in this.contexts) {\n      this.contexts[k].clearRect(0, 0, this.width, this.height);\n    }\n\n    return this;\n  };\n\n  /**\n   * This method kills contexts and other attributes.\n   */\n  sigma.renderers.canvas.prototype.kill = function() {\n    var k,\n        captor;\n\n    // Kill captors:\n    while ((captor = this.captors.pop()))\n      captor.kill();\n    delete this.captors;\n\n    // Kill contexts:\n    for (k in this.domElements) {\n      this.domElements[k].parentNode.removeChild(this.domElements[k]);\n      delete this.domElements[k];\n      delete this.contexts[k];\n    }\n    delete this.domElements;\n    delete this.contexts;\n  };\n\n\n\n\n  /**\n   * The labels, nodes and edges renderers are stored in the three following\n   * objects. When an element is drawn, its type will be checked and if a\n   * renderer with the same name exists, it will be used. If not found, the\n   * default renderer will be used instead.\n   *\n   * They are stored in different files, in the \"./canvas\" folder.\n   */\n  sigma.utils.pkg('sigma.canvas.nodes');\n  sigma.utils.pkg('sigma.canvas.edges');\n  sigma.utils.pkg('sigma.canvas.labels');\n}).call(this);\n\n;(function(undefined) {\n  'use strict';\n\n  if (typeof sigma === 'undefined')\n    throw 'sigma is not declared';\n\n  // Initialize packages:\n  sigma.utils.pkg('sigma.renderers');\n\n  /**\n   * This function is the constructor of the canvas sigma's renderer.\n   *\n   * @param  {sigma.classes.graph}            graph    The graph to render.\n   * @param  {sigma.classes.camera}           camera   The camera.\n   * @param  {configurable}           settings The sigma instance settings\n   *                                           function.\n   * @param  {object}                 object   The options object.\n   * @return {sigma.renderers.canvas}          The renderer instance.\n   */\n  sigma.renderers.webgl = function(graph, camera, settings, options) {\n    if (typeof options !== 'object')\n      throw 'sigma.renderers.webgl: Wrong arguments.';\n\n    if (!(options.container instanceof HTMLElement))\n      throw 'Container not found.';\n\n    var k,\n        i,\n        l,\n        a,\n        fn,\n        _self = this;\n\n    sigma.classes.dispatcher.extend(this);\n\n    // Conrad related attributes:\n    this.jobs = {};\n\n    Object.defineProperty(this, 'conradId', {\n      value: sigma.utils.id()\n    });\n\n    // Initialize main attributes:\n    this.graph = graph;\n    this.camera = camera;\n    this.contexts = {};\n    this.domElements = {};\n    this.options = options;\n    this.container = this.options.container;\n    this.settings = (\n        typeof options.settings === 'object' &&\n        options.settings\n      ) ?\n        settings.embedObjects(options.settings) :\n        settings;\n\n    // Find the prefix:\n    this.options.prefix = this.camera.readPrefix;\n\n    // Initialize programs hash\n    Object.defineProperty(this, 'nodePrograms', {\n      value: {}\n    });\n    Object.defineProperty(this, 'edgePrograms', {\n      value: {}\n    });\n    Object.defineProperty(this, 'nodeFloatArrays', {\n      value: {}\n    });\n    Object.defineProperty(this, 'edgeFloatArrays', {\n      value: {}\n    });\n    Object.defineProperty(this, 'edgeIndicesArrays', {\n      value: {}\n    });\n\n    // Initialize the DOM elements:\n    if (this.settings(options, 'batchEdgesDrawing')) {\n      this.initDOM('canvas', 'edges', true);\n      this.initDOM('canvas', 'nodes', true);\n    } else {\n      this.initDOM('canvas', 'scene', true);\n      this.contexts.nodes = this.contexts.scene;\n      this.contexts.edges = this.contexts.scene;\n    }\n\n    this.initDOM('canvas', 'labels');\n    this.initDOM('canvas', 'mouse');\n    this.contexts.hover = this.contexts.mouse;\n\n    // Initialize captors:\n    this.captors = [];\n    a = this.options.captors || [sigma.captors.mouse, sigma.captors.touch];\n    for (i = 0, l = a.length; i < l; i++) {\n      fn = typeof a[i] === 'function' ? a[i] : sigma.captors[a[i]];\n      this.captors.push(\n        new fn(\n          this.domElements.mouse,\n          this.camera,\n          this.settings\n        )\n      );\n    }\n\n    // Deal with sigma events:\n    sigma.misc.bindEvents.call(this, this.camera.prefix);\n    sigma.misc.drawHovers.call(this, this.camera.prefix);\n\n    this.resize();\n  };\n\n\n\n\n  /**\n   * This method will generate the nodes and edges float arrays. This step is\n   * separated from the \"render\" method, because to keep WebGL efficient, since\n   * all the camera and middlewares are modelised as matrices and they do not\n   * require the float arrays to be regenerated.\n   *\n   * Basically, when the user moves the camera or applies some specific linear\n   * transformations, this process step will be skipped, and the \"render\"\n   * method will efficiently refresh the rendering.\n   *\n   * And when the user modifies the graph colors or positions (applying a new\n   * layout or filtering the colors, for instance), this \"process\" step will be\n   * required to regenerate the float arrays.\n   *\n   * @return {sigma.renderers.webgl} Returns the instance itself.\n   */\n  sigma.renderers.webgl.prototype.process = function() {\n    var a,\n        i,\n        l,\n        k,\n        type,\n        renderer,\n        graph = this.graph,\n        options = sigma.utils.extend(options, this.options),\n        defaultEdgeType = this.settings(options, 'defaultEdgeType'),\n        defaultNodeType = this.settings(options, 'defaultNodeType');\n\n    // Empty float arrays:\n    for (k in this.nodeFloatArrays)\n      delete this.nodeFloatArrays[k];\n\n    for (k in this.edgeFloatArrays)\n      delete this.edgeFloatArrays[k];\n\n    for (k in this.edgeIndicesArrays)\n      delete this.edgeIndicesArrays[k];\n\n    // Sort edges and nodes per types:\n    for (a = graph.edges(), i = 0, l = a.length; i < l; i++) {\n      type = a[i].type || defaultEdgeType;\n      k = (type && sigma.webgl.edges[type]) ? type : 'def';\n\n      if (!this.edgeFloatArrays[k])\n        this.edgeFloatArrays[k] = {\n          edges: []\n        };\n\n      this.edgeFloatArrays[k].edges.push(a[i]);\n    }\n\n    for (a = graph.nodes(), i = 0, l = a.length; i < l; i++) {\n      type = a[i].type || defaultNodeType;\n      k = (type && sigma.webgl.nodes[type]) ? type : 'def';\n\n      if (!this.nodeFloatArrays[k])\n        this.nodeFloatArrays[k] = {\n          nodes: []\n        };\n\n      this.nodeFloatArrays[k].nodes.push(a[i]);\n    }\n\n    // Push edges:\n    for (k in this.edgeFloatArrays) {\n      renderer = sigma.webgl.edges[k];\n      a = this.edgeFloatArrays[k].edges;\n\n      // Creating the necessary arrays\n      this.edgeFloatArrays[k].array = new Float32Array(\n        a.length * renderer.POINTS * renderer.ATTRIBUTES\n      );\n\n      for (i = 0, l = a.length; i < l; i++) {\n\n        // Just check that the edge and both its extremities are visible:\n        if (\n          !a[i].hidden &&\n          !graph.nodes(a[i].source).hidden &&\n          !graph.nodes(a[i].target).hidden\n        )\n          renderer.addEdge(\n            a[i],\n            graph.nodes(a[i].source),\n            graph.nodes(a[i].target),\n            this.edgeFloatArrays[k].array,\n            i * renderer.POINTS * renderer.ATTRIBUTES,\n            options.prefix,\n            this.settings\n          );\n      }\n\n      if (typeof renderer.computeIndices === 'function')\n        this.edgeIndicesArrays[k] = renderer.computeIndices(\n          this.edgeFloatArrays[k].array\n        );\n    }\n\n    // Push nodes:\n    for (k in this.nodeFloatArrays) {\n      renderer = sigma.webgl.nodes[k];\n      a = this.nodeFloatArrays[k].nodes;\n\n      // Creating the necessary arrays\n      this.nodeFloatArrays[k].array = new Float32Array(\n        a.length * renderer.POINTS * renderer.ATTRIBUTES\n      );\n\n      for (i = 0, l = a.length; i < l; i++) {\n        if (!this.nodeFloatArrays[k].array)\n          this.nodeFloatArrays[k].array = new Float32Array(\n            a.length * renderer.POINTS * renderer.ATTRIBUTES\n          );\n\n        // Just check that the edge and both its extremities are visible:\n        if (\n          !a[i].hidden\n        )\n          renderer.addNode(\n            a[i],\n            this.nodeFloatArrays[k].array,\n            i * renderer.POINTS * renderer.ATTRIBUTES,\n            options.prefix,\n            this.settings\n          );\n      }\n    }\n\n    return this;\n  };\n\n\n\n\n  /**\n   * This method renders the graph. It basically calls each program (and\n   * generate them if they do not exist yet) to render nodes and edges, batched\n   * per renderer.\n   *\n   * As in the canvas renderer, it is possible to display edges, nodes and / or\n   * labels in batches, to make the whole thing way more scalable.\n   *\n   * @param  {?object}               params Eventually an object of options.\n   * @return {sigma.renderers.webgl}        Returns the instance itself.\n   */\n  sigma.renderers.webgl.prototype.render = function(params) {\n    var a,\n        i,\n        l,\n        k,\n        o,\n        program,\n        renderer,\n        self = this,\n        graph = this.graph,\n        nodesGl = this.contexts.nodes,\n        edgesGl = this.contexts.edges,\n        matrix = this.camera.getMatrix(),\n        options = sigma.utils.extend(params, this.options),\n        drawLabels = this.settings(options, 'drawLabels'),\n        drawEdges = this.settings(options, 'drawEdges'),\n        drawNodes = this.settings(options, 'drawNodes');\n\n    // Call the resize function:\n    this.resize(false);\n\n    // Check the 'hideEdgesOnMove' setting:\n    if (this.settings(options, 'hideEdgesOnMove'))\n      if (this.camera.isAnimated || this.camera.isMoving)\n        drawEdges = false;\n\n    // Clear canvases:\n    this.clear();\n\n    // Translate matrix to [width/2, height/2]:\n    matrix = sigma.utils.matrices.multiply(\n      matrix,\n      sigma.utils.matrices.translation(this.width / 2, this.height / 2)\n    );\n\n    // Kill running jobs:\n    for (k in this.jobs)\n      if (conrad.hasJob(k))\n        conrad.killJob(k);\n\n    if (drawEdges) {\n      if (this.settings(options, 'batchEdgesDrawing'))\n        (function() {\n          var a,\n              k,\n              i,\n              id,\n              job,\n              arr,\n              end,\n              start,\n              indices,\n              renderer,\n              batchSize,\n              currentProgram;\n\n          id = 'edges_' + this.conradId;\n          batchSize = this.settings(options, 'webglEdgesBatchSize');\n          a = Object.keys(this.edgeFloatArrays);\n\n          if (!a.length)\n            return;\n          i = 0;\n          renderer = sigma.webgl.edges[a[i]];\n          arr = this.edgeFloatArrays[a[i]].array;\n          indices = this.edgeIndicesArrays[a[i]];\n          start = 0;\n          end = Math.min(\n            start + batchSize * renderer.POINTS,\n            arr.length / renderer.ATTRIBUTES\n          );\n\n          job = function() {\n            // Check program:\n            if (!this.edgePrograms[a[i]])\n              this.edgePrograms[a[i]] = renderer.initProgram(edgesGl);\n\n            if (start < end) {\n              edgesGl.useProgram(this.edgePrograms[a[i]]);\n              renderer.render(\n                edgesGl,\n                this.edgePrograms[a[i]],\n                arr,\n                {\n                  settings: this.settings,\n                  matrix: matrix,\n                  width: this.width,\n                  height: this.height,\n                  ratio: this.camera.ratio,\n                  scalingRatio: this.settings(\n                    options,\n                    'webglOversamplingRatio'\n                  ),\n                  start: start,\n                  count: end - start,\n                  indicesData: indices\n                }\n              );\n            }\n\n            // Catch job's end:\n            if (\n              end >= arr.length / renderer.ATTRIBUTES &&\n              i === a.length - 1\n            ) {\n              delete this.jobs[id];\n              return false;\n            }\n\n            if (end >= arr.length / renderer.ATTRIBUTES) {\n              i++;\n              arr = this.edgeFloatArrays[a[i]].array;\n              renderer = sigma.webgl.edges[a[i]];\n              start = 0;\n              end = Math.min(\n                start + batchSize * renderer.POINTS,\n                arr.length / renderer.ATTRIBUTES\n              );\n            } else {\n              start = end;\n              end = Math.min(\n                start + batchSize * renderer.POINTS,\n                arr.length / renderer.ATTRIBUTES\n              );\n            }\n\n            return true;\n          };\n\n          this.jobs[id] = job;\n          conrad.addJob(id, job.bind(this));\n        }).call(this);\n      else {\n        for (k in this.edgeFloatArrays) {\n          renderer = sigma.webgl.edges[k];\n\n          // Check program:\n          if (!this.edgePrograms[k])\n            this.edgePrograms[k] = renderer.initProgram(edgesGl);\n\n          // Render\n          if (this.edgeFloatArrays[k]) {\n            edgesGl.useProgram(this.edgePrograms[k]);\n            renderer.render(\n              edgesGl,\n              this.edgePrograms[k],\n              this.edgeFloatArrays[k].array,\n              {\n                settings: this.settings,\n                matrix: matrix,\n                width: this.width,\n                height: this.height,\n                ratio: this.camera.ratio,\n                scalingRatio: this.settings(options, 'webglOversamplingRatio'),\n                indicesData: this.edgeIndicesArrays[k]\n              }\n            );\n          }\n        }\n      }\n    }\n\n    if (drawNodes) {\n      // Enable blending:\n      nodesGl.blendFunc(nodesGl.SRC_ALPHA, nodesGl.ONE_MINUS_SRC_ALPHA);\n      nodesGl.enable(nodesGl.BLEND);\n\n      for (k in this.nodeFloatArrays) {\n        renderer = sigma.webgl.nodes[k];\n\n        // Check program:\n        if (!this.nodePrograms[k])\n          this.nodePrograms[k] = renderer.initProgram(nodesGl);\n\n        // Render\n        if (this.nodeFloatArrays[k]) {\n          nodesGl.useProgram(this.nodePrograms[k]);\n          renderer.render(\n            nodesGl,\n            this.nodePrograms[k],\n            this.nodeFloatArrays[k].array,\n            {\n              settings: this.settings,\n              matrix: matrix,\n              width: this.width,\n              height: this.height,\n              ratio: this.camera.ratio,\n              scalingRatio: this.settings(options, 'webglOversamplingRatio')\n            }\n          );\n        }\n      }\n    }\n\n    a = this.camera.quadtree.area(\n      this.camera.getRectangle(this.width, this.height)\n    );\n\n    // Apply camera view to these nodes:\n    this.camera.applyView(\n      undefined,\n      undefined,\n      {\n        nodes: a,\n        edges: [],\n        width: this.width,\n        height: this.height\n      }\n    );\n\n    if (drawLabels) {\n      o = function(key) {\n        return self.settings({\n          prefix: self.camera.prefix\n        }, key);\n      };\n\n      for (i = 0, l = a.length; i < l; i++)\n        if (!a[i].hidden)\n          (\n            sigma.canvas.labels[\n              a[i].type ||\n              this.settings(options, 'defaultNodeType')\n            ] || sigma.canvas.labels.def\n          )(a[i], this.contexts.labels, o);\n    }\n\n    this.dispatchEvent('render');\n\n    return this;\n  };\n\n\n\n\n  /**\n   * This method creates a DOM element of the specified type, switches its\n   * position to \"absolute\", references it to the domElements attribute, and\n   * finally appends it to the container.\n   *\n   * @param  {string}   tag   The label tag.\n   * @param  {string}   id    The id of the element (to store it in\n   *                          \"domElements\").\n   * @param  {?boolean} webgl Will init the WebGL context if true.\n   */\n  sigma.renderers.webgl.prototype.initDOM = function(tag, id, webgl) {\n    var gl,\n        dom = document.createElement(tag),\n        self = this;\n\n    dom.style.position = 'absolute';\n    dom.setAttribute('class', 'sigma-' + id);\n\n    this.domElements[id] = dom;\n    this.container.appendChild(dom);\n\n    if (tag.toLowerCase() === 'canvas') {\n      this.contexts[id] = dom.getContext(webgl ? 'experimental-webgl' : '2d', {\n        preserveDrawingBuffer: true\n      });\n\n      // Adding webgl context loss listeners\n      if (webgl) {\n        dom.addEventListener('webglcontextlost', function(e) {\n          e.preventDefault();\n        }, false);\n\n        dom.addEventListener('webglcontextrestored', function(e) {\n          self.render();\n        }, false);\n      }\n    }\n  };\n\n  /**\n   * This method resizes each DOM elements in the container and stores the new\n   * dimensions. Then, it renders the graph.\n   *\n   * @param  {?number}               width  The new width of the container.\n   * @param  {?number}               height The new height of the container.\n   * @return {sigma.renderers.webgl}        Returns the instance itself.\n   */\n  sigma.renderers.webgl.prototype.resize = function(w, h) {\n    var k,\n        oldWidth = this.width,\n        oldHeight = this.height,\n        pixelRatio = sigma.utils.getPixelRatio();\n\n    if (w !== undefined && h !== undefined) {\n      this.width = w;\n      this.height = h;\n    } else {\n      this.width = this.container.offsetWidth;\n      this.height = this.container.offsetHeight;\n\n      w = this.width;\n      h = this.height;\n    }\n\n    if (oldWidth !== this.width || oldHeight !== this.height) {\n      for (k in this.domElements) {\n        this.domElements[k].style.width = w + 'px';\n        this.domElements[k].style.height = h + 'px';\n\n        if (this.domElements[k].tagName.toLowerCase() === 'canvas') {\n          // If simple 2D canvas:\n          if (this.contexts[k] && this.contexts[k].scale) {\n            this.domElements[k].setAttribute('width', (w * pixelRatio) + 'px');\n            this.domElements[k].setAttribute('height', (h * pixelRatio) + 'px');\n\n            if (pixelRatio !== 1)\n              this.contexts[k].scale(pixelRatio, pixelRatio);\n          } else {\n            this.domElements[k].setAttribute(\n              'width',\n              (w * this.settings('webglOversamplingRatio')) + 'px'\n            );\n            this.domElements[k].setAttribute(\n              'height',\n              (h * this.settings('webglOversamplingRatio')) + 'px'\n            );\n          }\n        }\n      }\n    }\n\n    // Scale:\n    for (k in this.contexts)\n      if (this.contexts[k] && this.contexts[k].viewport)\n        this.contexts[k].viewport(\n          0,\n          0,\n          this.width * this.settings('webglOversamplingRatio'),\n          this.height * this.settings('webglOversamplingRatio')\n        );\n\n    return this;\n  };\n\n  /**\n   * This method clears each canvas.\n   *\n   * @return {sigma.renderers.webgl} Returns the instance itself.\n   */\n  sigma.renderers.webgl.prototype.clear = function() {\n    this.contexts.labels.clearRect(0, 0, this.width, this.height);\n    this.contexts.nodes.clear(this.contexts.nodes.COLOR_BUFFER_BIT);\n    this.contexts.edges.clear(this.contexts.edges.COLOR_BUFFER_BIT);\n\n    return this;\n  };\n\n  /**\n   * This method kills contexts and other attributes.\n   */\n  sigma.renderers.webgl.prototype.kill = function() {\n    var k,\n        captor;\n\n    // Kill captors:\n    while ((captor = this.captors.pop()))\n      captor.kill();\n    delete this.captors;\n\n    // Kill contexts:\n    for (k in this.domElements) {\n      this.domElements[k].parentNode.removeChild(this.domElements[k]);\n      delete this.domElements[k];\n      delete this.contexts[k];\n    }\n    delete this.domElements;\n    delete this.contexts;\n  };\n\n\n\n\n  /**\n   * The object \"sigma.webgl.nodes\" contains the different WebGL node\n   * renderers. The default one draw nodes as discs. Here are the attributes\n   * any node renderer must have:\n   *\n   * {number}   POINTS      The number of points required to draw a node.\n   * {number}   ATTRIBUTES  The number of attributes needed to draw one point.\n   * {function} addNode     A function that adds a node to the data stack that\n   *                        will be given to the buffer. Here is the arguments:\n   *                        > {object}       node\n   *                        > {number}       index   The node index in the\n   *                                                 nodes array.\n   *                        > {Float32Array} data    The stack.\n   *                        > {object}       options Some options.\n   * {function} render      The function that will effectively render the nodes\n   *                        into the buffer.\n   *                        > {WebGLRenderingContext} gl\n   *                        > {WebGLProgram}          program\n   *                        > {Float32Array} data    The stack to give to the\n   *                                                 buffer.\n   *                        > {object}       params  An object containing some\n   *                                                 options, like width,\n   *                                                 height, the camera ratio.\n   * {function} initProgram The function that will initiate the program, with\n   *                        the relevant shaders and parameters. It must return\n   *                        the newly created program.\n   *\n   * Check sigma.webgl.nodes.def or sigma.webgl.nodes.fast to see how it\n   * works more precisely.\n   */\n  sigma.utils.pkg('sigma.webgl.nodes');\n\n\n\n\n  /**\n   * The object \"sigma.webgl.edges\" contains the different WebGL edge\n   * renderers. The default one draw edges as direct lines. Here are the\n   * attributes any edge renderer must have:\n   *\n   * {number}   POINTS      The number of points required to draw an edge.\n   * {number}   ATTRIBUTES  The number of attributes needed to draw one point.\n   * {function} addEdge     A function that adds an edge to the data stack that\n   *                        will be given to the buffer. Here is the arguments:\n   *                        > {object}       edge\n   *                        > {object}       source\n   *                        > {object}       target\n   *                        > {Float32Array} data    The stack.\n   *                        > {object}       options Some options.\n   * {function} render      The function that will effectively render the edges\n   *                        into the buffer.\n   *                        > {WebGLRenderingContext} gl\n   *                        > {WebGLProgram}          program\n   *                        > {Float32Array} data    The stack to give to the\n   *                                                 buffer.\n   *                        > {object}       params  An object containing some\n   *                                                 options, like width,\n   *                                                 height, the camera ratio.\n   * {function} initProgram The function that will initiate the program, with\n   *                        the relevant shaders and parameters. It must return\n   *                        the newly created program.\n   *\n   * Check sigma.webgl.edges.def or sigma.webgl.edges.fast to see how it\n   * works more precisely.\n   */\n  sigma.utils.pkg('sigma.webgl.edges');\n\n\n\n\n  /**\n   * The object \"sigma.canvas.labels\" contains the different\n   * label renderers for the WebGL renderer. Since displaying texts in WebGL is\n   * definitely painful and since there a way less labels to display than nodes\n   * or edges, the default renderer simply renders them in a canvas.\n   *\n   * A labels renderer is a simple function, taking as arguments the related\n   * node, the renderer and a settings function.\n   */\n  sigma.utils.pkg('sigma.canvas.labels');\n}).call(this);\n\n;(function(undefined) {\n  'use strict';\n\n  if (typeof sigma === 'undefined')\n    throw 'sigma is not declared';\n\n  if (typeof conrad === 'undefined')\n    throw 'conrad is not declared';\n\n  // Initialize packages:\n  sigma.utils.pkg('sigma.renderers');\n\n  /**\n   * This function is the constructor of the svg sigma's renderer.\n   *\n   * @param  {sigma.classes.graph}            graph    The graph to render.\n   * @param  {sigma.classes.camera}           camera   The camera.\n   * @param  {configurable}           settings The sigma instance settings\n   *                                           function.\n   * @param  {object}                 object   The options object.\n   * @return {sigma.renderers.svg}             The renderer instance.\n   */\n  sigma.renderers.svg = function(graph, camera, settings, options) {\n    if (typeof options !== 'object')\n      throw 'sigma.renderers.svg: Wrong arguments.';\n\n    if (!(options.container instanceof HTMLElement))\n      throw 'Container not found.';\n\n    var i,\n        l,\n        a,\n        fn,\n        self = this;\n\n    sigma.classes.dispatcher.extend(this);\n\n    // Initialize main attributes:\n    this.graph = graph;\n    this.camera = camera;\n    this.domElements = {\n      graph: null,\n      groups: {},\n      nodes: {},\n      edges: {},\n      labels: {},\n      hovers: {}\n    };\n    this.measurementCanvas = null;\n    this.options = options;\n    this.container = this.options.container;\n    this.settings = (\n        typeof options.settings === 'object' &&\n        options.settings\n      ) ?\n        settings.embedObjects(options.settings) :\n        settings;\n\n    // Is the renderer meant to be freestyle?\n    this.settings('freeStyle', !!this.options.freeStyle);\n\n    // SVG xmlns\n    this.settings('xmlns', 'http://www.w3.org/2000/svg');\n\n    // Indexes:\n    this.nodesOnScreen = [];\n    this.edgesOnScreen = [];\n\n    // Find the prefix:\n    this.options.prefix = 'renderer' + sigma.utils.id() + ':';\n\n    // Initialize the DOM elements\n    this.initDOM('svg');\n\n    // Initialize captors:\n    this.captors = [];\n    a = this.options.captors || [sigma.captors.mouse, sigma.captors.touch];\n    for (i = 0, l = a.length; i < l; i++) {\n      fn = typeof a[i] === 'function' ? a[i] : sigma.captors[a[i]];\n      this.captors.push(\n        new fn(\n          this.domElements.graph,\n          this.camera,\n          this.settings\n        )\n      );\n    }\n\n    // Bind resize:\n    window.addEventListener('resize', function() {\n      self.resize();\n    });\n\n    // Deal with sigma events:\n    // TODO: keep an option to override the DOM events?\n    sigma.misc.bindDOMEvents.call(this, this.domElements.graph);\n    this.bindHovers(this.options.prefix);\n\n    // Resize\n    this.resize(false);\n  };\n\n  /**\n   * This method renders the graph on the svg scene.\n   *\n   * @param  {?object}                options Eventually an object of options.\n   * @return {sigma.renderers.svg}            Returns the instance itself.\n   */\n  sigma.renderers.svg.prototype.render = function(options) {\n    options = options || {};\n\n    var a,\n        i,\n        k,\n        e,\n        l,\n        o,\n        source,\n        target,\n        start,\n        edges,\n        renderers,\n        subrenderers,\n        index = {},\n        graph = this.graph,\n        nodes = this.graph.nodes,\n        prefix = this.options.prefix || '',\n        drawEdges = this.settings(options, 'drawEdges'),\n        drawNodes = this.settings(options, 'drawNodes'),\n        drawLabels = this.settings(options, 'drawLabels'),\n        embedSettings = this.settings.embedObjects(options, {\n          prefix: this.options.prefix,\n          forceLabels: this.options.forceLabels\n        });\n\n    // Check the 'hideEdgesOnMove' setting:\n    if (this.settings(options, 'hideEdgesOnMove'))\n      if (this.camera.isAnimated || this.camera.isMoving)\n        drawEdges = false;\n\n    // Apply the camera's view:\n    this.camera.applyView(\n      undefined,\n      this.options.prefix,\n      {\n        width: this.width,\n        height: this.height\n      }\n    );\n\n    // Hiding everything\n    // TODO: find a more sensible way to perform this operation\n    this.hideDOMElements(this.domElements.nodes);\n    this.hideDOMElements(this.domElements.edges);\n    this.hideDOMElements(this.domElements.labels);\n\n    // Find which nodes are on screen\n    this.edgesOnScreen = [];\n    this.nodesOnScreen = this.camera.quadtree.area(\n      this.camera.getRectangle(this.width, this.height)\n    );\n\n    // Node index\n    for (a = this.nodesOnScreen, i = 0, l = a.length; i < l; i++)\n      index[a[i].id] = a[i];\n\n    // Find which edges are on screen\n    for (a = graph.edges(), i = 0, l = a.length; i < l; i++) {\n      o = a[i];\n      if (\n        (index[o.source] || index[o.target]) &&\n        (!o.hidden && !nodes(o.source).hidden && !nodes(o.target).hidden)\n      )\n        this.edgesOnScreen.push(o);\n    }\n\n    // Display nodes\n    //---------------\n    renderers = sigma.svg.nodes;\n    subrenderers = sigma.svg.labels;\n\n    //-- First we create the nodes which are not already created\n    if (drawNodes)\n      for (a = this.nodesOnScreen, i = 0, l = a.length; i < l; i++) {\n        if (!a[i].hidden && !this.domElements.nodes[a[i].id]) {\n\n          // Node\n          e = (renderers[a[i].type] || renderers.def).create(\n            a[i],\n            embedSettings\n          );\n\n          this.domElements.nodes[a[i].id] = e;\n          this.domElements.groups.nodes.appendChild(e);\n\n          // Label\n          e = (subrenderers[a[i].type] || subrenderers.def).create(\n            a[i],\n            embedSettings\n          );\n\n          this.domElements.labels[a[i].id] = e;\n          this.domElements.groups.labels.appendChild(e);\n        }\n      }\n\n    //-- Second we update the nodes\n    if (drawNodes)\n      for (a = this.nodesOnScreen, i = 0, l = a.length; i < l; i++) {\n\n        if (a[i].hidden)\n          continue;\n\n        // Node\n        (renderers[a[i].type] || renderers.def).update(\n          a[i],\n          this.domElements.nodes[a[i].id],\n          embedSettings\n        );\n\n        // Label\n        (subrenderers[a[i].type] || subrenderers.def).update(\n          a[i],\n          this.domElements.labels[a[i].id],\n          embedSettings\n        );\n      }\n\n    // Display edges\n    //---------------\n    renderers = sigma.svg.edges;\n\n    //-- First we create the edges which are not already created\n    if (drawEdges)\n      for (a = this.edgesOnScreen, i = 0, l = a.length; i < l; i++) {\n        if (!this.domElements.edges[a[i].id]) {\n          source = nodes(a[i].source);\n          target = nodes(a[i].target);\n\n          e = (renderers[a[i].type] || renderers.def).create(\n            a[i],\n            source,\n            target,\n            embedSettings\n          );\n\n          this.domElements.edges[a[i].id] = e;\n          this.domElements.groups.edges.appendChild(e);\n        }\n       }\n\n    //-- Second we update the edges\n    if (drawEdges)\n      for (a = this.edgesOnScreen, i = 0, l = a.length; i < l; i++) {\n        source = nodes(a[i].source);\n        target = nodes(a[i].target);\n\n        (renderers[a[i].type] || renderers.def).update(\n          a[i],\n          this.domElements.edges[a[i].id],\n          source,\n          target,\n          embedSettings\n        );\n       }\n\n    this.dispatchEvent('render');\n\n    return this;\n  };\n\n  /**\n   * This method creates a DOM element of the specified type, switches its\n   * position to \"absolute\", references it to the domElements attribute, and\n   * finally appends it to the container.\n   *\n   * @param  {string} tag The label tag.\n   * @param  {string} id  The id of the element (to store it in \"domElements\").\n   */\n  sigma.renderers.svg.prototype.initDOM = function(tag) {\n    var dom = document.createElementNS(this.settings('xmlns'), tag),\n        c = this.settings('classPrefix'),\n        g,\n        l,\n        i;\n\n    dom.style.position = 'absolute';\n    dom.setAttribute('class', c + '-svg');\n\n    // Setting SVG namespace\n    dom.setAttribute('xmlns', this.settings('xmlns'));\n    dom.setAttribute('xmlns:xlink', 'http://www.w3.org/1999/xlink');\n    dom.setAttribute('version', '1.1');\n\n    // Creating the measurement canvas\n    var canvas = document.createElement('canvas');\n    canvas.setAttribute('class', c + '-measurement-canvas');\n\n    // Appending elements\n    this.domElements.graph = this.container.appendChild(dom);\n\n    // Creating groups\n    var groups = ['edges', 'nodes', 'labels', 'hovers'];\n    for (i = 0, l = groups.length; i < l; i++) {\n      g = document.createElementNS(this.settings('xmlns'), 'g');\n\n      g.setAttributeNS(null, 'id', c + '-group-' + groups[i]);\n      g.setAttributeNS(null, 'class', c + '-group');\n\n      this.domElements.groups[groups[i]] =\n        this.domElements.graph.appendChild(g);\n    }\n\n    // Appending measurement canvas\n    this.container.appendChild(canvas);\n    this.measurementCanvas = canvas.getContext('2d');\n  };\n\n  /**\n   * This method hides a batch of SVG DOM elements.\n   *\n   * @param  {array}                  elements  An array of elements to hide.\n   * @param  {object}                 renderer  The renderer to use.\n   * @return {sigma.renderers.svg}              Returns the instance itself.\n   */\n  sigma.renderers.svg.prototype.hideDOMElements = function(elements) {\n    var o,\n        i;\n\n    for (i in elements) {\n      o = elements[i];\n      sigma.svg.utils.hide(o);\n    }\n\n    return this;\n  };\n\n  /**\n   * This method binds the hover events to the renderer.\n   *\n   * @param  {string} prefix The renderer prefix.\n   */\n  // TODO: add option about whether to display hovers or not\n  sigma.renderers.svg.prototype.bindHovers = function(prefix) {\n    var renderers = sigma.svg.hovers,\n        self = this,\n        hoveredNode;\n\n    function overNode(e) {\n      var node = e.data.node,\n          embedSettings = self.settings.embedObjects({\n            prefix: prefix\n          });\n\n      if (!embedSettings('enableHovering'))\n        return;\n\n      var hover = (renderers[node.type] || renderers.def).create(\n        node,\n        self.domElements.nodes[node.id],\n        self.measurementCanvas,\n        embedSettings\n      );\n\n      self.domElements.hovers[node.id] = hover;\n\n      // Inserting the hover in the dom\n      self.domElements.groups.hovers.appendChild(hover);\n      hoveredNode = node;\n    }\n\n    function outNode(e) {\n      var node = e.data.node,\n          embedSettings = self.settings.embedObjects({\n            prefix: prefix\n          });\n\n      if (!embedSettings('enableHovering'))\n        return;\n\n      // Deleting element\n      self.domElements.groups.hovers.removeChild(\n        self.domElements.hovers[node.id]\n      );\n      hoveredNode = null;\n      delete self.domElements.hovers[node.id];\n\n      // Reinstate\n      self.domElements.groups.nodes.appendChild(\n        self.domElements.nodes[node.id]\n      );\n    }\n\n    // OPTIMIZE: perform a real update rather than a deletion\n    function update() {\n      if (!hoveredNode)\n        return;\n\n      var embedSettings = self.settings.embedObjects({\n            prefix: prefix\n          });\n\n      // Deleting element before update\n      self.domElements.groups.hovers.removeChild(\n        self.domElements.hovers[hoveredNode.id]\n      );\n      delete self.domElements.hovers[hoveredNode.id];\n\n      var hover = (renderers[hoveredNode.type] || renderers.def).create(\n        hoveredNode,\n        self.domElements.nodes[hoveredNode.id],\n        self.measurementCanvas,\n        embedSettings\n      );\n\n      self.domElements.hovers[hoveredNode.id] = hover;\n\n      // Inserting the hover in the dom\n      self.domElements.groups.hovers.appendChild(hover);\n    }\n\n    // Binding events\n    this.bind('overNode', overNode);\n    this.bind('outNode', outNode);\n\n    // Update on render\n    this.bind('render', update);\n  };\n\n  /**\n   * This method resizes each DOM elements in the container and stores the new\n   * dimensions. Then, it renders the graph.\n   *\n   * @param  {?number}                width  The new width of the container.\n   * @param  {?number}                height The new height of the container.\n   * @return {sigma.renderers.svg}           Returns the instance itself.\n   */\n  sigma.renderers.svg.prototype.resize = function(w, h) {\n    var oldWidth = this.width,\n        oldHeight = this.height,\n        pixelRatio = 1;\n\n    if (w !== undefined && h !== undefined) {\n      this.width = w;\n      this.height = h;\n    } else {\n      this.width = this.container.offsetWidth;\n      this.height = this.container.offsetHeight;\n\n      w = this.width;\n      h = this.height;\n    }\n\n    if (oldWidth !== this.width || oldHeight !== this.height) {\n      this.domElements.graph.style.width = w + 'px';\n      this.domElements.graph.style.height = h + 'px';\n\n      if (this.domElements.graph.tagName.toLowerCase() === 'svg') {\n        this.domElements.graph.setAttribute('width', (w * pixelRatio));\n        this.domElements.graph.setAttribute('height', (h * pixelRatio));\n      }\n    }\n\n    return this;\n  };\n\n\n  /**\n   * The labels, nodes and edges renderers are stored in the three following\n   * objects. When an element is drawn, its type will be checked and if a\n   * renderer with the same name exists, it will be used. If not found, the\n   * default renderer will be used instead.\n   *\n   * They are stored in different files, in the \"./svg\" folder.\n   */\n  sigma.utils.pkg('sigma.svg.nodes');\n  sigma.utils.pkg('sigma.svg.edges');\n  sigma.utils.pkg('sigma.svg.labels');\n}).call(this);\n\n;(function(global) {\n  'use strict';\n\n  if (typeof sigma === 'undefined')\n    throw 'sigma is not declared';\n\n  // Initialize packages:\n  sigma.utils.pkg('sigma.renderers');\n\n  // Check if WebGL is enabled:\n  var canvas,\n      webgl = !!global.WebGLRenderingContext;\n  if (webgl) {\n    canvas = document.createElement('canvas');\n    try {\n      webgl = !!(\n        canvas.getContext('webgl') ||\n        canvas.getContext('experimental-webgl')\n      );\n    } catch (e) {\n      webgl = false;\n    }\n  }\n\n  // Copy the good renderer:\n  sigma.renderers.def = webgl ?\n    sigma.renderers.webgl :\n    sigma.renderers.canvas;\n})(this);\n\n;(function() {\n  'use strict';\n\n  sigma.utils.pkg('sigma.webgl.nodes');\n\n  /**\n   * This node renderer will display nodes as discs, shaped in triangles with\n   * the gl.TRIANGLES display mode. So, to be more precise, to draw one node,\n   * it will store three times the center of node, with the color and the size,\n   * and an angle indicating which \"corner\" of the triangle to draw.\n   *\n   * The fragment shader does not deal with anti-aliasing, so make sure that\n   * you deal with it somewhere else in the code (by default, the WebGL\n   * renderer will oversample the rendering through the webglOversamplingRatio\n   * value).\n   */\n  sigma.webgl.nodes.def = {\n    POINTS: 3,\n    ATTRIBUTES: 5,\n    addNode: function(node, data, i, prefix, settings) {\n      var color = sigma.utils.floatColor(\n        node.color || settings('defaultNodeColor')\n      );\n\n      data[i++] = node[prefix + 'x'];\n      data[i++] = node[prefix + 'y'];\n      data[i++] = node[prefix + 'size'];\n      data[i++] = color;\n      data[i++] = 0;\n\n      data[i++] = node[prefix + 'x'];\n      data[i++] = node[prefix + 'y'];\n      data[i++] = node[prefix + 'size'];\n      data[i++] = color;\n      data[i++] = 2 * Math.PI / 3;\n\n      data[i++] = node[prefix + 'x'];\n      data[i++] = node[prefix + 'y'];\n      data[i++] = node[prefix + 'size'];\n      data[i++] = color;\n      data[i++] = 4 * Math.PI / 3;\n    },\n    render: function(gl, program, data, params) {\n      var buffer;\n\n      // Define attributes:\n      var positionLocation =\n            gl.getAttribLocation(program, 'a_position'),\n          sizeLocation =\n            gl.getAttribLocation(program, 'a_size'),\n          colorLocation =\n            gl.getAttribLocation(program, 'a_color'),\n          angleLocation =\n            gl.getAttribLocation(program, 'a_angle'),\n          resolutionLocation =\n            gl.getUniformLocation(program, 'u_resolution'),\n          matrixLocation =\n            gl.getUniformLocation(program, 'u_matrix'),\n          ratioLocation =\n            gl.getUniformLocation(program, 'u_ratio'),\n          scaleLocation =\n            gl.getUniformLocation(program, 'u_scale');\n\n      buffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n      gl.bufferData(gl.ARRAY_BUFFER, data, gl.DYNAMIC_DRAW);\n\n      gl.uniform2f(resolutionLocation, params.width, params.height);\n      gl.uniform1f(\n        ratioLocation,\n        1 / Math.pow(params.ratio, params.settings('nodesPowRatio'))\n      );\n      gl.uniform1f(scaleLocation, params.scalingRatio);\n      gl.uniformMatrix3fv(matrixLocation, false, params.matrix);\n\n      gl.enableVertexAttribArray(positionLocation);\n      gl.enableVertexAttribArray(sizeLocation);\n      gl.enableVertexAttribArray(colorLocation);\n      gl.enableVertexAttribArray(angleLocation);\n\n      gl.vertexAttribPointer(\n        positionLocation,\n        2,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        0\n      );\n      gl.vertexAttribPointer(\n        sizeLocation,\n        1,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        8\n      );\n      gl.vertexAttribPointer(\n        colorLocation,\n        1,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        12\n      );\n      gl.vertexAttribPointer(\n        angleLocation,\n        1,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        16\n      );\n\n      gl.drawArrays(\n        gl.TRIANGLES,\n        params.start || 0,\n        params.count || (data.length / this.ATTRIBUTES)\n      );\n    },\n    initProgram: function(gl) {\n      var vertexShader,\n          fragmentShader,\n          program;\n\n      vertexShader = sigma.utils.loadShader(\n        gl,\n        [\n          'attribute vec2 a_position;',\n          'attribute float a_size;',\n          'attribute float a_color;',\n          'attribute float a_angle;',\n\n          'uniform vec2 u_resolution;',\n          'uniform float u_ratio;',\n          'uniform float u_scale;',\n          'uniform mat3 u_matrix;',\n\n          'varying vec4 color;',\n          'varying vec2 center;',\n          'varying float radius;',\n\n          'void main() {',\n            // Multiply the point size twice:\n            'radius = a_size * u_ratio;',\n\n            // Scale from [[-1 1] [-1 1]] to the container:\n            'vec2 position = (u_matrix * vec3(a_position, 1)).xy;',\n            // 'center = (position / u_resolution * 2.0 - 1.0) * vec2(1, -1);',\n            'center = position * u_scale;',\n            'center = vec2(center.x, u_scale * u_resolution.y - center.y);',\n\n            'position = position +',\n              '2.0 * radius * vec2(cos(a_angle), sin(a_angle));',\n            'position = (position / u_resolution * 2.0 - 1.0) * vec2(1, -1);',\n\n            'radius = radius * u_scale;',\n\n            'gl_Position = vec4(position, 0, 1);',\n\n            // Extract the color:\n            'float c = a_color;',\n            'color.b = mod(c, 256.0); c = floor(c / 256.0);',\n            'color.g = mod(c, 256.0); c = floor(c / 256.0);',\n            'color.r = mod(c, 256.0); c = floor(c / 256.0); color /= 255.0;',\n            'color.a = 1.0;',\n          '}'\n        ].join('\\n'),\n        gl.VERTEX_SHADER\n      );\n\n      fragmentShader = sigma.utils.loadShader(\n        gl,\n        [\n          'precision mediump float;',\n\n          'varying vec4 color;',\n          'varying vec2 center;',\n          'varying float radius;',\n\n          'void main(void) {',\n            'vec4 color0 = vec4(0.0, 0.0, 0.0, 0.0);',\n\n            'vec2 m = gl_FragCoord.xy - center;',\n            'float diff = radius - sqrt(m.x * m.x + m.y * m.y);',\n\n            // Here is how we draw a disc instead of a square:\n            'if (diff > 0.0)',\n              'gl_FragColor = color;',\n            'else',\n              'gl_FragColor = color0;',\n          '}'\n        ].join('\\n'),\n        gl.FRAGMENT_SHADER\n      );\n\n      program = sigma.utils.loadProgram(gl, [vertexShader, fragmentShader]);\n\n      return program;\n    }\n  };\n})();\n\n;(function() {\n  'use strict';\n\n  sigma.utils.pkg('sigma.webgl.nodes');\n\n  /**\n   * This node renderer will display nodes in the fastest way: Nodes are basic\n   * squares, drawn through the gl.POINTS drawing method. The size of the nodes\n   * are represented with the \"gl_PointSize\" value in the vertex shader.\n   *\n   * It is the fastest node renderer here since the buffer just takes one line\n   * to draw each node (with attributes \"x\", \"y\", \"size\" and \"color\").\n   *\n   * Nevertheless, this method has some problems, especially due to some issues\n   * with the gl.POINTS:\n   *  - First, if the center of a node is outside the scene, the point will not\n   *    be drawn, even if it should be partly on screen.\n   *  - I tried applying a fragment shader similar to the one in the default\n   *    node renderer to display them as discs, but it did not work fine on\n   *    some computers settings, filling the discs with weird gradients not\n   *    depending on the actual color.\n   */\n  sigma.webgl.nodes.fast = {\n    POINTS: 1,\n    ATTRIBUTES: 4,\n    addNode: function(node, data, i, prefix, settings) {\n      data[i++] = node[prefix + 'x'];\n      data[i++] = node[prefix + 'y'];\n      data[i++] = node[prefix + 'size'];\n      data[i++] = sigma.utils.floatColor(\n        node.color || settings('defaultNodeColor')\n      );\n    },\n    render: function(gl, program, data, params) {\n      var buffer;\n\n      // Define attributes:\n      var positionLocation =\n            gl.getAttribLocation(program, 'a_position'),\n          sizeLocation =\n            gl.getAttribLocation(program, 'a_size'),\n          colorLocation =\n            gl.getAttribLocation(program, 'a_color'),\n          resolutionLocation =\n            gl.getUniformLocation(program, 'u_resolution'),\n          matrixLocation =\n            gl.getUniformLocation(program, 'u_matrix'),\n          ratioLocation =\n            gl.getUniformLocation(program, 'u_ratio'),\n          scaleLocation =\n            gl.getUniformLocation(program, 'u_scale');\n\n      buffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n      gl.bufferData(gl.ARRAY_BUFFER, data, gl.DYNAMIC_DRAW);\n\n      gl.uniform2f(resolutionLocation, params.width, params.height);\n      gl.uniform1f(\n        ratioLocation,\n        1 / Math.pow(params.ratio, params.settings('nodesPowRatio'))\n      );\n      gl.uniform1f(scaleLocation, params.scalingRatio);\n      gl.uniformMatrix3fv(matrixLocation, false, params.matrix);\n\n      gl.enableVertexAttribArray(positionLocation);\n      gl.enableVertexAttribArray(sizeLocation);\n      gl.enableVertexAttribArray(colorLocation);\n\n      gl.vertexAttribPointer(\n        positionLocation,\n        2,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        0\n      );\n      gl.vertexAttribPointer(\n        sizeLocation,\n        1,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        8\n      );\n      gl.vertexAttribPointer(\n        colorLocation,\n        1,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        12\n      );\n\n      gl.drawArrays(\n        gl.POINTS,\n        params.start || 0,\n        params.count || (data.length / this.ATTRIBUTES)\n      );\n    },\n    initProgram: function(gl) {\n      var vertexShader,\n          fragmentShader,\n          program;\n\n      vertexShader = sigma.utils.loadShader(\n        gl,\n        [\n          'attribute vec2 a_position;',\n          'attribute float a_size;',\n          'attribute float a_color;',\n\n          'uniform vec2 u_resolution;',\n          'uniform float u_ratio;',\n          'uniform float u_scale;',\n          'uniform mat3 u_matrix;',\n\n          'varying vec4 color;',\n\n          'void main() {',\n            // Scale from [[-1 1] [-1 1]] to the container:\n            'gl_Position = vec4(',\n              '((u_matrix * vec3(a_position, 1)).xy /',\n                'u_resolution * 2.0 - 1.0) * vec2(1, -1),',\n              '0,',\n              '1',\n            ');',\n\n            // Multiply the point size twice:\n            //  - x SCALING_RATIO to correct the canvas scaling\n            //  - x 2 to correct the formulae\n            'gl_PointSize = a_size * u_ratio * u_scale * 2.0;',\n\n            // Extract the color:\n            'float c = a_color;',\n            'color.b = mod(c, 256.0); c = floor(c / 256.0);',\n            'color.g = mod(c, 256.0); c = floor(c / 256.0);',\n            'color.r = mod(c, 256.0); c = floor(c / 256.0); color /= 255.0;',\n            'color.a = 1.0;',\n          '}'\n        ].join('\\n'),\n        gl.VERTEX_SHADER\n      );\n\n      fragmentShader = sigma.utils.loadShader(\n        gl,\n        [\n          'precision mediump float;',\n\n          'varying vec4 color;',\n\n          'void main(void) {',\n            'float border = 0.01;',\n            'float radius = 0.5;',\n\n            'vec4 color0 = vec4(0.0, 0.0, 0.0, 0.0);',\n            'vec2 m = gl_PointCoord - vec2(0.5, 0.5);',\n            'float dist = radius - sqrt(m.x * m.x + m.y * m.y);',\n\n            'float t = 0.0;',\n            'if (dist > border)',\n              't = 1.0;',\n            'else if (dist > 0.0)',\n              't = dist / border;',\n\n            'gl_FragColor = mix(color0, color, t);',\n          '}'\n        ].join('\\n'),\n        gl.FRAGMENT_SHADER\n      );\n\n      program = sigma.utils.loadProgram(gl, [vertexShader, fragmentShader]);\n\n      return program;\n    }\n  };\n})();\n\n;(function() {\n  'use strict';\n\n  sigma.utils.pkg('sigma.webgl.edges');\n\n  /**\n   * This edge renderer will display edges as lines going from the source node\n   * to the target node. To deal with edge thicknesses, the lines are made of\n   * two triangles forming rectangles, with the gl.TRIANGLES drawing mode.\n   *\n   * It is expensive, since drawing a single edge requires 6 points, each\n   * having 7 attributes (source position, target position, thickness, color\n   * and a flag indicating which vertice of the rectangle it is).\n   */\n  sigma.webgl.edges.def = {\n    POINTS: 6,\n    ATTRIBUTES: 7,\n    addEdge: function(edge, source, target, data, i, prefix, settings) {\n      var w = (edge[prefix + 'size'] || 1) / 2,\n          x1 = source[prefix + 'x'],\n          y1 = source[prefix + 'y'],\n          x2 = target[prefix + 'x'],\n          y2 = target[prefix + 'y'],\n          color = edge.color;\n\n      if (!color)\n        switch (settings('edgeColor')) {\n          case 'source':\n            color = source.color || settings('defaultNodeColor');\n            break;\n          case 'target':\n            color = target.color || settings('defaultNodeColor');\n            break;\n          default:\n            color = settings('defaultEdgeColor');\n            break;\n        }\n\n      // Normalize color:\n      color = sigma.utils.floatColor(color);\n\n      data[i++] = x1;\n      data[i++] = y1;\n      data[i++] = x2;\n      data[i++] = y2;\n      data[i++] = w;\n      data[i++] = 0.0;\n      data[i++] = color;\n\n      data[i++] = x2;\n      data[i++] = y2;\n      data[i++] = x1;\n      data[i++] = y1;\n      data[i++] = w;\n      data[i++] = 1.0;\n      data[i++] = color;\n\n      data[i++] = x2;\n      data[i++] = y2;\n      data[i++] = x1;\n      data[i++] = y1;\n      data[i++] = w;\n      data[i++] = 0.0;\n      data[i++] = color;\n\n      data[i++] = x2;\n      data[i++] = y2;\n      data[i++] = x1;\n      data[i++] = y1;\n      data[i++] = w;\n      data[i++] = 0.0;\n      data[i++] = color;\n\n      data[i++] = x1;\n      data[i++] = y1;\n      data[i++] = x2;\n      data[i++] = y2;\n      data[i++] = w;\n      data[i++] = 1.0;\n      data[i++] = color;\n\n      data[i++] = x1;\n      data[i++] = y1;\n      data[i++] = x2;\n      data[i++] = y2;\n      data[i++] = w;\n      data[i++] = 0.0;\n      data[i++] = color;\n    },\n    render: function(gl, program, data, params) {\n      var buffer;\n\n      // Define attributes:\n      var colorLocation =\n            gl.getAttribLocation(program, 'a_color'),\n          positionLocation1 =\n            gl.getAttribLocation(program, 'a_position1'),\n          positionLocation2 =\n            gl.getAttribLocation(program, 'a_position2'),\n          thicknessLocation =\n            gl.getAttribLocation(program, 'a_thickness'),\n          minusLocation =\n            gl.getAttribLocation(program, 'a_minus'),\n          resolutionLocation =\n            gl.getUniformLocation(program, 'u_resolution'),\n          matrixLocation =\n            gl.getUniformLocation(program, 'u_matrix'),\n          matrixHalfPiLocation =\n            gl.getUniformLocation(program, 'u_matrixHalfPi'),\n          matrixHalfPiMinusLocation =\n            gl.getUniformLocation(program, 'u_matrixHalfPiMinus'),\n          ratioLocation =\n            gl.getUniformLocation(program, 'u_ratio'),\n          scaleLocation =\n            gl.getUniformLocation(program, 'u_scale');\n\n      buffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n      gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n\n      gl.uniform2f(resolutionLocation, params.width, params.height);\n      gl.uniform1f(\n        ratioLocation,\n        params.ratio / Math.pow(params.ratio, params.settings('edgesPowRatio'))\n      );\n      gl.uniform1f(scaleLocation, params.scalingRatio);\n      gl.uniformMatrix3fv(matrixLocation, false, params.matrix);\n      gl.uniformMatrix2fv(\n        matrixHalfPiLocation,\n        false,\n        sigma.utils.matrices.rotation(Math.PI / 2, true)\n      );\n      gl.uniformMatrix2fv(\n        matrixHalfPiMinusLocation,\n        false,\n        sigma.utils.matrices.rotation(-Math.PI / 2, true)\n      );\n\n      gl.enableVertexAttribArray(colorLocation);\n      gl.enableVertexAttribArray(positionLocation1);\n      gl.enableVertexAttribArray(positionLocation2);\n      gl.enableVertexAttribArray(thicknessLocation);\n      gl.enableVertexAttribArray(minusLocation);\n\n      gl.vertexAttribPointer(positionLocation1,\n        2,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        0\n      );\n      gl.vertexAttribPointer(positionLocation2,\n        2,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        8\n      );\n      gl.vertexAttribPointer(thicknessLocation,\n        1,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        16\n      );\n      gl.vertexAttribPointer(minusLocation,\n        1,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        20\n      );\n      gl.vertexAttribPointer(colorLocation,\n        1,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        24\n      );\n\n      gl.drawArrays(\n        gl.TRIANGLES,\n        params.start || 0,\n        params.count || (data.length / this.ATTRIBUTES)\n      );\n    },\n    initProgram: function(gl) {\n      var vertexShader,\n          fragmentShader,\n          program;\n\n      vertexShader = sigma.utils.loadShader(\n        gl,\n        [\n          'attribute vec2 a_position1;',\n          'attribute vec2 a_position2;',\n          'attribute float a_thickness;',\n          'attribute float a_minus;',\n          'attribute float a_color;',\n\n          'uniform vec2 u_resolution;',\n          'uniform float u_ratio;',\n          'uniform float u_scale;',\n          'uniform mat3 u_matrix;',\n          'uniform mat2 u_matrixHalfPi;',\n          'uniform mat2 u_matrixHalfPiMinus;',\n\n          'varying vec4 color;',\n\n          'void main() {',\n            // Find the good point:\n            'vec2 position = a_thickness * u_ratio *',\n              'normalize(a_position2 - a_position1);',\n\n            'mat2 matrix = a_minus * u_matrixHalfPiMinus +',\n              '(1.0 - a_minus) * u_matrixHalfPi;',\n\n            'position = matrix * position + a_position1;',\n\n            // Scale from [[-1 1] [-1 1]] to the container:\n            'gl_Position = vec4(',\n              '((u_matrix * vec3(position, 1)).xy /',\n                'u_resolution * 2.0 - 1.0) * vec2(1, -1),',\n              '0,',\n              '1',\n            ');',\n\n            // Extract the color:\n            'float c = a_color;',\n            'color.b = mod(c, 256.0); c = floor(c / 256.0);',\n            'color.g = mod(c, 256.0); c = floor(c / 256.0);',\n            'color.r = mod(c, 256.0); c = floor(c / 256.0); color /= 255.0;',\n            'color.a = 1.0;',\n          '}'\n        ].join('\\n'),\n        gl.VERTEX_SHADER\n      );\n\n      fragmentShader = sigma.utils.loadShader(\n        gl,\n        [\n          'precision mediump float;',\n\n          'varying vec4 color;',\n\n          'void main(void) {',\n            'gl_FragColor = color;',\n          '}'\n        ].join('\\n'),\n        gl.FRAGMENT_SHADER\n      );\n\n      program = sigma.utils.loadProgram(gl, [vertexShader, fragmentShader]);\n\n      return program;\n    }\n  };\n})();\n\n;(function() {\n  'use strict';\n\n  sigma.utils.pkg('sigma.webgl.edges');\n\n  /**\n   * This edge renderer will display edges as lines with the gl.LINES display\n   * mode. Since this mode does not support well thickness, edges are all drawn\n   * with the same thickness (3px), independantly of the edge attributes or the\n   * zooming ratio.\n   */\n  sigma.webgl.edges.fast = {\n    POINTS: 2,\n    ATTRIBUTES: 3,\n    addEdge: function(edge, source, target, data, i, prefix, settings) {\n      var w = (edge[prefix + 'size'] || 1) / 2,\n          x1 = source[prefix + 'x'],\n          y1 = source[prefix + 'y'],\n          x2 = target[prefix + 'x'],\n          y2 = target[prefix + 'y'],\n          color = edge.color;\n\n      if (!color)\n        switch (settings('edgeColor')) {\n          case 'source':\n            color = source.color || settings('defaultNodeColor');\n            break;\n          case 'target':\n            color = target.color || settings('defaultNodeColor');\n            break;\n          default:\n            color = settings('defaultEdgeColor');\n            break;\n        }\n\n      // Normalize color:\n      color = sigma.utils.floatColor(color);\n\n      data[i++] = x1;\n      data[i++] = y1;\n      data[i++] = color;\n\n      data[i++] = x2;\n      data[i++] = y2;\n      data[i++] = color;\n    },\n    render: function(gl, program, data, params) {\n      var buffer;\n\n      // Define attributes:\n      var colorLocation =\n            gl.getAttribLocation(program, 'a_color'),\n          positionLocation =\n            gl.getAttribLocation(program, 'a_position'),\n          resolutionLocation =\n            gl.getUniformLocation(program, 'u_resolution'),\n          matrixLocation =\n            gl.getUniformLocation(program, 'u_matrix');\n\n      buffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n      gl.bufferData(gl.ARRAY_BUFFER, data, gl.DYNAMIC_DRAW);\n\n      gl.uniform2f(resolutionLocation, params.width, params.height);\n      gl.uniformMatrix3fv(matrixLocation, false, params.matrix);\n\n      gl.enableVertexAttribArray(positionLocation);\n      gl.enableVertexAttribArray(colorLocation);\n\n      gl.vertexAttribPointer(positionLocation,\n        2,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        0\n      );\n      gl.vertexAttribPointer(colorLocation,\n        1,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        8\n      );\n\n      gl.lineWidth(3);\n      gl.drawArrays(\n        gl.LINES,\n        params.start || 0,\n        params.count || (data.length / this.ATTRIBUTES)\n      );\n    },\n    initProgram: function(gl) {\n      var vertexShader,\n          fragmentShader,\n          program;\n\n      vertexShader = sigma.utils.loadShader(\n        gl,\n        [\n          'attribute vec2 a_position;',\n          'attribute float a_color;',\n\n          'uniform vec2 u_resolution;',\n          'uniform mat3 u_matrix;',\n\n          'varying vec4 color;',\n\n          'void main() {',\n            // Scale from [[-1 1] [-1 1]] to the container:\n            'gl_Position = vec4(',\n              '((u_matrix * vec3(a_position, 1)).xy /',\n                'u_resolution * 2.0 - 1.0) * vec2(1, -1),',\n              '0,',\n              '1',\n            ');',\n\n            // Extract the color:\n            'float c = a_color;',\n            'color.b = mod(c, 256.0); c = floor(c / 256.0);',\n            'color.g = mod(c, 256.0); c = floor(c / 256.0);',\n            'color.r = mod(c, 256.0); c = floor(c / 256.0); color /= 255.0;',\n            'color.a = 1.0;',\n          '}'\n        ].join('\\n'),\n        gl.VERTEX_SHADER\n      );\n\n      fragmentShader = sigma.utils.loadShader(\n        gl,\n        [\n          'precision mediump float;',\n\n          'varying vec4 color;',\n\n          'void main(void) {',\n            'gl_FragColor = color;',\n          '}'\n        ].join('\\n'),\n        gl.FRAGMENT_SHADER\n      );\n\n      program = sigma.utils.loadProgram(gl, [vertexShader, fragmentShader]);\n\n      return program;\n    }\n  };\n})();\n\n;(function() {\n  'use strict';\n\n  sigma.utils.pkg('sigma.webgl.edges');\n\n  /**\n   * This edge renderer will display edges as arrows going from the source node\n   * to the target node. To deal with edge thicknesses, the lines are made of\n   * three triangles: two forming rectangles, with the gl.TRIANGLES drawing\n   * mode.\n   *\n   * It is expensive, since drawing a single edge requires 9 points, each\n   * having a lot of attributes.\n   */\n  sigma.webgl.edges.arrow = {\n    POINTS: 9,\n    ATTRIBUTES: 11,\n    addEdge: function(edge, source, target, data, i, prefix, settings) {\n      var w = (edge[prefix + 'size'] || 1) / 2,\n          x1 = source[prefix + 'x'],\n          y1 = source[prefix + 'y'],\n          x2 = target[prefix + 'x'],\n          y2 = target[prefix + 'y'],\n          targetSize = target[prefix + 'size'],\n          color = edge.color;\n\n      if (!color)\n        switch (settings('edgeColor')) {\n          case 'source':\n            color = source.color || settings('defaultNodeColor');\n            break;\n          case 'target':\n            color = target.color || settings('defaultNodeColor');\n            break;\n          default:\n            color = settings('defaultEdgeColor');\n            break;\n        }\n\n      // Normalize color:\n      color = sigma.utils.floatColor(color);\n\n      data[i++] = x1;\n      data[i++] = y1;\n      data[i++] = x2;\n      data[i++] = y2;\n      data[i++] = w;\n      data[i++] = targetSize;\n      data[i++] = 0.0;\n      data[i++] = 0.0;\n      data[i++] = 0.0;\n      data[i++] = 0.0;\n      data[i++] = color;\n\n      data[i++] = x2;\n      data[i++] = y2;\n      data[i++] = x1;\n      data[i++] = y1;\n      data[i++] = w;\n      data[i++] = targetSize;\n      data[i++] = 1.0;\n      data[i++] = 1.0;\n      data[i++] = 0.0;\n      data[i++] = 0.0;\n      data[i++] = color;\n\n      data[i++] = x2;\n      data[i++] = y2;\n      data[i++] = x1;\n      data[i++] = y1;\n      data[i++] = w;\n      data[i++] = targetSize;\n      data[i++] = 1.0;\n      data[i++] = 0.0;\n      data[i++] = 0.0;\n      data[i++] = 0.0;\n      data[i++] = color;\n\n      data[i++] = x2;\n      data[i++] = y2;\n      data[i++] = x1;\n      data[i++] = y1;\n      data[i++] = w;\n      data[i++] = targetSize;\n      data[i++] = 1.0;\n      data[i++] = 0.0;\n      data[i++] = 0.0;\n      data[i++] = 0.0;\n      data[i++] = color;\n\n      data[i++] = x1;\n      data[i++] = y1;\n      data[i++] = x2;\n      data[i++] = y2;\n      data[i++] = w;\n      data[i++] = targetSize;\n      data[i++] = 0.0;\n      data[i++] = 1.0;\n      data[i++] = 0.0;\n      data[i++] = 0.0;\n      data[i++] = color;\n\n      data[i++] = x1;\n      data[i++] = y1;\n      data[i++] = x2;\n      data[i++] = y2;\n      data[i++] = w;\n      data[i++] = targetSize;\n      data[i++] = 0.0;\n      data[i++] = 0.0;\n      data[i++] = 0.0;\n      data[i++] = 0.0;\n      data[i++] = color;\n\n      // Arrow head:\n      data[i++] = x2;\n      data[i++] = y2;\n      data[i++] = x1;\n      data[i++] = y1;\n      data[i++] = w;\n      data[i++] = targetSize;\n      data[i++] = 1.0;\n      data[i++] = 0.0;\n      data[i++] = 1.0;\n      data[i++] = -1.0;\n      data[i++] = color;\n\n      data[i++] = x2;\n      data[i++] = y2;\n      data[i++] = x1;\n      data[i++] = y1;\n      data[i++] = w;\n      data[i++] = targetSize;\n      data[i++] = 1.0;\n      data[i++] = 0.0;\n      data[i++] = 1.0;\n      data[i++] = 0.0;\n      data[i++] = color;\n\n      data[i++] = x2;\n      data[i++] = y2;\n      data[i++] = x1;\n      data[i++] = y1;\n      data[i++] = w;\n      data[i++] = targetSize;\n      data[i++] = 1.0;\n      data[i++] = 0.0;\n      data[i++] = 1.0;\n      data[i++] = 1.0;\n      data[i++] = color;\n    },\n    render: function(gl, program, data, params) {\n      var buffer;\n\n      // Define attributes:\n      var positionLocation1 =\n            gl.getAttribLocation(program, 'a_pos1'),\n          positionLocation2 =\n            gl.getAttribLocation(program, 'a_pos2'),\n          thicknessLocation =\n            gl.getAttribLocation(program, 'a_thickness'),\n          targetSizeLocation =\n            gl.getAttribLocation(program, 'a_tSize'),\n          delayLocation =\n            gl.getAttribLocation(program, 'a_delay'),\n          minusLocation =\n            gl.getAttribLocation(program, 'a_minus'),\n          headLocation =\n            gl.getAttribLocation(program, 'a_head'),\n          headPositionLocation =\n            gl.getAttribLocation(program, 'a_headPosition'),\n          colorLocation =\n            gl.getAttribLocation(program, 'a_color'),\n          resolutionLocation =\n            gl.getUniformLocation(program, 'u_resolution'),\n          matrixLocation =\n            gl.getUniformLocation(program, 'u_matrix'),\n          matrixHalfPiLocation =\n            gl.getUniformLocation(program, 'u_matrixHalfPi'),\n          matrixHalfPiMinusLocation =\n            gl.getUniformLocation(program, 'u_matrixHalfPiMinus'),\n          ratioLocation =\n            gl.getUniformLocation(program, 'u_ratio'),\n          nodeRatioLocation =\n            gl.getUniformLocation(program, 'u_nodeRatio'),\n          arrowHeadLocation =\n            gl.getUniformLocation(program, 'u_arrowHead'),\n          scaleLocation =\n            gl.getUniformLocation(program, 'u_scale');\n\n      buffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n      gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n\n      gl.uniform2f(resolutionLocation, params.width, params.height);\n      gl.uniform1f(\n        ratioLocation,\n        params.ratio / Math.pow(params.ratio, params.settings('edgesPowRatio'))\n      );\n      gl.uniform1f(\n        nodeRatioLocation,\n        Math.pow(params.ratio, params.settings('nodesPowRatio')) /\n        params.ratio\n      );\n      gl.uniform1f(arrowHeadLocation, 5.0);\n      gl.uniform1f(scaleLocation, params.scalingRatio);\n      gl.uniformMatrix3fv(matrixLocation, false, params.matrix);\n      gl.uniformMatrix2fv(\n        matrixHalfPiLocation,\n        false,\n        sigma.utils.matrices.rotation(Math.PI / 2, true)\n      );\n      gl.uniformMatrix2fv(\n        matrixHalfPiMinusLocation,\n        false,\n        sigma.utils.matrices.rotation(-Math.PI / 2, true)\n      );\n\n      gl.enableVertexAttribArray(positionLocation1);\n      gl.enableVertexAttribArray(positionLocation2);\n      gl.enableVertexAttribArray(thicknessLocation);\n      gl.enableVertexAttribArray(targetSizeLocation);\n      gl.enableVertexAttribArray(delayLocation);\n      gl.enableVertexAttribArray(minusLocation);\n      gl.enableVertexAttribArray(headLocation);\n      gl.enableVertexAttribArray(headPositionLocation);\n      gl.enableVertexAttribArray(colorLocation);\n\n      gl.vertexAttribPointer(positionLocation1,\n        2,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        0\n      );\n      gl.vertexAttribPointer(positionLocation2,\n        2,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        8\n      );\n      gl.vertexAttribPointer(thicknessLocation,\n        1,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        16\n      );\n      gl.vertexAttribPointer(targetSizeLocation,\n        1,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        20\n      );\n      gl.vertexAttribPointer(delayLocation,\n        1,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        24\n      );\n      gl.vertexAttribPointer(minusLocation,\n        1,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        28\n      );\n      gl.vertexAttribPointer(headLocation,\n        1,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        32\n      );\n      gl.vertexAttribPointer(headPositionLocation,\n        1,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        36\n      );\n      gl.vertexAttribPointer(colorLocation,\n        1,\n        gl.FLOAT,\n        false,\n        this.ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT,\n        40\n      );\n\n      gl.drawArrays(\n        gl.TRIANGLES,\n        params.start || 0,\n        params.count || (data.length / this.ATTRIBUTES)\n      );\n    },\n    initProgram: function(gl) {\n      var vertexShader,\n          fragmentShader,\n          program;\n\n      vertexShader = sigma.utils.loadShader(\n        gl,\n        [\n          'attribute vec2 a_pos1;',\n          'attribute vec2 a_pos2;',\n          'attribute float a_thickness;',\n          'attribute float a_tSize;',\n          'attribute float a_delay;',\n          'attribute float a_minus;',\n          'attribute float a_head;',\n          'attribute float a_headPosition;',\n          'attribute float a_color;',\n\n          'uniform vec2 u_resolution;',\n          'uniform float u_ratio;',\n          'uniform float u_nodeRatio;',\n          'uniform float u_arrowHead;',\n          'uniform float u_scale;',\n          'uniform mat3 u_matrix;',\n          'uniform mat2 u_matrixHalfPi;',\n          'uniform mat2 u_matrixHalfPiMinus;',\n\n          'varying vec4 color;',\n\n          'void main() {',\n            // Find the good point:\n            'vec2 pos = normalize(a_pos2 - a_pos1);',\n\n            'mat2 matrix = (1.0 - a_head) *',\n              '(',\n                'a_minus * u_matrixHalfPiMinus +',\n                '(1.0 - a_minus) * u_matrixHalfPi',\n              ') + a_head * (',\n                'a_headPosition * u_matrixHalfPiMinus * 0.6 +',\n                '(a_headPosition * a_headPosition - 1.0) * mat2(1.0)',\n              ');',\n\n            'pos = a_pos1 + (',\n              // Deal with body:\n              '(1.0 - a_head) * a_thickness * u_ratio * matrix * pos +',\n              // Deal with head:\n              'a_head * u_arrowHead * a_thickness * u_ratio * matrix * pos +',\n              // Deal with delay:\n              'a_delay * pos * (',\n                'a_tSize / u_nodeRatio +',\n                'u_arrowHead * a_thickness * u_ratio',\n              ')',\n            ');',\n\n            // Scale from [[-1 1] [-1 1]] to the container:\n            'gl_Position = vec4(',\n              '((u_matrix * vec3(pos, 1)).xy /',\n                'u_resolution * 2.0 - 1.0) * vec2(1, -1),',\n              '0,',\n              '1',\n            ');',\n\n            // Extract the color:\n            'float c = a_color;',\n            'color.b = mod(c, 256.0); c = floor(c / 256.0);',\n            'color.g = mod(c, 256.0); c = floor(c / 256.0);',\n            'color.r = mod(c, 256.0); c = floor(c / 256.0); color /= 255.0;',\n            'color.a = 1.0;',\n          '}'\n        ].join('\\n'),\n        gl.VERTEX_SHADER\n      );\n\n      fragmentShader = sigma.utils.loadShader(\n        gl,\n        [\n          'precision mediump float;',\n\n          'varying vec4 color;',\n\n          'void main(void) {',\n            'gl_FragColor = color;',\n          '}'\n        ].join('\\n'),\n        gl.FRAGMENT_SHADER\n      );\n\n      program = sigma.utils.loadProgram(gl, [vertexShader, fragmentShader]);\n\n      return program;\n    }\n  };\n})();\n\n;(function(undefined) {\n  'use strict';\n\n  if (typeof sigma === 'undefined')\n    throw 'sigma is not declared';\n\n  // Initialize packages:\n  sigma.utils.pkg('sigma.canvas.labels');\n\n  /**\n   * This label renderer will just display the label on the right of the node.\n   *\n   * @param  {object}                   node     The node object.\n   * @param  {CanvasRenderingContext2D} context  The canvas context.\n   * @param  {configurable}             settings The settings function.\n   */\n  sigma.canvas.labels.def = function(node, context, settings) {\n    var fontSize,\n        prefix = settings('prefix') || '',\n        size = node[prefix + 'size'];\n\n    if (size < settings('labelThreshold'))\n      return;\n\n    if (!node.label || typeof node.label !== 'string')\n      return;\n\n    fontSize = (settings('labelSize') === 'fixed') ?\n      settings('defaultLabelSize') :\n      settings('labelSizeRatio') * size;\n\n    context.font = (settings('fontStyle') ? settings('fontStyle') + ' ' : '') +\n      fontSize + 'px ' + settings('font');\n    context.fillStyle = (settings('labelColor') === 'node') ?\n      (node.color || settings('defaultNodeColor')) :\n      settings('defaultLabelColor');\n\n    context.fillText(\n      node.label,\n      Math.round(node[prefix + 'x'] + size + 3),\n      Math.round(node[prefix + 'y'] + fontSize / 3)\n    );\n  };\n}).call(this);\n\n;(function(undefined) {\n  'use strict';\n\n  if (typeof sigma === 'undefined')\n    throw 'sigma is not declared';\n\n  // Initialize packages:\n  sigma.utils.pkg('sigma.canvas.hovers');\n\n  /**\n   * This hover renderer will basically display the label with a background.\n   *\n   * @param  {object}                   node     The node object.\n   * @param  {CanvasRenderingContext2D} context  The canvas context.\n   * @param  {configurable}             settings The settings function.\n   */\n  sigma.canvas.hovers.def = function(node, context, settings) {\n    var x,\n        y,\n        w,\n        h,\n        e,\n        fontStyle = settings('hoverFontStyle') || settings('fontStyle'),\n        prefix = settings('prefix') || '',\n        size = node[prefix + 'size'],\n        fontSize = (settings('labelSize') === 'fixed') ?\n          settings('defaultLabelSize') :\n          settings('labelSizeRatio') * size;\n\n    // Label background:\n    context.font = (fontStyle ? fontStyle + ' ' : '') +\n      fontSize + 'px ' + (settings('hoverFont') || settings('font'));\n\n    context.beginPath();\n    context.fillStyle = settings('labelHoverBGColor') === 'node' ?\n      (node.color || settings('defaultNodeColor')) :\n      settings('defaultHoverLabelBGColor');\n\n    if (node.label && settings('labelHoverShadow')) {\n      context.shadowOffsetX = 0;\n      context.shadowOffsetY = 0;\n      context.shadowBlur = 8;\n      context.shadowColor = settings('labelHoverShadowColor');\n    }\n\n    if (node.label && typeof node.label === 'string') {\n      x = Math.round(node[prefix + 'x'] - fontSize / 2 - 2);\n      y = Math.round(node[prefix + 'y'] - fontSize / 2 - 2);\n      w = Math.round(\n        context.measureText(node.label).width + fontSize / 2 + size + 7\n      );\n      h = Math.round(fontSize + 4);\n      e = Math.round(fontSize / 2 + 2);\n\n      context.moveTo(x, y + e);\n      context.arcTo(x, y, x + e, y, e);\n      context.lineTo(x + w, y);\n      context.lineTo(x + w, y + h);\n      context.lineTo(x + e, y + h);\n      context.arcTo(x, y + h, x, y + h - e, e);\n      context.lineTo(x, y + e);\n\n      context.closePath();\n      context.fill();\n\n      context.shadowOffsetX = 0;\n      context.shadowOffsetY = 0;\n      context.shadowBlur = 0;\n    }\n\n    // Node border:\n    if (settings('borderSize') > 0) {\n      context.beginPath();\n      context.fillStyle = settings('nodeBorderColor') === 'node' ?\n        (node.color || settings('defaultNodeColor')) :\n        settings('defaultNodeBorderColor');\n      context.arc(\n        node[prefix + 'x'],\n        node[prefix + 'y'],\n        size + settings('borderSize'),\n        0,\n        Math.PI * 2,\n        true\n      );\n      context.closePath();\n      context.fill();\n    }\n\n    // Node:\n    var nodeRenderer = sigma.canvas.nodes[node.type] || sigma.canvas.nodes.def;\n    nodeRenderer(node, context, settings);\n\n    // Display the label:\n    if (node.label && typeof node.label === 'string') {\n      context.fillStyle = (settings('labelHoverColor') === 'node') ?\n        (node.color || settings('defaultNodeColor')) :\n        settings('defaultLabelHoverColor');\n\n      context.fillText(\n        node.label,\n        Math.round(node[prefix + 'x'] + size + 3),\n        Math.round(node[prefix + 'y'] + fontSize / 3)\n      );\n    }\n  };\n}).call(this);\n\n;(function() {\n  'use strict';\n\n  sigma.utils.pkg('sigma.canvas.nodes');\n\n  /**\n   * The default node renderer. It renders the node as a simple disc.\n   *\n   * @param  {object}                   node     The node object.\n   * @param  {CanvasRenderingContext2D} context  The canvas context.\n   * @param  {configurable}             settings The settings function.\n   */\n  sigma.canvas.nodes.def = function(node, context, settings) {\n    var prefix = settings('prefix') || '';\n\n    context.fillStyle = node.color || settings('defaultNodeColor');\n    context.beginPath();\n    context.arc(\n      node[prefix + 'x'],\n      node[prefix + 'y'],\n      node[prefix + 'size'],\n      0,\n      Math.PI * 2,\n      true\n    );\n\n    context.closePath();\n    context.fill();\n  };\n})();\n\n;(function() {\n  'use strict';\n\n  sigma.utils.pkg('sigma.canvas.edges');\n\n  /**\n   * The default edge renderer. It renders the edge as a simple line.\n   *\n   * @param  {object}                   edge         The edge object.\n   * @param  {object}                   source node  The edge source node.\n   * @param  {object}                   target node  The edge target node.\n   * @param  {CanvasRenderingContext2D} context      The canvas context.\n   * @param  {configurable}             settings     The settings function.\n   */\n  sigma.canvas.edges.def = function(edge, source, target, context, settings) {\n    var color = edge.color,\n        prefix = settings('prefix') || '',\n        size = edge[prefix + 'size'] || 1,\n        edgeColor = settings('edgeColor'),\n        defaultNodeColor = settings('defaultNodeColor'),\n        defaultEdgeColor = settings('defaultEdgeColor');\n\n    if (!color)\n      switch (edgeColor) {\n        case 'source':\n          color = source.color || defaultNodeColor;\n          break;\n        case 'target':\n          color = target.color || defaultNodeColor;\n          break;\n        default:\n          color = defaultEdgeColor;\n          break;\n      }\n\n    context.strokeStyle = color;\n    context.lineWidth = size;\n    context.beginPath();\n    context.moveTo(\n      source[prefix + 'x'],\n      source[prefix + 'y']\n    );\n    context.lineTo(\n      target[prefix + 'x'],\n      target[prefix + 'y']\n    );\n    context.stroke();\n  };\n})();\n\n;(function() {\n  'use strict';\n\n  sigma.utils.pkg('sigma.canvas.edges');\n\n  /**\n   * This edge renderer will display edges as arrows going from the source node\n   *\n   * @param  {object}                   edge         The edge object.\n   * @param  {object}                   source node  The edge source node.\n   * @param  {object}                   target node  The edge target node.\n   * @param  {CanvasRenderingContext2D} context      The canvas context.\n   * @param  {configurable}             settings     The settings function.\n   */\n  sigma.canvas.edges.arrow = function(edge, source, target, context, settings) {\n    var color = edge.color,\n        prefix = settings('prefix') || '',\n        edgeColor = settings('edgeColor'),\n        defaultNodeColor = settings('defaultNodeColor'),\n        defaultEdgeColor = settings('defaultEdgeColor'),\n        size = edge[prefix + 'size'] || 1,\n        tSize = target[prefix + 'size'],\n        sX = source[prefix + 'x'],\n        sY = source[prefix + 'y'],\n        tX = target[prefix + 'x'],\n        tY = target[prefix + 'y'],\n        aSize = Math.max(size * 2.5, settings('minArrowSize')),\n        d = Math.sqrt(Math.pow(tX - sX, 2) + Math.pow(tY - sY, 2)),\n        aX = sX + (tX - sX) * (d - aSize - tSize) / d,\n        aY = sY + (tY - sY) * (d - aSize - tSize) / d,\n        vX = (tX - sX) * aSize / d,\n        vY = (tY - sY) * aSize / d;\n\n    if (!color)\n      switch (edgeColor) {\n        case 'source':\n          color = source.color || defaultNodeColor;\n          break;\n        case 'target':\n          color = target.color || defaultNodeColor;\n          break;\n        default:\n          color = defaultEdgeColor;\n          break;\n      }\n\n    context.strokeStyle = color;\n    context.lineWidth = size;\n    context.beginPath();\n    context.moveTo(sX, sY);\n    context.lineTo(\n      aX,\n      aY\n    );\n    context.stroke();\n\n    context.fillStyle = color;\n    context.beginPath();\n    context.moveTo(aX + vX, aY + vY);\n    context.lineTo(aX + vY * 0.6, aY - vX * 0.6);\n    context.lineTo(aX - vY * 0.6, aY + vX * 0.6);\n    context.lineTo(aX + vX, aY + vY);\n    context.closePath();\n    context.fill();\n  };\n})();\n\n;(function() {\n  'use strict';\n\n  sigma.utils.pkg('sigma.canvas.edgehovers');\n\n  /**\n   * This hover renderer will display the edge with a different color or size.\n   *\n   * @param  {object}                   edge         The edge object.\n   * @param  {object}                   source node  The edge source node.\n   * @param  {object}                   target node  The edge target node.\n   * @param  {CanvasRenderingContext2D} context      The canvas context.\n   * @param  {configurable}             settings     The settings function.\n   */\n  sigma.canvas.edgehovers.def =\n    function(edge, source, target, context, settings) {\n      var color = edge.color,\n        prefix = settings('prefix') || '',\n        size = edge[prefix + 'size'] || 1,\n        edgeColor = settings('edgeColor'),\n        defaultNodeColor = settings('defaultNodeColor'),\n        defaultEdgeColor = settings('defaultEdgeColor');\n\n    if (!color)\n      switch (edgeColor) {\n        case 'source':\n          color = source.color || defaultNodeColor;\n          break;\n        case 'target':\n          color = target.color || defaultNodeColor;\n          break;\n        default:\n          color = defaultEdgeColor;\n          break;\n      }\n\n    if (settings('edgeHoverColor') === 'edge') {\n      color = edge.hover_color || color;\n    } else {\n      color = edge.hover_color || settings('defaultEdgeHoverColor') || color;\n    }\n    size *= settings('edgeHoverSizeRatio');\n\n    context.strokeStyle = color;\n    context.lineWidth = size;\n    context.beginPath();\n    context.moveTo(\n      source[prefix + 'x'],\n      source[prefix + 'y']\n    );\n    context.lineTo(\n      target[prefix + 'x'],\n      target[prefix + 'y']\n    );\n    context.stroke();\n  };\n})();\n\n;(function() {\n  'use strict';\n\n  sigma.utils.pkg('sigma.canvas.edgehovers');\n\n  /**\n   * This hover renderer will display the edge with a different color or size.\n   *\n   * @param  {object}                   edge         The edge object.\n   * @param  {object}                   source node  The edge source node.\n   * @param  {object}                   target node  The edge target node.\n   * @param  {CanvasRenderingContext2D} context      The canvas context.\n   * @param  {configurable}             settings     The settings function.\n   */\n  sigma.canvas.edgehovers.curve =\n    function(edge, source, target, context, settings) {\n    var color = edge.color,\n        prefix = settings('prefix') || '',\n        size = settings('edgeHoverSizeRatio') * (edge[prefix + 'size'] || 1),\n        edgeColor = settings('edgeColor'),\n        defaultNodeColor = settings('defaultNodeColor'),\n        defaultEdgeColor = settings('defaultEdgeColor'),\n        cp = {},\n        sSize = source[prefix + 'size'],\n        sX = source[prefix + 'x'],\n        sY = source[prefix + 'y'],\n        tX = target[prefix + 'x'],\n        tY = target[prefix + 'y'];\n\n    cp = (source.id === target.id) ?\n      sigma.utils.getSelfLoopControlPoints(sX, sY, sSize) :\n      sigma.utils.getQuadraticControlPoint(sX, sY, tX, tY);\n\n    if (!color)\n      switch (edgeColor) {\n        case 'source':\n          color = source.color || defaultNodeColor;\n          break;\n        case 'target':\n          color = target.color || defaultNodeColor;\n          break;\n        default:\n          color = defaultEdgeColor;\n          break;\n      }\n\n    if (settings('edgeHoverColor') === 'edge') {\n      color = edge.hover_color || color;\n    } else {\n      color = edge.hover_color || settings('defaultEdgeHoverColor') || color;\n    }\n\n    context.strokeStyle = color;\n    context.lineWidth = size;\n    context.beginPath();\n    context.moveTo(sX, sY);\n    if (source.id === target.id) {\n      context.bezierCurveTo(cp.x1, cp.y1, cp.x2, cp.y2, tX, tY);\n    } else {\n      context.quadraticCurveTo(cp.x, cp.y, tX, tY);\n    }\n    context.stroke();\n  };\n})();\n\n;(function() {\n  'use strict';\n\n  sigma.utils.pkg('sigma.canvas.edgehovers');\n\n  /**\n   * This hover renderer will display the edge with a different color or size.\n   *\n   * @param  {object}                   edge         The edge object.\n   * @param  {object}                   source node  The edge source node.\n   * @param  {object}                   target node  The edge target node.\n   * @param  {CanvasRenderingContext2D} context      The canvas context.\n   * @param  {configurable}             settings     The settings function.\n   */\n  sigma.canvas.edgehovers.arrow =\n    function(edge, source, target, context, settings) {\n    var color = edge.color,\n        prefix = settings('prefix') || '',\n        edgeColor = settings('edgeColor'),\n        defaultNodeColor = settings('defaultNodeColor'),\n        defaultEdgeColor = settings('defaultEdgeColor'),\n        size = edge[prefix + 'size'] || 1,\n        tSize = target[prefix + 'size'],\n        sX = source[prefix + 'x'],\n        sY = source[prefix + 'y'],\n        tX = target[prefix + 'x'],\n        tY = target[prefix + 'y'];\n\n    size = (edge.hover) ?\n      settings('edgeHoverSizeRatio') * size : size;\n    var aSize = size * 2.5,\n        d = Math.sqrt(Math.pow(tX - sX, 2) + Math.pow(tY - sY, 2)),\n        aX = sX + (tX - sX) * (d - aSize - tSize) / d,\n        aY = sY + (tY - sY) * (d - aSize - tSize) / d,\n        vX = (tX - sX) * aSize / d,\n        vY = (tY - sY) * aSize / d;\n\n    if (!color)\n      switch (edgeColor) {\n        case 'source':\n          color = source.color || defaultNodeColor;\n          break;\n        case 'target':\n          color = target.color || defaultNodeColor;\n          break;\n        default:\n          color = defaultEdgeColor;\n          break;\n      }\n\n    if (settings('edgeHoverColor') === 'edge') {\n      color = edge.hover_color || color;\n    } else {\n      color = edge.hover_color || settings('defaultEdgeHoverColor') || color;\n    }\n\n    context.strokeStyle = color;\n    context.lineWidth = size;\n    context.beginPath();\n    context.moveTo(sX, sY);\n    context.lineTo(\n      aX,\n      aY\n    );\n    context.stroke();\n\n    context.fillStyle = color;\n    context.beginPath();\n    context.moveTo(aX + vX, aY + vY);\n    context.lineTo(aX + vY * 0.6, aY - vX * 0.6);\n    context.lineTo(aX - vY * 0.6, aY + vX * 0.6);\n    context.lineTo(aX + vX, aY + vY);\n    context.closePath();\n    context.fill();\n  };\n})();\n\n;(function() {\n  'use strict';\n\n  sigma.utils.pkg('sigma.canvas.edgehovers');\n\n  /**\n   * This hover renderer will display the edge with a different color or size.\n   *\n   * @param  {object}                   edge         The edge object.\n   * @param  {object}                   source node  The edge source node.\n   * @param  {object}                   target node  The edge target node.\n   * @param  {CanvasRenderingContext2D} context      The canvas context.\n   * @param  {configurable}             settings     The settings function.\n   */\n  sigma.canvas.edgehovers.curvedArrow =\n    function(edge, source, target, context, settings) {\n    var color = edge.color,\n        prefix = settings('prefix') || '',\n        edgeColor = settings('edgeColor'),\n        defaultNodeColor = settings('defaultNodeColor'),\n        defaultEdgeColor = settings('defaultEdgeColor'),\n        cp = {},\n        size = settings('edgeHoverSizeRatio') * (edge[prefix + 'size'] || 1),\n        tSize = target[prefix + 'size'],\n        sX = source[prefix + 'x'],\n        sY = source[prefix + 'y'],\n        tX = target[prefix + 'x'],\n        tY = target[prefix + 'y'],\n        d,\n        aSize,\n        aX,\n        aY,\n        vX,\n        vY;\n\n    cp = (source.id === target.id) ?\n      sigma.utils.getSelfLoopControlPoints(sX, sY, tSize) :\n      sigma.utils.getQuadraticControlPoint(sX, sY, tX, tY);\n\n    if (source.id === target.id) {\n      d = Math.sqrt(Math.pow(tX - cp.x1, 2) + Math.pow(tY - cp.y1, 2));\n      aSize = size * 2.5;\n      aX = cp.x1 + (tX - cp.x1) * (d - aSize - tSize) / d;\n      aY = cp.y1 + (tY - cp.y1) * (d - aSize - tSize) / d;\n      vX = (tX - cp.x1) * aSize / d;\n      vY = (tY - cp.y1) * aSize / d;\n    }\n    else {\n      d = Math.sqrt(Math.pow(tX - cp.x, 2) + Math.pow(tY - cp.y, 2));\n      aSize = size * 2.5;\n      aX = cp.x + (tX - cp.x) * (d - aSize - tSize) / d;\n      aY = cp.y + (tY - cp.y) * (d - aSize - tSize) / d;\n      vX = (tX - cp.x) * aSize / d;\n      vY = (tY - cp.y) * aSize / d;\n    }\n\n    if (!color)\n      switch (edgeColor) {\n        case 'source':\n          color = source.color || defaultNodeColor;\n          break;\n        case 'target':\n          color = target.color || defaultNodeColor;\n          break;\n        default:\n          color = defaultEdgeColor;\n          break;\n      }\n\n    if (settings('edgeHoverColor') === 'edge') {\n      color = edge.hover_color || color;\n    } else {\n      color = edge.hover_color || settings('defaultEdgeHoverColor') || color;\n    }\n\n    context.strokeStyle = color;\n    context.lineWidth = size;\n    context.beginPath();\n    context.moveTo(sX, sY);\n    if (source.id === target.id) {\n      context.bezierCurveTo(cp.x2, cp.y2, cp.x1, cp.y1, aX, aY);\n    } else {\n      context.quadraticCurveTo(cp.x, cp.y, aX, aY);\n    }\n    context.stroke();\n\n    context.fillStyle = color;\n    context.beginPath();\n    context.moveTo(aX + vX, aY + vY);\n    context.lineTo(aX + vY * 0.6, aY - vX * 0.6);\n    context.lineTo(aX - vY * 0.6, aY + vX * 0.6);\n    context.lineTo(aX + vX, aY + vY);\n    context.closePath();\n    context.fill();\n  };\n})();\n\n;(function(undefined) {\n  'use strict';\n\n  if (typeof sigma === 'undefined')\n    throw 'sigma is not declared';\n\n  // Initialize packages:\n  sigma.utils.pkg('sigma.canvas.extremities');\n\n  /**\n   * The default renderer for hovered edge extremities. It renders the edge\n   * extremities as hovered.\n   *\n   * @param  {object}                   edge         The edge object.\n   * @param  {object}                   source node  The edge source node.\n   * @param  {object}                   target node  The edge target node.\n   * @param  {CanvasRenderingContext2D} context      The canvas context.\n   * @param  {configurable}             settings     The settings function.\n   */\n  sigma.canvas.extremities.def =\n    function(edge, source, target, context, settings) {\n    // Source Node:\n    (\n      sigma.canvas.hovers[source.type] ||\n      sigma.canvas.hovers.def\n    ) (\n      source, context, settings\n    );\n\n    // Target Node:\n    (\n      sigma.canvas.hovers[target.type] ||\n      sigma.canvas.hovers.def\n    ) (\n      target, context, settings\n    );\n  };\n}).call(this);\n\n;(function() {\n  'use strict';\n\n  sigma.utils.pkg('sigma.svg.utils');\n\n  /**\n   * Some useful functions used by sigma's SVG renderer.\n   */\n  sigma.svg.utils = {\n\n    /**\n     * SVG Element show.\n     *\n     * @param  {DOMElement}               element   The DOM element to show.\n     */\n    show: function(element) {\n      element.style.display = '';\n      return this;\n    },\n\n    /**\n     * SVG Element hide.\n     *\n     * @param  {DOMElement}               element   The DOM element to hide.\n     */\n    hide: function(element) {\n      element.style.display = 'none';\n      return this;\n    }\n  };\n})();\n\n;(function() {\n  'use strict';\n\n  sigma.utils.pkg('sigma.svg.nodes');\n\n  /**\n   * The default node renderer. It renders the node as a simple disc.\n   */\n  sigma.svg.nodes.def = {\n\n    /**\n     * SVG Element creation.\n     *\n     * @param  {object}                   node     The node object.\n     * @param  {configurable}             settings The settings function.\n     */\n    create: function(node, settings) {\n      var prefix = settings('prefix') || '',\n          circle = document.createElementNS(settings('xmlns'), 'circle');\n\n      // Defining the node's circle\n      circle.setAttributeNS(null, 'data-node-id', node.id);\n      circle.setAttributeNS(null, 'class', settings('classPrefix') + '-node');\n      circle.setAttributeNS(\n        null, 'fill', node.color || settings('defaultNodeColor'));\n\n      // Returning the DOM Element\n      return circle;\n    },\n\n    /**\n     * SVG Element update.\n     *\n     * @param  {object}                   node     The node object.\n     * @param  {DOMElement}               circle   The node DOM element.\n     * @param  {configurable}             settings The settings function.\n     */\n    update: function(node, circle, settings) {\n      var prefix = settings('prefix') || '';\n\n      // Applying changes\n      // TODO: optimize - check if necessary\n      circle.setAttributeNS(null, 'cx', node[prefix + 'x']);\n      circle.setAttributeNS(null, 'cy', node[prefix + 'y']);\n      circle.setAttributeNS(null, 'r', node[prefix + 'size']);\n\n      // Updating only if not freestyle\n      if (!settings('freeStyle'))\n        circle.setAttributeNS(\n          null, 'fill', node.color || settings('defaultNodeColor'));\n\n      // Showing\n      circle.style.display = '';\n\n      return this;\n    }\n  };\n})();\n\n;(function() {\n  'use strict';\n\n  sigma.utils.pkg('sigma.svg.edges');\n\n  /**\n   * The default edge renderer. It renders the node as a simple line.\n   */\n  sigma.svg.edges.def = {\n\n    /**\n     * SVG Element creation.\n     *\n     * @param  {object}                   edge       The edge object.\n     * @param  {object}                   source     The source node object.\n     * @param  {object}                   target     The target node object.\n     * @param  {configurable}             settings   The settings function.\n     */\n    create: function(edge, source, target, settings) {\n      var color = edge.color,\n          prefix = settings('prefix') || '',\n          edgeColor = settings('edgeColor'),\n          defaultNodeColor = settings('defaultNodeColor'),\n          defaultEdgeColor = settings('defaultEdgeColor');\n\n      if (!color)\n        switch (edgeColor) {\n          case 'source':\n            color = source.color || defaultNodeColor;\n            break;\n          case 'target':\n            color = target.color || defaultNodeColor;\n            break;\n          default:\n            color = defaultEdgeColor;\n            break;\n        }\n\n      var line = document.createElementNS(settings('xmlns'), 'line');\n\n      // Attributes\n      line.setAttributeNS(null, 'data-edge-id', edge.id);\n      line.setAttributeNS(null, 'class', settings('classPrefix') + '-edge');\n      line.setAttributeNS(null, 'stroke', color);\n\n      return line;\n    },\n\n    /**\n     * SVG Element update.\n     *\n     * @param  {object}                   edge       The edge object.\n     * @param  {DOMElement}               line       The line DOM Element.\n     * @param  {object}                   source     The source node object.\n     * @param  {object}                   target     The target node object.\n     * @param  {configurable}             settings   The settings function.\n     */\n    update: function(edge, line, source, target, settings) {\n      var prefix = settings('prefix') || '';\n\n      line.setAttributeNS(null, 'stroke-width', edge[prefix + 'size'] || 1);\n      line.setAttributeNS(null, 'x1', source[prefix + 'x']);\n      line.setAttributeNS(null, 'y1', source[prefix + 'y']);\n      line.setAttributeNS(null, 'x2', target[prefix + 'x']);\n      line.setAttributeNS(null, 'y2', target[prefix + 'y']);\n\n      // Showing\n      line.style.display = '';\n\n      return this;\n    }\n  };\n})();\n\n;(function() {\n  'use strict';\n\n  sigma.utils.pkg('sigma.svg.edges');\n\n  /**\n   * The curve edge renderer. It renders the node as a bezier curve.\n   */\n  sigma.svg.edges.curve = {\n\n    /**\n     * SVG Element creation.\n     *\n     * @param  {object}                   edge       The edge object.\n     * @param  {object}                   source     The source node object.\n     * @param  {object}                   target     The target node object.\n     * @param  {configurable}             settings   The settings function.\n     */\n    create: function(edge, source, target, settings) {\n      var color = edge.color,\n          prefix = settings('prefix') || '',\n          edgeColor = settings('edgeColor'),\n          defaultNodeColor = settings('defaultNodeColor'),\n          defaultEdgeColor = settings('defaultEdgeColor');\n\n      if (!color)\n        switch (edgeColor) {\n          case 'source':\n            color = source.color || defaultNodeColor;\n            break;\n          case 'target':\n            color = target.color || defaultNodeColor;\n            break;\n          default:\n            color = defaultEdgeColor;\n            break;\n        }\n\n      var path = document.createElementNS(settings('xmlns'), 'path');\n\n      // Attributes\n      path.setAttributeNS(null, 'data-edge-id', edge.id);\n      path.setAttributeNS(null, 'class', settings('classPrefix') + '-edge');\n      path.setAttributeNS(null, 'stroke', color);\n\n      return path;\n    },\n\n    /**\n     * SVG Element update.\n     *\n     * @param  {object}                   edge       The edge object.\n     * @param  {DOMElement}               line       The line DOM Element.\n     * @param  {object}                   source     The source node object.\n     * @param  {object}                   target     The target node object.\n     * @param  {configurable}             settings   The settings function.\n     */\n    update: function(edge, path, source, target, settings) {\n      var prefix = settings('prefix') || '';\n\n      path.setAttributeNS(null, 'stroke-width', edge[prefix + 'size'] || 1);\n\n      // Control point\n      var cx = (source[prefix + 'x'] + target[prefix + 'x']) / 2 +\n        (target[prefix + 'y'] - source[prefix + 'y']) / 4,\n          cy = (source[prefix + 'y'] + target[prefix + 'y']) / 2 +\n        (source[prefix + 'x'] - target[prefix + 'x']) / 4;\n\n      // Path\n      var p = 'M' + source[prefix + 'x'] + ',' + source[prefix + 'y'] + ' ' +\n              'Q' + cx + ',' + cy + ' ' +\n              target[prefix + 'x'] + ',' + target[prefix + 'y'];\n\n      // Updating attributes\n      path.setAttributeNS(null, 'd', p);\n      path.setAttributeNS(null, 'fill', 'none');\n\n      // Showing\n      path.style.display = '';\n\n      return this;\n    }\n  };\n})();\n\n;(function(undefined) {\n  'use strict';\n\n  if (typeof sigma === 'undefined')\n    throw 'sigma is not declared';\n\n  // Initialize packages:\n  sigma.utils.pkg('sigma.svg.labels');\n\n  /**\n   * The default label renderer. It renders the label as a simple text.\n   */\n  sigma.svg.labels.def = {\n\n    /**\n     * SVG Element creation.\n     *\n     * @param  {object}                   node       The node object.\n     * @param  {configurable}             settings   The settings function.\n     */\n    create: function(node, settings) {\n      var prefix = settings('prefix') || '',\n          size = node[prefix + 'size'],\n          text = document.createElementNS(settings('xmlns'), 'text');\n\n      var fontSize = (settings('labelSize') === 'fixed') ?\n        settings('defaultLabelSize') :\n        settings('labelSizeRatio') * size;\n\n      var fontColor = (settings('labelColor') === 'node') ?\n        (node.color || settings('defaultNodeColor')) :\n        settings('defaultLabelColor');\n\n      text.setAttributeNS(null, 'data-label-target', node.id);\n      text.setAttributeNS(null, 'class', settings('classPrefix') + '-label');\n      text.setAttributeNS(null, 'font-size', fontSize);\n      text.setAttributeNS(null, 'font-family', settings('font'));\n      text.setAttributeNS(null, 'fill', fontColor);\n\n      text.innerHTML = node.label;\n      text.textContent = node.label;\n\n      return text;\n    },\n\n    /**\n     * SVG Element update.\n     *\n     * @param  {object}                   node     The node object.\n     * @param  {DOMElement}               text     The label DOM element.\n     * @param  {configurable}             settings The settings function.\n     */\n    update: function(node, text, settings) {\n      var prefix = settings('prefix') || '',\n          size = node[prefix + 'size'];\n\n      var fontSize = (settings('labelSize') === 'fixed') ?\n        settings('defaultLabelSize') :\n        settings('labelSizeRatio') * size;\n\n      // Case when we don't want to display the label\n      if (!settings('forceLabels') && size < settings('labelThreshold'))\n        return;\n\n      if (typeof node.label !== 'string')\n        return;\n\n      // Updating\n      text.setAttributeNS(null, 'x',\n        Math.round(node[prefix + 'x'] + size + 3));\n      text.setAttributeNS(null, 'y',\n        Math.round(node[prefix + 'y'] + fontSize / 3));\n\n      // Showing\n      text.style.display = '';\n\n      return this;\n    }\n  };\n}).call(this);\n\n;(function(undefined) {\n  'use strict';\n\n  if (typeof sigma === 'undefined')\n    throw 'sigma is not declared';\n\n  // Initialize packages:\n  sigma.utils.pkg('sigma.svg.hovers');\n\n  /**\n   * The default hover renderer.\n   */\n  sigma.svg.hovers.def = {\n\n    /**\n     * SVG Element creation.\n     *\n     * @param  {object}           node               The node object.\n     * @param  {CanvasElement}    measurementCanvas  A fake canvas handled by\n     *                            the svg to perform some measurements and\n     *                            passed by the renderer.\n     * @param  {DOMElement}       nodeCircle         The node DOM Element.\n     * @param  {configurable}     settings           The settings function.\n     */\n    create: function(node, nodeCircle, measurementCanvas, settings) {\n\n      // Defining visual properties\n      var x,\n          y,\n          w,\n          h,\n          e,\n          d,\n          fontStyle = settings('hoverFontStyle') || settings('fontStyle'),\n          prefix = settings('prefix') || '',\n          size = node[prefix + 'size'],\n          fontSize = (settings('labelSize') === 'fixed') ?\n            settings('defaultLabelSize') :\n            settings('labelSizeRatio') * size,\n          fontColor = (settings('labelHoverColor') === 'node') ?\n                        (node.color || settings('defaultNodeColor')) :\n                        settings('defaultLabelHoverColor');\n\n      // Creating elements\n      var group = document.createElementNS(settings('xmlns'), 'g'),\n          rectangle = document.createElementNS(settings('xmlns'), 'rect'),\n          circle = document.createElementNS(settings('xmlns'), 'circle'),\n          text = document.createElementNS(settings('xmlns'), 'text');\n\n      // Defining properties\n      group.setAttributeNS(null, 'class', settings('classPrefix') + '-hover');\n      group.setAttributeNS(null, 'data-node-id', node.id);\n\n      if (typeof node.label === 'string') {\n\n        // Text\n        text.innerHTML = node.label;\n        text.textContent = node.label;\n        text.setAttributeNS(\n            null,\n            'class',\n            settings('classPrefix') + '-hover-label');\n        text.setAttributeNS(null, 'font-size', fontSize);\n        text.setAttributeNS(null, 'font-family', settings('font'));\n        text.setAttributeNS(null, 'fill', fontColor);\n        text.setAttributeNS(null, 'x',\n          Math.round(node[prefix + 'x'] + size + 3));\n        text.setAttributeNS(null, 'y',\n          Math.round(node[prefix + 'y'] + fontSize / 3));\n\n        // Measures\n        // OPTIMIZE: Find a better way than a measurement canvas\n        x = Math.round(node[prefix + 'x'] - fontSize / 2 - 2);\n        y = Math.round(node[prefix + 'y'] - fontSize / 2 - 2);\n        w = Math.round(\n          measurementCanvas.measureText(node.label).width +\n            fontSize / 2 + size + 9\n        );\n        h = Math.round(fontSize + 4);\n        e = Math.round(fontSize / 2 + 2);\n\n        // Circle\n        circle.setAttributeNS(\n            null,\n            'class',\n            settings('classPrefix') + '-hover-area');\n        circle.setAttributeNS(null, 'fill', '#fff');\n        circle.setAttributeNS(null, 'cx', node[prefix + 'x']);\n        circle.setAttributeNS(null, 'cy', node[prefix + 'y']);\n        circle.setAttributeNS(null, 'r', e);\n\n        // Rectangle\n        rectangle.setAttributeNS(\n            null,\n            'class',\n            settings('classPrefix') + '-hover-area');\n        rectangle.setAttributeNS(null, 'fill', '#fff');\n        rectangle.setAttributeNS(null, 'x', node[prefix + 'x'] + e / 4);\n        rectangle.setAttributeNS(null, 'y', node[prefix + 'y'] - e);\n        rectangle.setAttributeNS(null, 'width', w);\n        rectangle.setAttributeNS(null, 'height', h);\n      }\n\n      // Appending childs\n      group.appendChild(circle);\n      group.appendChild(rectangle);\n      group.appendChild(text);\n      group.appendChild(nodeCircle);\n\n      return group;\n    }\n  };\n}).call(this);\n\n;(function(undefined) {\n  'use strict';\n\n  if (typeof sigma === 'undefined')\n    throw 'sigma is not declared';\n\n  // Initialize packages:\n  sigma.utils.pkg('sigma.middlewares');\n  sigma.utils.pkg('sigma.utils');\n\n  /**\n   * This middleware will rescale the graph such that it takes an optimal space\n   * on the renderer.\n   *\n   * As each middleware, this function is executed in the scope of the sigma\n   * instance.\n   *\n   * @param {?string} readPrefix  The read prefix.\n   * @param {?string} writePrefix The write prefix.\n   * @param {object}  options     The parameters.\n   */\n  sigma.middlewares.rescale = function(readPrefix, writePrefix, options) {\n    var i,\n        l,\n        a,\n        b,\n        c,\n        d,\n        scale,\n        margin,\n        n = this.graph.nodes(),\n        e = this.graph.edges(),\n        settings = this.settings.embedObjects(options || {}),\n        bounds = settings('bounds') || sigma.utils.getBoundaries(\n          this.graph,\n          readPrefix,\n          true\n        ),\n        minX = bounds.minX,\n        minY = bounds.minY,\n        maxX = bounds.maxX,\n        maxY = bounds.maxY,\n        sizeMax = bounds.sizeMax,\n        weightMax = bounds.weightMax,\n        w = settings('width') || 1,\n        h = settings('height') || 1,\n        rescaleSettings = settings('autoRescale'),\n        validSettings = {\n          nodePosition: 1,\n          nodeSize: 1,\n          edgeSize: 1\n        };\n\n    /**\n     * What elements should we rescale?\n     */\n    if (!(rescaleSettings instanceof Array))\n      rescaleSettings = ['nodePosition', 'nodeSize', 'edgeSize'];\n\n    for (i = 0, l = rescaleSettings.length; i < l; i++)\n      if (!validSettings[rescaleSettings[i]])\n        throw new Error(\n          'The rescale setting \"' + rescaleSettings[i] + '\" is not recognized.'\n        );\n\n    var np = ~rescaleSettings.indexOf('nodePosition'),\n        ns = ~rescaleSettings.indexOf('nodeSize'),\n        es = ~rescaleSettings.indexOf('edgeSize');\n\n    /**\n     * First, we compute the scaling ratio, without considering the sizes\n     * of the nodes : Each node will have its center in the canvas, but might\n     * be partially out of it.\n     */\n    scale = settings('scalingMode') === 'outside' ?\n      Math.max(\n        w / Math.max(maxX - minX, 1),\n        h / Math.max(maxY - minY, 1)\n      ) :\n      Math.min(\n        w / Math.max(maxX - minX, 1),\n        h / Math.max(maxY - minY, 1)\n      );\n\n    /**\n     * Then, we correct that scaling ratio considering a margin, which is\n     * basically the size of the biggest node.\n     * This has to be done as a correction since to compare the size of the\n     * biggest node to the X and Y values, we have to first get an\n     * approximation of the scaling ratio.\n     **/\n    margin =\n      (\n        settings('rescaleIgnoreSize') ?\n          0 :\n          (settings('maxNodeSize') || sizeMax) / scale\n      ) +\n      (settings('sideMargin') || 0);\n    maxX += margin;\n    minX -= margin;\n    maxY += margin;\n    minY -= margin;\n\n    // Fix the scaling with the new extrema:\n    scale = settings('scalingMode') === 'outside' ?\n      Math.max(\n        w / Math.max(maxX - minX, 1),\n        h / Math.max(maxY - minY, 1)\n      ) :\n      Math.min(\n        w / Math.max(maxX - minX, 1),\n        h / Math.max(maxY - minY, 1)\n      );\n\n    // Size homothetic parameters:\n    if (!settings('maxNodeSize') && !settings('minNodeSize')) {\n      a = 1;\n      b = 0;\n    } else if (settings('maxNodeSize') === settings('minNodeSize')) {\n      a = 0;\n      b = +settings('maxNodeSize');\n    } else {\n      a = (settings('maxNodeSize') - settings('minNodeSize')) / sizeMax;\n      b = +settings('minNodeSize');\n    }\n\n    if (!settings('maxEdgeSize') && !settings('minEdgeSize')) {\n      c = 1;\n      d = 0;\n    } else if (settings('maxEdgeSize') === settings('minEdgeSize')) {\n      c = 0;\n      d = +settings('minEdgeSize');\n    } else {\n      c = (settings('maxEdgeSize') - settings('minEdgeSize')) / weightMax;\n      d = +settings('minEdgeSize');\n    }\n\n    // Rescale the nodes and edges:\n    for (i = 0, l = e.length; i < l; i++)\n      e[i][writePrefix + 'size'] =\n        e[i][readPrefix + 'size'] * (es ? c : 1) + (es ? d : 0);\n\n    for (i = 0, l = n.length; i < l; i++) {\n      n[i][writePrefix + 'size'] =\n        n[i][readPrefix + 'size'] * (ns ? a : 1) + (ns ? b : 0);\n      n[i][writePrefix + 'x'] =\n        (n[i][readPrefix + 'x'] - (maxX + minX) / 2) * (np ? scale : 1);\n      n[i][writePrefix + 'y'] =\n        (n[i][readPrefix + 'y'] - (maxY + minY) / 2) * (np ? scale : 1);\n    }\n  };\n\n  sigma.utils.getBoundaries = function(graph, prefix, doEdges) {\n    var i,\n        l,\n        e = graph.edges(),\n        n = graph.nodes(),\n        weightMax = -Infinity,\n        sizeMax = -Infinity,\n        minX = Infinity,\n        minY = Infinity,\n        maxX = -Infinity,\n        maxY = -Infinity;\n\n    if (doEdges)\n      for (i = 0, l = e.length; i < l; i++)\n        weightMax = Math.max(e[i][prefix + 'size'], weightMax);\n\n    for (i = 0, l = n.length; i < l; i++) {\n      sizeMax = Math.max(n[i][prefix + 'size'], sizeMax);\n      maxX = Math.max(n[i][prefix + 'x'], maxX);\n      minX = Math.min(n[i][prefix + 'x'], minX);\n      maxY = Math.max(n[i][prefix + 'y'], maxY);\n      minY = Math.min(n[i][prefix + 'y'], minY);\n    }\n\n    weightMax = weightMax || 1;\n    sizeMax = sizeMax || 1;\n\n    return {\n      weightMax: weightMax,\n      sizeMax: sizeMax,\n      minX: minX,\n      minY: minY,\n      maxX: maxX,\n      maxY: maxY\n    };\n  };\n}).call(this);\n\n;(function(undefined) {\n  'use strict';\n\n  if (typeof sigma === 'undefined')\n    throw 'sigma is not declared';\n\n  // Initialize packages:\n  sigma.utils.pkg('sigma.middlewares');\n\n  /**\n   * This middleware will just copy the graphic properties.\n   *\n   * @param {?string} readPrefix  The read prefix.\n   * @param {?string} writePrefix The write prefix.\n   */\n  sigma.middlewares.copy = function(readPrefix, writePrefix) {\n    var i,\n        l,\n        a;\n\n    if (writePrefix + '' === readPrefix + '')\n      return;\n\n    a = this.graph.nodes();\n    for (i = 0, l = a.length; i < l; i++) {\n      a[i][writePrefix + 'x'] = a[i][readPrefix + 'x'];\n      a[i][writePrefix + 'y'] = a[i][readPrefix + 'y'];\n      a[i][writePrefix + 'size'] = a[i][readPrefix + 'size'];\n    }\n\n    a = this.graph.edges();\n    for (i = 0, l = a.length; i < l; i++)\n      a[i][writePrefix + 'size'] = a[i][readPrefix + 'size'];\n  };\n}).call(this);\n\n;(function(undefined) {\n  'use strict';\n\n  if (typeof sigma === 'undefined')\n    throw 'sigma is not declared';\n\n  // Initialize packages:\n  sigma.utils.pkg('sigma.misc.animation.running');\n\n  /**\n   * Generates a unique ID for the animation.\n   *\n   * @return {string} Returns the new ID.\n   */\n  var _getID = (function() {\n    var id = 0;\n    return function() {\n      return '' + (++id);\n    };\n  })();\n\n  /**\n   * This function animates a camera. It has to be called with the camera to\n   * animate, the values of the coordinates to reach and eventually some\n   * options. It returns a number id, that you can use to kill the animation,\n   * with the method sigma.misc.animation.kill(id).\n   *\n   * The available options are:\n   *\n   *   {?number}            duration   The duration of the animation.\n   *   {?function}          onNewFrame A callback to execute when the animation\n   *                                   enter a new frame.\n   *   {?function}          onComplete A callback to execute when the animation\n   *                                   is completed or killed.\n   *   {?(string|function)} easing     The name of a function from the package\n   *                                   sigma.utils.easings, or a custom easing\n   *                                   function.\n   *\n   * @param  {camera}  camera  The camera to animate.\n   * @param  {object}  target  The coordinates to reach.\n   * @param  {?object} options Eventually an object to specify some options to\n   *                           the function. The available options are\n   *                           presented in the description of the function.\n   * @return {number}          The animation id, to make it easy to kill\n   *                           through the method \"sigma.misc.animation.kill\".\n   */\n  sigma.misc.animation.camera = function(camera, val, options) {\n    if (\n      !(camera instanceof sigma.classes.camera) ||\n      typeof val !== 'object' ||\n      !val\n    )\n      throw 'animation.camera: Wrong arguments.';\n\n    if (\n      typeof val.x !== 'number' &&\n      typeof val.y !== 'number' &&\n      typeof val.ratio !== 'number' &&\n      typeof val.angle !== 'number'\n    )\n      throw 'There must be at least one valid coordinate in the given val.';\n\n    var fn,\n        id,\n        anim,\n        easing,\n        duration,\n        initialVal,\n        o = options || {},\n        start = sigma.utils.dateNow();\n\n    // Store initial values:\n    initialVal = {\n      x: camera.x,\n      y: camera.y,\n      ratio: camera.ratio,\n      angle: camera.angle\n    };\n\n    duration = o.duration;\n    easing = typeof o.easing !== 'function' ?\n      sigma.utils.easings[o.easing || 'quadraticInOut'] :\n      o.easing;\n\n    fn = function() {\n      var coef,\n          t = o.duration ? (sigma.utils.dateNow() - start) / o.duration : 1;\n\n      // If the animation is over:\n      if (t >= 1) {\n        camera.isAnimated = false;\n        camera.goTo({\n          x: val.x !== undefined ? val.x : initialVal.x,\n          y: val.y !== undefined ? val.y : initialVal.y,\n          ratio: val.ratio !== undefined ? val.ratio : initialVal.ratio,\n          angle: val.angle !== undefined ? val.angle : initialVal.angle\n        });\n\n        cancelAnimationFrame(id);\n        delete sigma.misc.animation.running[id];\n\n        // Check callbacks:\n        if (typeof o.onComplete === 'function')\n          o.onComplete();\n\n      // Else, let's keep going:\n      } else {\n        coef = easing(t);\n        camera.isAnimated = true;\n        camera.goTo({\n          x: val.x !== undefined ?\n            initialVal.x + (val.x - initialVal.x) * coef :\n            initialVal.x,\n          y: val.y !== undefined ?\n            initialVal.y + (val.y - initialVal.y) * coef :\n            initialVal.y,\n          ratio: val.ratio !== undefined ?\n            initialVal.ratio + (val.ratio - initialVal.ratio) * coef :\n            initialVal.ratio,\n          angle: val.angle !== undefined ?\n            initialVal.angle + (val.angle - initialVal.angle) * coef :\n            initialVal.angle\n        });\n\n        // Check callbacks:\n        if (typeof o.onNewFrame === 'function')\n          o.onNewFrame();\n\n        anim.frameId = requestAnimationFrame(fn);\n      }\n    };\n\n    id = _getID();\n    anim = {\n      frameId: requestAnimationFrame(fn),\n      target: camera,\n      type: 'camera',\n      options: o,\n      fn: fn\n    };\n    sigma.misc.animation.running[id] = anim;\n\n    return id;\n  };\n\n  /**\n   * Kills a running animation. It triggers the eventual onComplete callback.\n   *\n   * @param  {number} id  The id of the animation to kill.\n   * @return {object}     Returns the sigma.misc.animation package.\n   */\n  sigma.misc.animation.kill = function(id) {\n    if (arguments.length !== 1 || typeof id !== 'number')\n      throw 'animation.kill: Wrong arguments.';\n\n    var o = sigma.misc.animation.running[id];\n\n    if (o) {\n      cancelAnimationFrame(id);\n      delete sigma.misc.animation.running[o.frameId];\n\n      if (o.type === 'camera')\n        o.target.isAnimated = false;\n\n      // Check callbacks:\n      if (typeof (o.options || {}).onComplete === 'function')\n        o.options.onComplete();\n    }\n\n    return this;\n  };\n\n  /**\n   * Kills every running animations, or only the one with the specified type,\n   * if a string parameter is given.\n   *\n   * @param  {?(string|object)} filter A string to filter the animations to kill\n   *                                   on their type (example: \"camera\"), or an\n   *                                   object to filter on their target.\n   * @return {number}                  Returns the number of animations killed\n   *                                   that way.\n   */\n  sigma.misc.animation.killAll = function(filter) {\n    var o,\n        id,\n        count = 0,\n        type = typeof filter === 'string' ? filter : null,\n        target = typeof filter === 'object' ? filter : null,\n        running = sigma.misc.animation.running;\n\n    for (id in running)\n      if (\n        (!type || running[id].type === type) &&\n        (!target || running[id].target === target)\n      ) {\n        o = sigma.misc.animation.running[id];\n        cancelAnimationFrame(o.frameId);\n        delete sigma.misc.animation.running[id];\n\n        if (o.type === 'camera')\n          o.target.isAnimated = false;\n\n        // Increment counter:\n        count++;\n\n        // Check callbacks:\n        if (typeof (o.options || {}).onComplete === 'function')\n          o.options.onComplete();\n      }\n\n    return count;\n  };\n\n  /**\n   * Returns \"true\" if any animation that is currently still running matches\n   * the filter given to the function.\n   *\n   * @param  {string|object} filter A string to filter the animations to kill\n   *                                on their type (example: \"camera\"), or an\n   *                                object to filter on their target.\n   * @return {boolean}              Returns true if any running animation\n   *                                matches.\n   */\n  sigma.misc.animation.has = function(filter) {\n    var id,\n        type = typeof filter === 'string' ? filter : null,\n        target = typeof filter === 'object' ? filter : null,\n        running = sigma.misc.animation.running;\n\n    for (id in running)\n      if (\n        (!type || running[id].type === type) &&\n        (!target || running[id].target === target)\n      )\n        return true;\n\n    return false;\n  };\n}).call(this);\n\n;(function(undefined) {\n  'use strict';\n\n  if (typeof sigma === 'undefined')\n    throw 'sigma is not declared';\n\n  // Initialize packages:\n  sigma.utils.pkg('sigma.misc');\n\n  /**\n   * This helper will bind any no-DOM renderer (for instance canvas or WebGL)\n   * to its captors, to properly dispatch the good events to the sigma instance\n   * to manage clicking, hovering etc...\n   *\n   * It has to be called in the scope of the related renderer.\n   */\n  sigma.misc.bindEvents = function(prefix) {\n    var i,\n        l,\n        mX,\n        mY,\n        captor,\n        self = this;\n\n    function getNodes(e) {\n      if (e) {\n        mX = 'x' in e.data ? e.data.x : mX;\n        mY = 'y' in e.data ? e.data.y : mY;\n      }\n\n      var i,\n          j,\n          l,\n          n,\n          x,\n          y,\n          s,\n          inserted,\n          selected = [],\n          modifiedX = mX + self.width / 2,\n          modifiedY = mY + self.height / 2,\n          point = self.camera.cameraPosition(\n            mX,\n            mY\n          ),\n          nodes = self.camera.quadtree.point(\n            point.x,\n            point.y\n          );\n\n      if (nodes.length)\n        for (i = 0, l = nodes.length; i < l; i++) {\n          n = nodes[i];\n          x = n[prefix + 'x'];\n          y = n[prefix + 'y'];\n          s = n[prefix + 'size'];\n\n          if (\n            !n.hidden &&\n            modifiedX > x - s &&\n            modifiedX < x + s &&\n            modifiedY > y - s &&\n            modifiedY < y + s &&\n            Math.sqrt(\n              Math.pow(modifiedX - x, 2) +\n              Math.pow(modifiedY - y, 2)\n            ) < s\n          ) {\n            // Insert the node:\n            inserted = false;\n\n            for (j = 0; j < selected.length; j++)\n              if (n.size > selected[j].size) {\n                selected.splice(j, 0, n);\n                inserted = true;\n                break;\n              }\n\n            if (!inserted)\n              selected.push(n);\n          }\n        }\n\n      return selected;\n    }\n\n\n    function getEdges(e) {\n      if (!self.settings('enableEdgeHovering')) {\n        // No event if the setting is off:\n        return [];\n      }\n\n      var isCanvas = (\n        sigma.renderers.canvas && self instanceof sigma.renderers.canvas);\n\n      if (!isCanvas) {\n        // A quick hardcoded rule to prevent people from using this feature\n        // with the WebGL renderer (which is not good enough at the moment):\n        throw new Error(\n          'The edge events feature is not compatible with the WebGL renderer'\n        );\n      }\n\n      if (e) {\n        mX = 'x' in e.data ? e.data.x : mX;\n        mY = 'y' in e.data ? e.data.y : mY;\n      }\n\n      var i,\n          j,\n          l,\n          a,\n          edge,\n          s,\n          maxEpsilon = self.settings('edgeHoverPrecision'),\n          source,\n          target,\n          cp,\n          nodeIndex = {},\n          inserted,\n          selected = [],\n          modifiedX = mX + self.width / 2,\n          modifiedY = mY + self.height / 2,\n          point = self.camera.cameraPosition(\n            mX,\n            mY\n          ),\n          edges = [];\n\n      if (isCanvas) {\n        var nodesOnScreen = self.camera.quadtree.area(\n          self.camera.getRectangle(self.width, self.height)\n        );\n        for (a = nodesOnScreen, i = 0, l = a.length; i < l; i++)\n          nodeIndex[a[i].id] = a[i];\n      }\n\n      if (self.camera.edgequadtree !== undefined) {\n        edges = self.camera.edgequadtree.point(\n          point.x,\n          point.y\n        );\n      }\n\n      function insertEdge(selected, edge) {\n        inserted = false;\n\n        for (j = 0; j < selected.length; j++)\n          if (edge.size > selected[j].size) {\n            selected.splice(j, 0, edge);\n            inserted = true;\n            break;\n          }\n\n        if (!inserted)\n          selected.push(edge);\n      }\n\n      if (edges.length)\n        for (i = 0, l = edges.length; i < l; i++) {\n          edge = edges[i];\n          source = self.graph.nodes(edge.source);\n          target = self.graph.nodes(edge.target);\n          // (HACK) we can't get edge[prefix + 'size'] on WebGL renderer:\n          s = edge[prefix + 'size'] ||\n              edge['read_' + prefix + 'size'];\n\n          // First, let's identify which edges are drawn. To do this, we keep\n          // every edges that have at least one extremity displayed according to\n          // the quadtree and the \"hidden\" attribute. We also do not keep hidden\n          // edges.\n          // Then, let's check if the mouse is on the edge (we suppose that it\n          // is a line segment).\n\n          if (\n            !edge.hidden &&\n            !source.hidden && !target.hidden &&\n            (!isCanvas ||\n              (nodeIndex[edge.source] || nodeIndex[edge.target])) &&\n            sigma.utils.getDistance(\n              source[prefix + 'x'],\n              source[prefix + 'y'],\n              modifiedX,\n              modifiedY) > source[prefix + 'size'] &&\n            sigma.utils.getDistance(\n              target[prefix + 'x'],\n              target[prefix + 'y'],\n              modifiedX,\n              modifiedY) > target[prefix + 'size']\n          ) {\n            if (edge.type == 'curve' || edge.type == 'curvedArrow') {\n              if (source.id === target.id) {\n                cp = sigma.utils.getSelfLoopControlPoints(\n                  source[prefix + 'x'],\n                  source[prefix + 'y'],\n                  source[prefix + 'size']\n                );\n                if (\n                  sigma.utils.isPointOnBezierCurve(\n                  modifiedX,\n                  modifiedY,\n                  source[prefix + 'x'],\n                  source[prefix + 'y'],\n                  target[prefix + 'x'],\n                  target[prefix + 'y'],\n                  cp.x1,\n                  cp.y1,\n                  cp.x2,\n                  cp.y2,\n                  Math.max(s, maxEpsilon)\n                )) {\n                  insertEdge(selected, edge);\n                }\n              }\n              else {\n                cp = sigma.utils.getQuadraticControlPoint(\n                  source[prefix + 'x'],\n                  source[prefix + 'y'],\n                  target[prefix + 'x'],\n                  target[prefix + 'y']);\n                if (\n                  sigma.utils.isPointOnQuadraticCurve(\n                  modifiedX,\n                  modifiedY,\n                  source[prefix + 'x'],\n                  source[prefix + 'y'],\n                  target[prefix + 'x'],\n                  target[prefix + 'y'],\n                  cp.x,\n                  cp.y,\n                  Math.max(s, maxEpsilon)\n                )) {\n                  insertEdge(selected, edge);\n                }\n              }\n            } else if (\n                sigma.utils.isPointOnSegment(\n                modifiedX,\n                modifiedY,\n                source[prefix + 'x'],\n                source[prefix + 'y'],\n                target[prefix + 'x'],\n                target[prefix + 'y'],\n                Math.max(s, maxEpsilon)\n              )) {\n              insertEdge(selected, edge);\n            }\n          }\n        }\n\n      return selected;\n    }\n\n\n    function bindCaptor(captor) {\n      var nodes,\n          edges,\n          overNodes = {},\n          overEdges = {};\n\n      function onClick(e) {\n        if (!self.settings('eventsEnabled'))\n          return;\n\n        self.dispatchEvent('click', e.data);\n\n        nodes = getNodes(e);\n        edges = getEdges(e);\n\n        if (nodes.length) {\n          self.dispatchEvent('clickNode', {\n            node: nodes[0],\n            captor: e.data\n          });\n          self.dispatchEvent('clickNodes', {\n            node: nodes,\n            captor: e.data\n          });\n        } else if (edges.length) {\n          self.dispatchEvent('clickEdge', {\n            edge: edges[0],\n            captor: e.data\n          });\n          self.dispatchEvent('clickEdges', {\n            edge: edges,\n            captor: e.data\n          });\n        } else\n          self.dispatchEvent('clickStage', {captor: e.data});\n      }\n\n      function onDoubleClick(e) {\n        if (!self.settings('eventsEnabled'))\n          return;\n\n        self.dispatchEvent('doubleClick', e.data);\n\n        nodes = getNodes(e);\n        edges = getEdges(e);\n\n        if (nodes.length) {\n          self.dispatchEvent('doubleClickNode', {\n            node: nodes[0],\n            captor: e.data\n          });\n          self.dispatchEvent('doubleClickNodes', {\n            node: nodes,\n            captor: e.data\n          });\n        } else if (edges.length) {\n          self.dispatchEvent('doubleClickEdge', {\n            edge: edges[0],\n            captor: e.data\n          });\n          self.dispatchEvent('doubleClickEdges', {\n            edge: edges,\n            captor: e.data\n          });\n        } else\n          self.dispatchEvent('doubleClickStage', {captor: e.data});\n      }\n\n      function onRightClick(e) {\n        if (!self.settings('eventsEnabled'))\n          return;\n\n        self.dispatchEvent('rightClick', e.data);\n\n        nodes = getNodes(e);\n        edges = getEdges(e);\n\n        if (nodes.length) {\n          self.dispatchEvent('rightClickNode', {\n            node: nodes[0],\n            captor: e.data\n          });\n          self.dispatchEvent('rightClickNodes', {\n            node: nodes,\n            captor: e.data\n          });\n        } else if (edges.length) {\n          self.dispatchEvent('rightClickEdge', {\n            edge: edges[0],\n            captor: e.data\n          });\n          self.dispatchEvent('rightClickEdges', {\n            edge: edges,\n            captor: e.data\n          });\n        } else\n          self.dispatchEvent('rightClickStage', {captor: e.data});\n      }\n\n      function onOut(e) {\n        if (!self.settings('eventsEnabled'))\n          return;\n\n        var k,\n            i,\n            l,\n            le,\n            outNodes = [],\n            outEdges = [];\n\n        for (k in overNodes)\n          outNodes.push(overNodes[k]);\n\n        overNodes = {};\n        // Dispatch both single and multi events:\n        for (i = 0, l = outNodes.length; i < l; i++)\n          self.dispatchEvent('outNode', {\n            node: outNodes[i],\n            captor: e.data\n          });\n        if (outNodes.length)\n          self.dispatchEvent('outNodes', {\n            nodes: outNodes,\n            captor: e.data\n          });\n\n        overEdges = {};\n        // Dispatch both single and multi events:\n        for (i = 0, le = outEdges.length; i < le; i++)\n          self.dispatchEvent('outEdge', {\n            edge: outEdges[i],\n            captor: e.data\n          });\n        if (outEdges.length)\n          self.dispatchEvent('outEdges', {\n            edges: outEdges,\n            captor: e.data\n          });\n      }\n\n      function onMove(e) {\n        if (!self.settings('eventsEnabled'))\n          return;\n\n        nodes = getNodes(e);\n        edges = getEdges(e);\n\n        var i,\n            k,\n            node,\n            edge,\n            newOutNodes = [],\n            newOverNodes = [],\n            currentOverNodes = {},\n            l = nodes.length,\n            newOutEdges = [],\n            newOverEdges = [],\n            currentOverEdges = {},\n            le = edges.length;\n\n        // Check newly overred nodes:\n        for (i = 0; i < l; i++) {\n          node = nodes[i];\n          currentOverNodes[node.id] = node;\n          if (!overNodes[node.id]) {\n            newOverNodes.push(node);\n            overNodes[node.id] = node;\n          }\n        }\n\n        // Check no more overred nodes:\n        for (k in overNodes)\n          if (!currentOverNodes[k]) {\n            newOutNodes.push(overNodes[k]);\n            delete overNodes[k];\n          }\n\n        // Dispatch both single and multi events:\n        for (i = 0, l = newOverNodes.length; i < l; i++)\n          self.dispatchEvent('overNode', {\n            node: newOverNodes[i],\n            captor: e.data\n          });\n        for (i = 0, l = newOutNodes.length; i < l; i++)\n          self.dispatchEvent('outNode', {\n            node: newOutNodes[i],\n            captor: e.data\n          });\n        if (newOverNodes.length)\n          self.dispatchEvent('overNodes', {\n            nodes: newOverNodes,\n            captor: e.data\n          });\n        if (newOutNodes.length)\n          self.dispatchEvent('outNodes', {\n            nodes: newOutNodes,\n            captor: e.data\n          });\n\n        // Check newly overred edges:\n        for (i = 0; i < le; i++) {\n          edge = edges[i];\n          currentOverEdges[edge.id] = edge;\n          if (!overEdges[edge.id]) {\n            newOverEdges.push(edge);\n            overEdges[edge.id] = edge;\n          }\n        }\n\n        // Check no more overred edges:\n        for (k in overEdges)\n          if (!currentOverEdges[k]) {\n            newOutEdges.push(overEdges[k]);\n            delete overEdges[k];\n          }\n\n        // Dispatch both single and multi events:\n        for (i = 0, le = newOverEdges.length; i < le; i++)\n          self.dispatchEvent('overEdge', {\n            edge: newOverEdges[i],\n            captor: e.data\n          });\n        for (i = 0, le = newOutEdges.length; i < le; i++)\n          self.dispatchEvent('outEdge', {\n            edge: newOutEdges[i],\n            captor: e.data\n          });\n        if (newOverEdges.length)\n          self.dispatchEvent('overEdges', {\n            edges: newOverEdges,\n            captor: e.data\n          });\n        if (newOutEdges.length)\n          self.dispatchEvent('outEdges', {\n            edges: newOutEdges,\n            captor: e.data\n          });\n      }\n\n      // Bind events:\n      captor.bind('click', onClick);\n      captor.bind('mousedown', onMove);\n      captor.bind('mouseup', onMove);\n      captor.bind('mousemove', onMove);\n      captor.bind('mouseout', onOut);\n      captor.bind('doubleclick', onDoubleClick);\n      captor.bind('rightclick', onRightClick);\n      self.bind('render', onMove);\n    }\n\n    for (i = 0, l = this.captors.length; i < l; i++)\n      bindCaptor(this.captors[i]);\n  };\n}).call(this);\n\n;(function(undefined) {\n  'use strict';\n\n  if (typeof sigma === 'undefined')\n    throw 'sigma is not declared';\n\n  // Initialize packages:\n  sigma.utils.pkg('sigma.misc');\n\n  /**\n   * This helper will bind any DOM renderer (for instance svg)\n   * to its captors, to properly dispatch the good events to the sigma instance\n   * to manage clicking, hovering etc...\n   *\n   * It has to be called in the scope of the related renderer.\n   */\n  sigma.misc.bindDOMEvents = function(container) {\n    var self = this,\n        graph = this.graph;\n\n    // DOMElement abstraction\n    function Element(domElement) {\n\n      // Helpers\n      this.attr = function(attrName) {\n        return domElement.getAttributeNS(null, attrName);\n      };\n\n      // Properties\n      this.tag = domElement.tagName;\n      this.class = this.attr('class');\n      this.id = this.attr('id');\n\n      // Methods\n      this.isNode = function() {\n        return !!~this.class.indexOf(self.settings('classPrefix') + '-node');\n      };\n\n      this.isEdge = function() {\n        return !!~this.class.indexOf(self.settings('classPrefix') + '-edge');\n      };\n\n      this.isHover = function() {\n        return !!~this.class.indexOf(self.settings('classPrefix') + '-hover');\n      };\n    }\n\n    // Click\n    function click(e) {\n      if (!self.settings('eventsEnabled'))\n        return;\n\n      // Generic event\n      self.dispatchEvent('click', e);\n\n      // Are we on a node?\n      var element = new Element(e.target);\n\n      if (element.isNode())\n        self.dispatchEvent('clickNode', {\n          node: graph.nodes(element.attr('data-node-id'))\n        });\n      else\n        self.dispatchEvent('clickStage');\n\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    // Double click\n    function doubleClick(e) {\n      if (!self.settings('eventsEnabled'))\n        return;\n\n      // Generic event\n      self.dispatchEvent('doubleClick', e);\n\n      // Are we on a node?\n      var element = new Element(e.target);\n\n      if (element.isNode())\n        self.dispatchEvent('doubleClickNode', {\n          node: graph.nodes(element.attr('data-node-id'))\n        });\n      else\n        self.dispatchEvent('doubleClickStage');\n\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    // On over\n    function onOver(e) {\n      var target = e.toElement || e.target;\n\n      if (!self.settings('eventsEnabled') || !target)\n        return;\n\n      var el = new Element(target);\n\n      if (el.isNode()) {\n        self.dispatchEvent('overNode', {\n          node: graph.nodes(el.attr('data-node-id'))\n        });\n      }\n      else if (el.isEdge()) {\n        var edge = graph.edges(el.attr('data-edge-id'));\n        self.dispatchEvent('overEdge', {\n          edge: edge,\n          source: graph.nodes(edge.source),\n          target: graph.nodes(edge.target)\n        });\n      }\n    }\n\n    // On out\n    function onOut(e) {\n      var target = e.fromElement || e.originalTarget;\n\n      if (!self.settings('eventsEnabled'))\n        return;\n\n      var el = new Element(target);\n\n      if (el.isNode()) {\n        self.dispatchEvent('outNode', {\n          node: graph.nodes(el.attr('data-node-id'))\n        });\n      }\n      else if (el.isEdge()) {\n        var edge = graph.edges(el.attr('data-edge-id'));\n        self.dispatchEvent('outEdge', {\n          edge: edge,\n          source: graph.nodes(edge.source),\n          target: graph.nodes(edge.target)\n        });\n      }\n    }\n\n    // Registering Events:\n\n    // Click\n    container.addEventListener('click', click, false);\n    sigma.utils.doubleClick(container, 'click', doubleClick);\n\n    // Touch counterparts\n    container.addEventListener('touchstart', click, false);\n    sigma.utils.doubleClick(container, 'touchstart', doubleClick);\n\n    // Mouseover\n    container.addEventListener('mouseover', onOver, true);\n\n    // Mouseout\n    container.addEventListener('mouseout', onOut, true);\n  };\n}).call(this);\n\n;(function(undefined) {\n  'use strict';\n\n  if (typeof sigma === 'undefined')\n    throw 'sigma is not declared';\n\n  // Initialize packages:\n  sigma.utils.pkg('sigma.misc');\n\n  /**\n   * This method listens to \"overNode\", \"outNode\", \"overEdge\" and \"outEdge\"\n   * events from a renderer and renders the nodes differently on the top layer.\n   * The goal is to make any node label readable with the mouse, and to\n   * highlight hovered nodes and edges.\n   *\n   * It has to be called in the scope of the related renderer.\n   */\n  sigma.misc.drawHovers = function(prefix) {\n    var self = this,\n        hoveredNodes = {},\n        hoveredEdges = {};\n\n    this.bind('overNode', function(event) {\n      var node = event.data.node;\n      if (!node.hidden) {\n        hoveredNodes[node.id] = node;\n        draw();\n      }\n    });\n\n    this.bind('outNode', function(event) {\n      delete hoveredNodes[event.data.node.id];\n      draw();\n    });\n\n    this.bind('overEdge', function(event) {\n      var edge = event.data.edge;\n      if (!edge.hidden) {\n        hoveredEdges[edge.id] = edge;\n        draw();\n      }\n    });\n\n    this.bind('outEdge', function(event) {\n      delete hoveredEdges[event.data.edge.id];\n      draw();\n    });\n\n    this.bind('render', function(event) {\n      draw();\n    });\n\n    function draw() {\n\n      var k,\n          source,\n          target,\n          hoveredNode,\n          hoveredEdge,\n          c = self.contexts.hover.canvas,\n          defaultNodeType = self.settings('defaultNodeType'),\n          defaultEdgeType = self.settings('defaultEdgeType'),\n          nodeRenderers = sigma.canvas.hovers,\n          edgeRenderers = sigma.canvas.edgehovers,\n          extremitiesRenderers = sigma.canvas.extremities,\n          embedSettings = self.settings.embedObjects({\n            prefix: prefix\n          });\n\n      // Clear self.contexts.hover:\n      self.contexts.hover.clearRect(0, 0, c.width, c.height);\n\n      // Node render: single hover\n      if (\n        embedSettings('enableHovering') &&\n        embedSettings('singleHover') &&\n        Object.keys(hoveredNodes).length\n      ) {\n        hoveredNode = hoveredNodes[Object.keys(hoveredNodes)[0]];\n        (\n          nodeRenderers[hoveredNode.type] ||\n          nodeRenderers[defaultNodeType] ||\n          nodeRenderers.def\n        )(\n          hoveredNode,\n          self.contexts.hover,\n          embedSettings\n        );\n      }\n\n      // Node render: multiple hover\n      if (\n        embedSettings('enableHovering') &&\n        !embedSettings('singleHover')\n      )\n        for (k in hoveredNodes)\n          (\n            nodeRenderers[hoveredNodes[k].type] ||\n            nodeRenderers[defaultNodeType] ||\n            nodeRenderers.def\n          )(\n            hoveredNodes[k],\n            self.contexts.hover,\n            embedSettings\n          );\n\n      // Edge render: single hover\n      if (\n        embedSettings('enableEdgeHovering') &&\n        embedSettings('singleHover') &&\n        Object.keys(hoveredEdges).length\n      ) {\n        hoveredEdge = hoveredEdges[Object.keys(hoveredEdges)[0]];\n        source = self.graph.nodes(hoveredEdge.source);\n        target = self.graph.nodes(hoveredEdge.target);\n\n        if (! hoveredEdge.hidden) {\n          (\n            edgeRenderers[hoveredEdge.type] ||\n            edgeRenderers[defaultEdgeType] ||\n            edgeRenderers.def\n          ) (\n            hoveredEdge,\n            source,\n            target,\n            self.contexts.hover,\n            embedSettings\n          );\n\n          if (embedSettings('edgeHoverExtremities')) {\n            (\n              extremitiesRenderers[hoveredEdge.type] ||\n              extremitiesRenderers.def\n            )(\n              hoveredEdge,\n              source,\n              target,\n              self.contexts.hover,\n              embedSettings\n            );\n\n          } else {\n            // Avoid edges rendered over nodes:\n            (\n              sigma.canvas.nodes[source.type] ||\n              sigma.canvas.nodes.def\n            ) (\n              source,\n              self.contexts.hover,\n              embedSettings\n            );\n            (\n              sigma.canvas.nodes[target.type] ||\n              sigma.canvas.nodes.def\n            ) (\n              target,\n              self.contexts.hover,\n              embedSettings\n            );\n          }\n        }\n      }\n\n      // Edge render: multiple hover\n      if (\n        embedSettings('enableEdgeHovering') &&\n        !embedSettings('singleHover')\n      ) {\n        for (k in hoveredEdges) {\n          hoveredEdge = hoveredEdges[k];\n          source = self.graph.nodes(hoveredEdge.source);\n          target = self.graph.nodes(hoveredEdge.target);\n\n          if (!hoveredEdge.hidden) {\n            (\n              edgeRenderers[hoveredEdge.type] ||\n              edgeRenderers[defaultEdgeType] ||\n              edgeRenderers.def\n            ) (\n              hoveredEdge,\n              source,\n              target,\n              self.contexts.hover,\n              embedSettings\n            );\n\n            if (embedSettings('edgeHoverExtremities')) {\n              (\n                extremitiesRenderers[hoveredEdge.type] ||\n                extremitiesRenderers.def\n              )(\n                hoveredEdge,\n                source,\n                target,\n                self.contexts.hover,\n                embedSettings\n              );\n            } else {\n              // Avoid edges rendered over nodes:\n              (\n                sigma.canvas.nodes[source.type] ||\n                sigma.canvas.nodes.def\n              ) (\n                source,\n                self.contexts.hover,\n                embedSettings\n              );\n              (\n                sigma.canvas.nodes[target.type] ||\n                sigma.canvas.nodes.def\n              ) (\n                target,\n                self.contexts.hover,\n                embedSettings\n              );\n            }\n          }\n        }\n      }\n    }\n  };\n}).call(this);\n","(function(a){\"use strict\";function b(a){var b={id:a.id,label:a.label};return a.viz&&(b.viz=a.viz),a.attributes&&(b.attributes=a.attributes),b}function c(a){var b={id:a.id,type:a.type||\"undirected\",label:a.label||\"\",source:a.source,target:a.target,weight:+a.weight||1};return a.viz&&(b.viz=a.viz),a.attributes&&(b.attributes=a.attributes),b}function d(a){function d(){var a={};return l.els.meta?(a.lastmodifieddate=l.els.meta.getAttribute(\"lastmodifieddate\"),h.nodeListEach(l.els.meta.childNodes,function(b){a[b.tagName.toLowerCase()]=b.textContent}),a):a}function e(a){var b=[];return l.els.model[a]&&h.nodeListEach(l.els.model[a],function(a){var c={id:a.getAttribute(\"id\")||a.getAttribute(\"for\"),type:a.getAttribute(\"type\")||\"string\",title:a.getAttribute(\"title\")||\"\"},d=h.nodeListToArray(a.childNodes);d.length>0&&(c.defaultValue=d[0].textContent),b.push(c)}),b.length>0&&b}function f(a,b){var c={},d=b.getElementsByTagName(\"attvalue\"),e=h.nodeListToHash(d,function(a){var b=h.namedNodeMapToObject(a.attributes);return{key:b.id||b.for,value:b.value}});return a.map(function(a){c[a.id]=!(a.id in e)&&\"defaultValue\"in a?h.enforceType(a.type,a.defaultValue):h.enforceType(a.type,e[a.id])}),c}function g(a){var c=[];return h.nodeListEach(l.els.nodes,function(d){var e={id:d.getAttribute(\"id\"),label:d.getAttribute(\"label\")||\"\"};a&&(e.attributes=f(a,d)),l.hasViz&&(e.viz=i(d)),c.push(b(e))}),c}function i(a){var b={},c=h.getFirstElementByTagNS(a,\"viz\",\"color\");if(c){var d=[\"r\",\"g\",\"b\",\"a\"].map(function(a){return c.getAttribute(a)});b.color=h.getRGB(d)}var e=h.getFirstElementByTagNS(a,\"viz\",\"position\");e&&(b.position={},[\"x\",\"y\",\"z\"].map(function(a){b.position[a]=+e.getAttribute(a)}));var f=h.getFirstElementByTagNS(a,\"viz\",\"size\");f&&(b.size=+f.getAttribute(\"value\"));var g=h.getFirstElementByTagNS(a,\"viz\",\"shape\");return g&&(b.shape=g.getAttribute(\"value\")),b}function j(a,b){var d=[];return h.nodeListEach(l.els.edges,function(e){var g=h.namedNodeMapToObject(e.attributes);\"type\"in g||(g.type=b),a&&(g.attributes=f(a,e)),l.hasViz&&(g.viz=k(e)),d.push(c(g))}),d}function k(a){var b={},c=h.getFirstElementByTagNS(a,\"viz\",\"color\");if(c){var d=[\"r\",\"g\",\"b\",\"a\"].map(function(a){return c.getAttribute(a)});b.color=h.getRGB(d)}var e=h.getFirstElementByTagNS(a,\"viz\",\"shape\");e&&(b.shape=e.getAttribute(\"value\"));var f=h.getFirstElementByTagNS(a,\"viz\",\"thickness\");return f&&(b.thickness=+f.getAttribute(\"value\")),b}var l={};l.els={root:a.getElementsByTagName(\"gexf\")[0],graph:a.getElementsByTagName(\"graph\")[0],meta:a.getElementsByTagName(\"meta\")[0],nodes:a.getElementsByTagName(\"node\"),edges:a.getElementsByTagName(\"edge\"),model:h.getModelTags(a)},l.hasViz=!!h.getAttributeNS(l.els.root,\"xmlns\",\"viz\"),l.version=l.els.root.getAttribute(\"version\")||\"1.0\",l.mode=l.els.graph.getAttribute(\"mode\")||\"static\";var m=l.els.graph.getAttribute(\"defaultedgetype\");l.defaultEdgetype=m||\"undirected\";var n=e(\"node\"),o=e(\"edge\"),p={version:l.version,mode:l.mode,defaultEdgeType:l.defaultEdgetype,meta:d(),model:{},nodes:g(n),edges:j(o,l.defaultEdgetype)};return n&&(p.model.node=n),o&&(p.model.edge=o),p}function e(a,b){var c=function(){if(window.XMLHttpRequest)return new XMLHttpRequest;var a,b;if(window.ActiveXObject){a=[\"Msxml2.XMLHTTP.6.0\",\"Msxml2.XMLHTTP.3.0\",\"Msxml2.XMLHTTP\",\"Microsoft.XMLHTTP\"];for(b in a)try{return new ActiveXObject(a[b])}catch(a){}}return null}();if(!c)throw\"XMLHttpRequest not supported, cannot load the file.\";var d,e=\"function\"==typeof b;return c.overrideMimeType?(c.overrideMimeType(\"text/xml\"),d=function(a){return a.responseXML}):d=function(a){return(new DOMParser).parseFromString(a.responseText,\"application/xml\")},c.open(\"GET\",a,e),e&&(c.onreadystatechange=function(){4===c.readyState&&b(d(c))}),c.send(),e?c:d(c)}function f(a){return d(a)}function g(a,b){return\"function\"==typeof b?e(a,function(a){b(d(a))}):d(e(a))}var h={getModelTags:function(a){var b,c=a.getElementsByTagName(\"attributes\"),d={},e=c.length;for(b=0;b<e;b++)d[c[b].getAttribute(\"class\")]=c[b].childNodes;return d},nodeListToArray:function(a){for(var b=[],c=0,d=a.length;c<d;++c)\"#text\"!==a[c].nodeName&&b.push(a[c]);return b},nodeListEach:function(a,b){for(var c=0,d=a.length;c<d;++c)\"#text\"!==a[c].nodeName&&b(a[c])},nodeListToHash:function(a,b){for(var c={},d=0;d<a.length;d++)if(\"#text\"!==a[d].nodeName){var e=b(a[d]);c[e.key]=e.value}return c},namedNodeMapToObject:function(a){for(var b={},c=0;c<a.length;c++)b[a[c].name]=a[c].value;return b},getFirstElementByTagNS:function(a,b,c){var d=a.getElementsByTagName(b+\":\"+c)[0];return d||(d=a.getElementsByTagNameNS(b,c)[0]),d||(d=a.getElementsByTagName(c)[0]),d},getAttributeNS:function(b,c,d){var e=b.getAttribute(c+\":\"+d);return e===a&&(e=b.getAttributeNS(c,d)),e===a&&(e=b.getAttribute(d)),e},enforceType:function(a,b){switch(a){case\"boolean\":b=\"true\"===b;break;case\"integer\":case\"long\":case\"float\":case\"double\":b=+b;break;case\"liststring\":b=b?b.split(\"|\"):[]}return b},getRGB:function(a){return a[3]?\"rgba(\"+a.join(\",\")+\")\":\"rgb(\"+a.slice(0,-1).join(\",\")+\")\"}};if(void 0!==this.gexf)throw'gexf: error - a variable called \"gexf\" already exists in the global scope';this.gexf={parse:f,fetch:g,version:\"0.1.1\"},\"undefined\"!=typeof exports&&this.exports!==exports&&(module.exports=this.gexf)}).call(this),function(a){\"use strict\";function b(){return\"e\"+c++}if(\"undefined\"==typeof sigma)throw\"sigma is not declared\";sigma.utils.pkg(\"sigma.parsers\");var c=0;sigma.parsers.gexf=function(a,c,d){function e(a){for(h=a.nodes,f=0,g=h.length;f<g;f++)i=h[f],i.id=i.id,i.viz&&\"object\"==typeof i.viz&&(i.viz.position&&\"object\"==typeof i.viz.position&&(i.x=i.viz.position.x,i.y=-i.viz.position.y),i.size=i.viz.size,i.color=i.viz.color,i.viz.shape&&(i.type=i.viz.shape));for(h=a.edges,f=0,g=h.length;f<g;f++)i=h[f],i.id=\"string\"==typeof i.id?i.id:b(),i.source=\"\"+i.source,i.target=\"\"+i.target,i.viz&&\"object\"==typeof i.viz&&(i.color=i.viz.color,i.size=i.viz.thickness),i.size=i.weight,i.direction=i.type,delete i.type;if(c instanceof sigma){for(c.graph.clear(),h=a.nodes,f=0,g=h.length;f<g;f++)c.graph.addNode(h[f]);for(h=a.edges,f=0,g=h.length;f<g;f++)c.graph.addEdge(h[f])}else\"object\"==typeof c?(c.graph=a,c=new sigma(c)):\"function\"==typeof c&&(d=c,c=null);return d?void d(c||a):a}var f,g,h,i;if(\"string\"==typeof a)gexf.fetch(a,e);else if(\"object\"==typeof a)return e(gexf.parse(a))}}.call(this);","<script>\n  import sigma from \"sigma.require.js\";\n  import \"plugins/sigma.parsers.gexf.min.js\";\n\n  let elem;\n\n  import { onMount } from \"svelte\";\n\n  sigma.classes.graph.addMethod(\"neighbors\", function(nodeId) {\n    var k,\n      neighbors = {},\n      index = this.allNeighborsIndex[nodeId] || {};\n\n    for (k in index) neighbors[k] = this.nodesIndex[k];\n\n    return neighbors;\n  });\n\n  onMount(() => {\n    sigma.parsers.gexf(\n      \"standard_graph.gexf\",\n\n      {\n        container: elem\n      },\n\n      function(s) {\n        s.graph.nodes().forEach(function(n) {\n          n.originalColor = n.color;\n        });\n        s.graph.edges().forEach(function(e) {\n          e.originalColor = e.color;\n        });\n\n        // When a node is clicked, we check for each node\n        // if it is a neighbor of the clicked one. If not,\n        // we set its color as grey, and else, it takes its\n        // original color.\n        // We do the same for the edges, and we only keep\n        // edges that have both extremities colored.\n        s.bind(\"clickNode\", function(e) {\n          var nodeId = e.data.node.id,\n            toKeep = s.graph.neighbors(nodeId);\n          toKeep[nodeId] = e.data.node;\n\n          s.graph.nodes().forEach(function(n) {\n            if (toKeep[n.id]) n.color = n.originalColor;\n            else n.color = \"#eee\";\n          });\n\n          s.graph.edges().forEach(function(e) {\n            if (toKeep[e.source] && toKeep[e.target]) e.color = e.originalColor;\n            else e.color = \"#eee\";\n          });\n\n          // Since the data has been modified, we need to\n          // call the refresh method to make the colors\n          // update effective.\n          s.refresh();\n        });\n\n        // When the stage is clicked, we just color each\n        // node and edge with its original color.\n        s.bind(\"clickStage\", function(e) {\n          s.graph.nodes().forEach(function(n) {\n            n.color = n.originalColor;\n          });\n\n          s.graph.edges().forEach(function(e) {\n            e.color = e.originalColor;\n          });\n\n          // Same as in the previous event:\n          s.refresh();\n        });\n      }\n    );\n  });\n</script>\n\n<style>\n  .sigmaElement {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n  }\n</style>\n\n<div bind:this={elem} class=\"sigmaElement\" />\n","import App from './App.svelte'\n\nconst app = new App({\n  target: document.body\n})\n\nexport default app\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","insert","target","node","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","current_component","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","i","length","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","transition_in","block","local","delete","mount_component","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","d","make_dirty","then","fill","init","options","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","callbacks","ready","ret","rest","value","hydrate","nodes","Array","from","childNodes","children","l","c","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","undefined","__instances","sigma","conf","o","id","classes","dispatcher","extend","_self","_conf","HTMLElement","renderers","prototype","toString","call","renderer","container","defineProperty","settings","configurable","graph","get","cameras","_handler","e","k","data","dispatchEvent","bind","addRenderer","middlewares","read","refresh","window","addEventListener","addCamera","camera","self","arguments","quadtree","quad","edgequad","edgequadtree","renderCamera","isAnimated","renderersPerCamera","killCamera","v","killRenderer","cameraFrames","kill","getElementById","def","bounds","prefix","rescale","readPrefix","width","height","copy","skipIndexation","utils","getBoundaries","x","minX","y","minY","maxX","maxY","keys","process","console","log","render","force","requestAnimationFrame","hasOwnProperty","instances","version","global","conrad","_lastFrameTime","_isRunning","_jobs","_runningJobs","_sortedByPriorityJobs","_waitingJobs","_doneJobs","_noStart","_parameters","frameDuration","history","_handlers","_dispatch","events","j","i_end","j_end","event","eventName","eArray","isArray","split","handler","_executeFirstJob","test","pushed","time","__dateNow","job","shift","done","currentTime","weightTime","weight","averageTime","count","_activateJob","status","startTime","__clone","_loop","deadJob","after","_killJob","setTimeout","v1","found","end","_hasJob","__extend","res","item","result","__objectValues","Date","now","getTime","hasJob","addJob","_addJob","v2","killJob","killAll","jobs","a1","a2","getStats","stats","pattern","isPatternString","concat","RegExp","match","isRunning","clearHistory","_bind","unbind","module","exports","_root","dateNow","pkg","pkgName","reduce","objName","floatColorCache","floatColor","val","original","r","g","slice","parseInt","charAt","color","zoomTo","ratio","animation","newRatio","coordinates","Math","max","min","duration","misc","easing","goTo","onComplete","getQuadraticControlPoint","x1","y1","x2","y2","getPointOnQuadraticCurve","t","xi","yi","pow","getPointOnBezierCurve","cx","cy","dx","dy","B0_t","B1_t","B2_t","B3_t","getSelfLoopControlPoints","size","getDistance","x0","y0","sqrt","getCircleIntersection","r0","r1","h","rx","ry","abs","xi_prime","yi_prime","isPointOnSegment","epsilon","isPointOnQuadraticCurve","cpx","cpy","dP1P2","old_dt","pt","dt","isPointOnBezierCurve","cpx1","cpy1","cpx2","cpy2","dP1CP1","getX","offsetX","layerX","clientX","getY","offsetY","layerY","clientY","getPixelRatio","screen","deviceXDPI","logicalXDPI","systemXDPI","devicePixelRatio","getWidth","w","ownerSVGElement","baseVal","getCenter","namespaceURI","getHeight","mouseCoords","ctrlKey","metaKey","altKey","shiftKey","getDelta","wheelDelta","detail","getOffset","dom","left","top","offsetTop","offsetLeft","offsetParent","doubleClick","handlers","clicks","_doubleClickHandler","doubleClickTimeout","unbindDoubleClick","removeEventListener","easings","linearNone","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","loadShader","gl","shaderSource","shaderType","error","shader","createShader","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","loadProgram","shaders","attribs","loc","program","createProgram","attachShader","bindAttribLocation","locations","opt_attribs","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","matrices","translation","rotation","angle","m2","cos","sin","scale","multiply","a00","a01","a02","a10","a11","a12","a20","a21","a22","b00","b01","b02","b10","b11","b12","b20","b21","b22","lastTime","vendors","cancelAnimationFrame","currTime","timeToCall","clearTimeout","Function","oThis","TypeError","fNOP","fBound","aArgs","fToBind","apply","clone","immutable","verbose","classPrefix","defaultNodeType","defaultEdgeType","defaultLabelColor","defaultEdgeColor","defaultNodeColor","defaultLabelSize","edgeColor","minArrowSize","font","fontStyle","labelColor","labelSize","labelSizeRatio","labelThreshold","webglOversamplingRatio","borderSize","defaultNodeBorderColor","hoverFont","singleHover","hoverFontStyle","labelHoverShadow","labelHoverShadowColor","nodeHoverColor","defaultNodeHoverColor","labelHoverBGColor","defaultHoverLabelBGColor","labelHoverColor","defaultLabelHoverColor","edgeHoverColor","edgeHoverSizeRatio","defaultEdgeHoverColor","edgeHoverExtremities","drawEdges","drawNodes","drawLabels","drawEdgeLabels","batchEdgesDrawing","hideEdgesOnMove","canvasEdgesBatchSize","webglEdgesBatchSize","scalingMode","sideMargin","minEdgeSize","maxEdgeSize","minNodeSize","maxNodeSize","touchEnabled","mouseEnabled","mouseWheelEnabled","doubleClickEnabled","eventsEnabled","zoomingRatio","doubleClickZoomingRatio","zoomMin","zoomMax","mouseZoomDuration","doubleClickZoomDuration","mouseInertiaDuration","mouseInertiaRatio","touchInertiaDuration","touchInertiaRatio","doubleTapTimeout","dragTimeout","autoResize","autoRescale","enableCamera","enableHovering","enableEdgeHovering","edgeHoverPrecision","rescaleIgnoreSize","skipErrors","nodesPowRatio","edgesPowRatio","animationsTime","n","getEvent","one","args","datas","embedObjects","_methods","_indexes","_initBindings","_methodBindings","_methodBeforeBindings","_defaultSettings","_defaultSettingsFunction","key","nodesArray","edgesArray","nodesIndex","edgesIndex","inNeighborsIndex","outNeighborsIndex","allNeighborsIndex","inNeighborsCount","outNeighborsCount","allNeighborsCount","__bindGraphMethod","methodName","scope","__emptyObject","obj","addMethod","hasMethod","attach","before","bindings","attachBefore","addIndex","validNode","enumerable","edge","source","validEdge","dropEdge","addNode","edges","addEdge","which","in","out","embedObject","isNaN","applyView","write","relCos","relSin","nodeRatio","edgeRatio","xOffset","yOffset","graphPosition","vector","X","Y","cameraPosition","getMatrix","getRectangle","widthVect","heightVect","centerVect","marginX","marginY","_geom","pointToSquare","isAxisAligned","axisAlignedTopPoints","lowerLeftCoor","lowerRightCoor","llc","rectangleCorners","lrc","splitSquare","axis","c1","c2","projection","axisCollision","sc1","sc2","ci","p1","p2","maxc1","maxc2","minc1","collision","col","_quadIndexes","rectangle","quadCorners","indexes","_quadCollision","corners","_quadSubdivide","next","level","subw","round","subh","qx","qy","_quadTree","maxElements","maxLevel","_quadInsert","el","sizedPoint","elements","_tree","_cache","query","params","point","_quadRetrievePoint","quadBounds","xmp","ymp","_quadIndex","area","rect","collisionFunc","rectData","serialized","JSON","stringify","_quadRetrieveArea","els","lineToSquare","quadraticCurveToSquare","cp","selfLoopToSquare","_enabled","captors","mouse","_startCameraX","_startCameraY","_lastCameraX","_lastCameraY","_startMouseX","_startMouseY","_isMouseDown","_isMoving","_hasDragged","_downStartTime","_movingTimeoutId","_target","_camera","_settings","_moveHandler","pos","isMoving","preventDefault","returnValue","stopPropagation","_upHandler","_downHandler","_outHandler","_clickHandler","isDragging","_wheelHandler","touch","_startCameraAngle","_startCameraRatio","_startTouchX0","_startTouchY0","_startTouchX1","_startTouchY1","_startTouchAngle","_startTouchDistance","_touchMode","_doubleTap","_downTouches","position","offset","pageX","pageY","_handleStart","pos0","pos1","touches","atan2","_handleLeave","inertiaRatio","_handleMove","diff","start","dAngle","dRatio","newStageX","newStageY","newStageRatio","newStageAngle","canvas","contexts","domElements","nodesOnScreen","edgesOnScreen","conradId","initDOM","scene","labels","hover","bindEvents","drawHovers","resize","batchSize","tempGCO","embedSettings","hidden","globalCompositeOperation","tag","style","setAttribute","appendChild","toLowerCase","getContext","oldWidth","oldHeight","pixelRatio","offsetWidth","offsetHeight","tagName","clearRect","captor","webgl","nodeFloatArrays","edgeFloatArrays","edgeIndicesArrays","array","Float32Array","POINTS","ATTRIBUTES","computeIndices","nodesGl","edgesGl","matrix","arr","indices","edgePrograms","initProgram","useProgram","scalingRatio","indicesData","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","enable","BLEND","nodePrograms","preserveDrawingBuffer","viewport","COLOR_BUFFER_BIT","svg","groups","hovers","measurementCanvas","freeStyle","bindDOMEvents","bindHovers","subrenderers","forceLabels","hideDOMElements","createElementNS","setAttributeNS","hide","hoveredNode","WebGLRenderingContext","PI","buffer","positionLocation","getAttribLocation","sizeLocation","colorLocation","angleLocation","resolutionLocation","getUniformLocation","matrixLocation","ratioLocation","scaleLocation","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","DYNAMIC_DRAW","uniform2f","uniform1f","uniformMatrix3fv","enableVertexAttribArray","vertexAttribPointer","FLOAT","BYTES_PER_ELEMENT","drawArrays","TRIANGLES","vertexShader","fragmentShader","join","VERTEX_SHADER","FRAGMENT_SHADER","fast","positionLocation1","positionLocation2","thicknessLocation","minusLocation","matrixHalfPiLocation","matrixHalfPiMinusLocation","STATIC_DRAW","uniformMatrix2fv","lineWidth","LINES","arrow","targetSize","targetSizeLocation","delayLocation","headLocation","headPositionLocation","nodeRatioLocation","arrowHeadLocation","fontSize","label","fillStyle","fillText","beginPath","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","measureText","moveTo","arcTo","lineTo","closePath","arc","strokeStyle","stroke","tSize","sX","sY","tX","tY","aSize","aX","aY","vX","vY","edgehovers","hover_color","curve","sSize","bezierCurveTo","quadraticCurveTo","curvedArrow","extremities","show","display","circle","line","path","text","fontColor","innerHTML","textContent","nodeCircle","group","writePrefix","margin","sizeMax","weightMax","rescaleSettings","validSettings","nodePosition","nodeSize","edgeSize","np","ns","es","doEdges","Infinity","_getID","anim","initialVal","coef","running","onNewFrame","frameId","mX","mY","getNodes","s","inserted","selected","modifiedX","modifiedY","getEdges","isCanvas","maxEpsilon","nodeIndex","insertEdge","bindCaptor","overNodes","overEdges","onMove","newOutNodes","newOverNodes","currentOverNodes","newOutEdges","newOverEdges","currentOverEdges","le","outNodes","outEdges","Element","domElement","attr","attrName","getAttributeNS","class","isNode","isEdge","isHover","click","toElement","fromElement","originalTarget","hoveredNodes","hoveredEdges","draw","hoveredEdge","nodeRenderers","edgeRenderers","extremitiesRenderers","model","nodeListEach","getAttribute","title","nodeListToArray","defaultValue","f","getElementsByTagName","nodeListToHash","namedNodeMapToObject","attributes","for","enforceType","root","meta","getModelTags","hasViz","mode","defaultEdgetype","lastmodifieddate","viz","getFirstElementByTagNS","getRGB","shape","thickness","XMLHttpRequest","ActiveXObject","overrideMimeType","responseXML","DOMParser","parseFromString","responseText","open","onreadystatechange","readyState","send","nodeName","getElementsByTagNameNS","gexf","parse","fetch","parsers","direction","attribute","removeAttribute","elem","nodeId","neighbors","originalColor","toKeep","outros","body"],"mappings":"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"}